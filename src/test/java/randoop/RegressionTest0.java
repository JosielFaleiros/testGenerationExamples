package randoop;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float18 = calculadora10.calcularMedia(intArray15, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray24 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float27 = calculadora19.calcularMedia(intArray24, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        float float37 = calculadora19.calcularMedia(intArray30, 0, 10);
        float float40 = calculadora10.calcularMedia(intArray30, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray47 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float50 = calculadora42.calcularMedia(intArray47, (int) (byte) 10, (int) '4');
        float float53 = calculadora41.calcularMedia(intArray47, 10, 0);
        float float56 = calculadora10.calcularMedia(intArray47, (int) (short) 0, 0);
        float float59 = calculadora0.calcularMedia(intArray47, (int) (byte) 100, (int) (short) -1);
        java.lang.Class<?> wildcardClass60 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 0.0f + "'", float18 == 0.0f);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 10.0f + "'", float27 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals((float) float37, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + 10.0f + "'", float50 == 10.0f);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora21.calcularMedia(intArray33, (int) (short) -1, (-1));
        float float46 = calculadora0.calcularMedia(intArray33, (int) ' ', (int) 'a');
        java.lang.Class<?> wildcardClass47 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora21.calcularMedia(intArray33, (int) (short) -1, (-1));
        float float46 = calculadora0.calcularMedia(intArray33, (int) ' ', (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = calculadora47.getClass();
        int[] intArray57 = null;
        float float60 = calculadora47.calcularMedia(intArray57, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray67 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float70 = calculadora62.calcularMedia(intArray67, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass72 = calculadora71.getClass();
        int[] intArray73 = new int[] {};
        float float76 = calculadora71.calcularMedia(intArray73, 100, 1);
        java.lang.Class<?> wildcardClass77 = intArray73.getClass();
        float float80 = calculadora62.calcularMedia(intArray73, 0, 10);
        float float83 = calculadora61.calcularMedia(intArray73, (int) (short) -1, (-1));
        float float86 = calculadora47.calcularMedia(intArray73, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora87 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass88 = calculadora87.getClass();
        int[] intArray89 = new int[] {};
        float float92 = calculadora87.calcularMedia(intArray89, 100, 1);
        java.lang.Class<?> wildcardClass93 = intArray89.getClass();
        float float96 = calculadora47.calcularMedia(intArray89, (int) (byte) 100, (int) (byte) 10);
        float float99 = calculadora0.calcularMedia(intArray89, (int) '4', 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 10.0f + "'", float70 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals((float) float80, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + (-1.0f) + "'", float96 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + (-1.0f) + "'", float99 == (-1.0f));
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora21.calcularMedia(intArray41, 10, (int) (short) 0);
        float float54 = calculadora0.calcularMedia(intArray41, (int) (short) 0, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float63 = calculadora55.calcularMedia(intArray60, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray69 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float72 = calculadora64.calcularMedia(intArray69, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        java.lang.Class<?> wildcardClass79 = intArray75.getClass();
        float float82 = calculadora64.calcularMedia(intArray75, 0, 10);
        float float85 = calculadora55.calcularMedia(intArray75, 10, (int) (short) 0);
        float float88 = calculadora0.calcularMedia(intArray75, (int) '4', (int) (byte) 100);
        java.lang.Class<?> wildcardClass89 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 0.0f + "'", float63 == 0.0f);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 10.0f + "'", float72 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals((float) float82, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float27 = calculadora19.calcularMedia(intArray24, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora28.calcularMedia(intArray39, 0, 10);
        float float49 = calculadora19.calcularMedia(intArray39, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        float float62 = calculadora50.calcularMedia(intArray56, 10, 0);
        float float65 = calculadora19.calcularMedia(intArray56, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass66 = intArray56.getClass();
        float float69 = calculadora0.calcularMedia(intArray56, (int) '4', (int) (short) -1);
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        int[] intArray72 = null;
        float float75 = calculadora0.calcularMedia(intArray72, (int) (short) 100, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray43 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float46 = calculadora38.calcularMedia(intArray43, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray49 = new int[] {};
        float float52 = calculadora47.calcularMedia(intArray49, 100, 1);
        java.lang.Class<?> wildcardClass53 = intArray49.getClass();
        float float56 = calculadora38.calcularMedia(intArray49, 0, 10);
        float float59 = calculadora37.calcularMedia(intArray49, (int) (short) -1, (-1));
        float float62 = calculadora14.calcularMedia(intArray49, (int) (byte) -1, (int) 'a');
        float float65 = calculadora0.calcularMedia(intArray49, (int) ' ', 10);
        java.lang.Class<?> wildcardClass66 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass67 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass68 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + 10.0f + "'", float46 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals((float) float56, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora23.calcularMedia(intArray31, 10, (int) 'a');
        java.lang.Class<?> wildcardClass39 = intArray31.getClass();
        float float42 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float51 = calculadora43.calcularMedia(intArray48, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass52 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray64 = new int[] {};
        float float67 = calculadora62.calcularMedia(intArray64, 100, 1);
        java.lang.Class<?> wildcardClass68 = intArray64.getClass();
        float float71 = calculadora53.calcularMedia(intArray64, 0, 10);
        float float74 = calculadora43.calcularMedia(intArray64, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray80 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float83 = calculadora75.calcularMedia(intArray80, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass84 = intArray80.getClass();
        float float87 = calculadora43.calcularMedia(intArray80, (int) '#', 10);
        float float90 = calculadora0.calcularMedia(intArray80, (int) (short) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass91 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals((float) float71, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 10.0f + "'", float83 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora21.calcularMedia(intArray41, 10, (int) (short) 0);
        float float54 = calculadora0.calcularMedia(intArray41, (int) (short) 0, (int) 'a');
        java.lang.Class<?> wildcardClass55 = intArray41.getClass();
        java.lang.Class<?> wildcardClass56 = intArray41.getClass();
        java.lang.Class<?> wildcardClass57 = intArray41.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float27 = calculadora19.calcularMedia(intArray24, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora28.calcularMedia(intArray39, 0, 10);
        float float49 = calculadora19.calcularMedia(intArray39, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        float float62 = calculadora50.calcularMedia(intArray56, 10, 0);
        float float65 = calculadora19.calcularMedia(intArray56, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass66 = intArray56.getClass();
        float float69 = calculadora0.calcularMedia(intArray56, (int) '4', (int) (short) -1);
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        int[] intArray71 = null;
        float float74 = calculadora0.calcularMedia(intArray71, (int) (byte) -1, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass76 = calculadora75.getClass();
        int[] intArray77 = new int[] {};
        float float80 = calculadora75.calcularMedia(intArray77, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora81 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass82 = calculadora81.getClass();
        int[] intArray83 = new int[] {};
        float float86 = calculadora81.calcularMedia(intArray83, 100, 1);
        java.lang.Class<?> wildcardClass87 = intArray83.getClass();
        float float90 = calculadora75.calcularMedia(intArray83, 10, (int) 'a');
        java.lang.Class<?> wildcardClass91 = intArray83.getClass();
        java.lang.Class<?> wildcardClass92 = intArray83.getClass();
        float float95 = calculadora0.calcularMedia(intArray83, (int) (short) 0, (int) 'a');
        java.lang.Class<?> wildcardClass96 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals((float) float90, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertEquals((float) float95, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray53 = new int[] {};
        float float56 = calculadora51.calcularMedia(intArray53, 100, 1);
        java.lang.Class<?> wildcardClass57 = intArray53.getClass();
        float float60 = calculadora45.calcularMedia(intArray53, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray66 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float69 = calculadora61.calcularMedia(intArray66, 0, (int) (short) 1);
        float float72 = calculadora45.calcularMedia(intArray66, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray78 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float81 = calculadora73.calcularMedia(intArray78, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora82 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray87 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float90 = calculadora82.calcularMedia(intArray87, (int) (byte) 10, (int) '4');
        float float93 = calculadora73.calcularMedia(intArray87, (int) (byte) 1, (int) '4');
        float float96 = calculadora45.calcularMedia(intArray87, (int) (byte) 10, (int) (byte) 10);
        float float99 = calculadora0.calcularMedia(intArray87, (int) (byte) 10, (int) (byte) 1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals((float) float60, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 0.0f + "'", float69 == 0.0f);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 55.0f + "'", float72 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + 0.0f + "'", float81 == 0.0f);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + 10.0f + "'", float90 == 10.0f);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + 5.5f + "'", float93 == 5.5f);
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + (-1.0f) + "'", float96 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + (-1.0f) + "'", float99 == (-1.0f));
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        int[] intArray21 = null;
        float float24 = calculadora11.calcularMedia(intArray21, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora11.calcularMedia(intArray31, 100, (int) '#');
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray49 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float52 = calculadora44.calcularMedia(intArray49, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass54 = calculadora53.getClass();
        int[] intArray55 = new int[] {};
        float float58 = calculadora53.calcularMedia(intArray55, 100, 1);
        java.lang.Class<?> wildcardClass59 = intArray55.getClass();
        float float62 = calculadora44.calcularMedia(intArray55, 0, 10);
        java.lang.Class<?> wildcardClass63 = calculadora44.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray69 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float72 = calculadora64.calcularMedia(intArray69, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        java.lang.Class<?> wildcardClass79 = intArray75.getClass();
        float float82 = calculadora64.calcularMedia(intArray75, 0, 10);
        float float85 = calculadora44.calcularMedia(intArray75, 0, (int) ' ');
        java.lang.Class<?> wildcardClass86 = calculadora44.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora87 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass88 = calculadora87.getClass();
        int[] intArray89 = new int[] {};
        float float92 = calculadora87.calcularMedia(intArray89, 100, 1);
        java.lang.Class<?> wildcardClass93 = intArray89.getClass();
        float float96 = calculadora44.calcularMedia(intArray89, (int) (byte) 100, (int) (short) -1);
        float float99 = calculadora0.calcularMedia(intArray89, (int) (short) -1, (int) (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 10.0f + "'", float52 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals((float) float62, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 10.0f + "'", float72 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals((float) float82, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float85, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + (-1.0f) + "'", float96 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + (-1.0f) + "'", float99 == (-1.0f));
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass22 = calculadora13.getClass();
        int[] intArray23 = null;
        float float26 = calculadora13.calcularMedia(intArray23, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        float float39 = calculadora27.calcularMedia(intArray33, 10, 0);
        float float42 = calculadora13.calcularMedia(intArray33, 100, (int) '#');
        float float45 = calculadora0.calcularMedia(intArray33, (int) (byte) 1, (int) (short) 1);
        java.lang.Class<?> wildcardClass46 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray32 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float35 = calculadora27.calcularMedia(intArray32, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass37 = calculadora36.getClass();
        int[] intArray38 = new int[] {};
        float float41 = calculadora36.calcularMedia(intArray38, 100, 1);
        java.lang.Class<?> wildcardClass42 = intArray38.getClass();
        java.lang.Class<?> wildcardClass43 = intArray38.getClass();
        float float46 = calculadora27.calcularMedia(intArray38, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass47 = calculadora27.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        float float60 = calculadora48.calcularMedia(intArray54, 10, 0);
        float float63 = calculadora27.calcularMedia(intArray54, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        java.lang.Class<?> wildcardClass71 = intArray66.getClass();
        float float74 = calculadora27.calcularMedia(intArray66, 0, (int) '#');
        float float77 = calculadora21.calcularMedia(intArray66, (int) '#', (int) (byte) 0);
        float float80 = calculadora0.calcularMedia(intArray66, (int) (short) -1, (int) (short) -1);
        int[] intArray81 = null;
        try {
            float float84 = calculadora0.calcularMedia(intArray81, (int) (byte) 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + 10.0f + "'", float35 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + (-1.0f) + "'", float41 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray29 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float32 = calculadora24.calcularMedia(intArray29, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora24.calcularMedia(intArray35, 0, 10);
        float float45 = calculadora23.calcularMedia(intArray35, (int) (short) -1, (-1));
        float float48 = calculadora0.calcularMedia(intArray35, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass49 = intArray35.getClass();
        java.lang.Class<?> wildcardClass50 = intArray35.getClass();
        java.lang.Class<?> wildcardClass51 = intArray35.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 10.0f + "'", float32 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals((float) float42, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora20.calcularMedia(intArray31, 0, 10);
        float float41 = calculadora0.calcularMedia(intArray31, 0, (int) ' ');
        java.lang.Class<?> wildcardClass42 = intArray31.getClass();
        java.lang.Class<?> wildcardClass43 = intArray31.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass36 = calculadora35.getClass();
        int[] intArray37 = new int[] {};
        float float40 = calculadora35.calcularMedia(intArray37, 100, 1);
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora29.calcularMedia(intArray37, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        float float56 = calculadora29.calcularMedia(intArray50, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass67 = calculadora66.getClass();
        int[] intArray68 = new int[] {};
        float float71 = calculadora66.calcularMedia(intArray68, 100, 1);
        java.lang.Class<?> wildcardClass72 = intArray68.getClass();
        float float75 = calculadora57.calcularMedia(intArray68, 0, 10);
        java.lang.Class<?> wildcardClass76 = intArray68.getClass();
        float float79 = calculadora29.calcularMedia(intArray68, 100, (int) '4');
        float float82 = calculadora28.calcularMedia(intArray68, (int) (short) 100, (int) (byte) -1);
        float float85 = calculadora0.calcularMedia(intArray68, (int) ' ', (int) '#');
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass87 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals((float) float44, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 55.0f + "'", float56 == 55.0f);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertEquals((float) float75, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertEquals((float) float85, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        int[] intArray9 = null;
        try {
            float float12 = calculadora0.calcularMedia(intArray9, 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        java.lang.Class<?> wildcardClass51 = intArray45.getClass();
        float float54 = calculadora0.calcularMedia(intArray45, (int) '#', (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        float float63 = calculadora0.calcularMedia(intArray57, 0, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float72 = calculadora64.calcularMedia(intArray69, 0, (int) (short) 1);
        float float75 = calculadora0.calcularMedia(intArray69, (int) (short) 100, (int) (short) 0);
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 97.0f + "'", float54 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 0.0f + "'", float72 == 0.0f);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float28 = calculadora20.calcularMedia(intArray25, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        float float50 = calculadora20.calcularMedia(intArray40, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora51.calcularMedia(intArray57, 10, 0);
        float float66 = calculadora20.calcularMedia(intArray57, (int) (short) 0, 0);
        float float69 = calculadora0.calcularMedia(intArray57, (-1), (int) '4');
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass72 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.0f + "'", float28 == 0.0f);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass6 = calculadora5.getClass();
        java.lang.Class<?> wildcardClass7 = calculadora5.getClass();
        java.lang.Class<?> wildcardClass8 = calculadora5.getClass();
        java.lang.Class<?> wildcardClass9 = calculadora5.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora5.calcularMedia(intArray21, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass32 = calculadora5.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float41 = calculadora33.calcularMedia(intArray38, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray47 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float50 = calculadora42.calcularMedia(intArray47, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray53 = new int[] {};
        float float56 = calculadora51.calcularMedia(intArray53, 100, 1);
        java.lang.Class<?> wildcardClass57 = intArray53.getClass();
        float float60 = calculadora42.calcularMedia(intArray53, 0, 10);
        float float63 = calculadora33.calcularMedia(intArray53, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray70 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float73 = calculadora65.calcularMedia(intArray70, (int) (byte) 10, (int) '4');
        float float76 = calculadora64.calcularMedia(intArray70, 10, 0);
        float float79 = calculadora33.calcularMedia(intArray70, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray85 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float88 = calculadora80.calcularMedia(intArray85, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass89 = intArray85.getClass();
        java.lang.Class<?> wildcardClass90 = intArray85.getClass();
        float float93 = calculadora33.calcularMedia(intArray85, 10, (int) 'a');
        float float96 = calculadora5.calcularMedia(intArray85, (int) ' ', (int) (byte) 100);
        float float99 = calculadora0.calcularMedia(intArray85, (int) (byte) 0, (int) (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 0.0f + "'", float41 == 0.0f);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + 10.0f + "'", float50 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals((float) float60, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 10.0f + "'", float73 == 10.0f);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + 10.0f + "'", float88 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + 53.5f + "'", float93 == 53.5f);
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + 97.0f + "'", float96 == 97.0f);
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + 36.0f + "'", float99 == 36.0f);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora29.calcularMedia(intArray41, (int) (short) -1, (-1));
        float float54 = calculadora0.calcularMedia(intArray41, (int) (short) 100, 100);
        java.lang.Class<?> wildcardClass55 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float64 = calculadora56.calcularMedia(intArray61, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray70 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float73 = calculadora65.calcularMedia(intArray70, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass75 = calculadora74.getClass();
        int[] intArray76 = new int[] {};
        float float79 = calculadora74.calcularMedia(intArray76, 100, 1);
        java.lang.Class<?> wildcardClass80 = intArray76.getClass();
        float float83 = calculadora65.calcularMedia(intArray76, 0, 10);
        float float86 = calculadora56.calcularMedia(intArray76, 10, (int) (short) 0);
        int[] intArray91 = new int[] { 0, 100, (byte) 0, 'a' };
        float float94 = calculadora56.calcularMedia(intArray91, (int) (byte) -1, (int) 'a');
        float float97 = calculadora0.calcularMedia(intArray91, (int) (byte) 10, (int) ' ');
        java.lang.Class<?> wildcardClass98 = intArray91.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 10.0f + "'", float73 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals((float) float83, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertEquals((float) float97, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float39 = calculadora31.calcularMedia(intArray36, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass40 = calculadora31.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray46 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float49 = calculadora41.calcularMedia(intArray46, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora41.calcularMedia(intArray52, 0, 10);
        float float62 = calculadora31.calcularMedia(intArray52, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray68 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float71 = calculadora63.calcularMedia(intArray68, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass72 = intArray68.getClass();
        float float75 = calculadora31.calcularMedia(intArray68, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray81 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float84 = calculadora76.calcularMedia(intArray81, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        java.lang.Class<?> wildcardClass86 = intArray81.getClass();
        java.lang.Class<?> wildcardClass87 = intArray81.getClass();
        java.lang.Class<?> wildcardClass88 = intArray81.getClass();
        float float91 = calculadora31.calcularMedia(intArray81, (int) (short) 1, 0);
        float float94 = calculadora0.calcularMedia(intArray81, (int) ' ', (int) (short) 100);
        int[] intArray95 = null;
        try {
            float float98 = calculadora0.calcularMedia(intArray95, (int) ' ', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 0.0f + "'", float39 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 10.0f + "'", float49 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 10.0f + "'", float71 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + 10.0f + "'", float84 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + 97.0f + "'", float94 == 97.0f);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        float float43 = calculadora31.calcularMedia(intArray37, 10, 0);
        float float46 = calculadora0.calcularMedia(intArray37, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = calculadora47.getClass();
        java.lang.Class<?> wildcardClass57 = calculadora47.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        float float70 = calculadora58.calcularMedia(intArray64, 10, 0);
        float float73 = calculadora47.calcularMedia(intArray64, (-1), (int) (byte) 0);
        float float76 = calculadora0.calcularMedia(intArray64, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass77 = intArray64.getClass();
        java.lang.Class<?> wildcardClass78 = intArray64.getClass();
        java.lang.Class<?> wildcardClass79 = intArray64.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        float float56 = calculadora0.calcularMedia(intArray50, (int) (byte) 1, (int) (short) 100);
        java.lang.Class<?> wildcardClass57 = intArray50.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 36.0f + "'", float56 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray17 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float20 = calculadora12.calcularMedia(intArray17, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass21 = calculadora12.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora12.calcularMedia(intArray33, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray49 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float52 = calculadora44.calcularMedia(intArray49, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass53 = intArray49.getClass();
        float float56 = calculadora12.calcularMedia(intArray49, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        float float68 = calculadora12.calcularMedia(intArray62, (int) (byte) 1, (int) (short) 100);
        float float71 = calculadora0.calcularMedia(intArray62, (int) (byte) 0, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray77 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float80 = calculadora72.calcularMedia(intArray77, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora81 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass82 = calculadora81.getClass();
        int[] intArray83 = new int[] {};
        float float86 = calculadora81.calcularMedia(intArray83, 100, 1);
        java.lang.Class<?> wildcardClass87 = intArray83.getClass();
        float float90 = calculadora72.calcularMedia(intArray83, 0, 10);
        java.lang.Class<?> wildcardClass91 = intArray83.getClass();
        float float94 = calculadora0.calcularMedia(intArray83, (int) (short) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass95 = intArray83.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 0.0f + "'", float20 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 10.0f + "'", float52 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 36.0f + "'", float68 == 36.0f);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 10.0f + "'", float80 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals((float) float90, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        java.lang.Class<?> wildcardClass36 = intArray31.getClass();
        float float39 = calculadora20.calcularMedia(intArray31, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora20.calcularMedia(intArray51, (int) (short) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass62 = intArray51.getClass();
        float float65 = calculadora0.calcularMedia(intArray51, (int) (byte) 100, (int) ' ');
        java.lang.Class<?> wildcardClass66 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float28 = calculadora20.calcularMedia(intArray25, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass29 = calculadora20.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora20.calcularMedia(intArray41, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass61 = intArray57.getClass();
        float float64 = calculadora20.calcularMedia(intArray57, (int) '#', 10);
        java.lang.Class<?> wildcardClass65 = calculadora20.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass67 = calculadora66.getClass();
        int[] intArray68 = new int[] {};
        float float71 = calculadora66.calcularMedia(intArray68, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass73 = calculadora72.getClass();
        int[] intArray74 = new int[] {};
        float float77 = calculadora72.calcularMedia(intArray74, 100, 1);
        java.lang.Class<?> wildcardClass78 = intArray74.getClass();
        float float81 = calculadora66.calcularMedia(intArray74, 10, (int) 'a');
        java.lang.Class<?> wildcardClass82 = intArray74.getClass();
        java.lang.Class<?> wildcardClass83 = intArray74.getClass();
        float float86 = calculadora20.calcularMedia(intArray74, 100, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora87 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass88 = calculadora87.getClass();
        int[] intArray89 = new int[] {};
        float float92 = calculadora87.calcularMedia(intArray89, 100, 1);
        java.lang.Class<?> wildcardClass93 = intArray89.getClass();
        float float96 = calculadora20.calcularMedia(intArray89, 0, (int) (byte) 1);
        float float99 = calculadora0.calcularMedia(intArray89, 10, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.0f + "'", float28 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals((float) float81, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertEquals((float) float96, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float99, Float.NaN, 0);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass31 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray34 = new int[] {};
        float float37 = calculadora32.calcularMedia(intArray34, 100, 1);
        java.lang.Class<?> wildcardClass38 = intArray34.getClass();
        java.lang.Class<?> wildcardClass39 = intArray34.getClass();
        float float42 = calculadora0.calcularMedia(intArray34, (int) (short) -1, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        float float61 = calculadora43.calcularMedia(intArray54, 0, 10);
        java.lang.Class<?> wildcardClass62 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray68 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float71 = calculadora63.calcularMedia(intArray68, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass73 = calculadora72.getClass();
        int[] intArray74 = new int[] {};
        float float77 = calculadora72.calcularMedia(intArray74, 100, 1);
        java.lang.Class<?> wildcardClass78 = intArray74.getClass();
        float float81 = calculadora63.calcularMedia(intArray74, 0, 10);
        float float84 = calculadora43.calcularMedia(intArray74, 0, (int) ' ');
        java.lang.Class<?> wildcardClass85 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora86 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass87 = calculadora86.getClass();
        int[] intArray88 = new int[] {};
        float float91 = calculadora86.calcularMedia(intArray88, 100, 1);
        java.lang.Class<?> wildcardClass92 = intArray88.getClass();
        float float95 = calculadora43.calcularMedia(intArray88, (int) (byte) 100, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = intArray88.getClass();
        float float99 = calculadora0.calcularMedia(intArray88, (int) (short) 0, (int) (byte) 1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 10.0f + "'", float71 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals((float) float81, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float84, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertEquals((float) float99, Float.NaN, 0);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        java.lang.Class<?> wildcardClass51 = intArray45.getClass();
        float float54 = calculadora0.calcularMedia(intArray45, (int) '#', (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        float float63 = calculadora0.calcularMedia(intArray57, 0, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float72 = calculadora64.calcularMedia(intArray69, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray78 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float81 = calculadora73.calcularMedia(intArray78, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora82 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass83 = calculadora82.getClass();
        int[] intArray84 = new int[] {};
        float float87 = calculadora82.calcularMedia(intArray84, 100, 1);
        java.lang.Class<?> wildcardClass88 = intArray84.getClass();
        float float91 = calculadora73.calcularMedia(intArray84, 0, 10);
        float float94 = calculadora64.calcularMedia(intArray84, 10, (int) (short) 0);
        float float97 = calculadora0.calcularMedia(intArray84, (int) (short) 0, (int) 'a');
        java.lang.Class<?> wildcardClass98 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 97.0f + "'", float54 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 0.0f + "'", float72 == 0.0f);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + 10.0f + "'", float81 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertEquals((float) float91, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertEquals((float) float97, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Class<?> wildcardClass2 = obj0.getClass();
        java.lang.Class<?> wildcardClass3 = obj0.getClass();
        java.lang.Class<?> wildcardClass4 = obj0.getClass();
        java.lang.Class<?> wildcardClass5 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) -1, (int) ' ');
        java.lang.Class<?> wildcardClass47 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray53 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float56 = calculadora48.calcularMedia(intArray53, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass57 = calculadora48.getClass();
        int[] intArray58 = null;
        float float61 = calculadora48.calcularMedia(intArray58, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray68 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float71 = calculadora63.calcularMedia(intArray68, (int) (byte) 10, (int) '4');
        float float74 = calculadora62.calcularMedia(intArray68, 10, 0);
        float float77 = calculadora48.calcularMedia(intArray68, 100, (int) '#');
        float float80 = calculadora0.calcularMedia(intArray68, 1, (int) (short) 100);
        java.lang.Class<?> wildcardClass81 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 0.0f + "'", float56 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 10.0f + "'", float71 == 10.0f);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 36.0f + "'", float80 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float28 = calculadora20.calcularMedia(intArray25, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        float float50 = calculadora20.calcularMedia(intArray40, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora51.calcularMedia(intArray57, 10, 0);
        float float66 = calculadora20.calcularMedia(intArray57, (int) (short) 0, 0);
        float float69 = calculadora0.calcularMedia(intArray57, (-1), (int) '4');
        int[] intArray70 = null;
        try {
            float float73 = calculadora0.calcularMedia(intArray70, (int) (short) 0, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.0f + "'", float28 == 0.0f);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora0.calcularMedia(intArray42, (int) (byte) 100, (int) (byte) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray55 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float58 = calculadora50.calcularMedia(intArray55, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass60 = calculadora59.getClass();
        int[] intArray61 = new int[] {};
        float float64 = calculadora59.calcularMedia(intArray61, 100, 1);
        java.lang.Class<?> wildcardClass65 = intArray61.getClass();
        java.lang.Class<?> wildcardClass66 = intArray61.getClass();
        float float69 = calculadora50.calcularMedia(intArray61, (int) ' ', (int) (byte) -1);
        float float72 = calculadora0.calcularMedia(intArray61, 100, (int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = intArray61.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 10.0f + "'", float58 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        java.lang.Class<?> wildcardClass51 = intArray45.getClass();
        float float54 = calculadora0.calcularMedia(intArray45, (int) '#', (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        float float63 = calculadora0.calcularMedia(intArray57, 0, (int) (short) 10);
        int[] intArray64 = null;
        float float67 = calculadora0.calcularMedia(intArray64, (int) (byte) 1, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray73 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float76 = calculadora68.calcularMedia(intArray73, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass77 = intArray73.getClass();
        java.lang.Class<?> wildcardClass78 = intArray73.getClass();
        java.lang.Class<?> wildcardClass79 = intArray73.getClass();
        float float82 = calculadora0.calcularMedia(intArray73, (int) (short) 10, 0);
        java.lang.Class<?> wildcardClass83 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 97.0f + "'", float54 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.0f + "'", float76 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        float float61 = calculadora46.calcularMedia(intArray54, 10, (int) 'a');
        java.lang.Class<?> wildcardClass62 = intArray54.getClass();
        java.lang.Class<?> wildcardClass63 = intArray54.getClass();
        float float66 = calculadora0.calcularMedia(intArray54, 100, (int) (byte) 0);
        java.lang.Class<?> wildcardClass67 = calculadora0.getClass();
        int[] intArray68 = null;
        float float71 = calculadora0.calcularMedia(intArray68, (int) 'a', (int) '#');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        java.lang.Class<?> wildcardClass36 = calculadora34.getClass();
        java.lang.Class<?> wildcardClass37 = calculadora34.getClass();
        java.lang.Class<?> wildcardClass38 = calculadora34.getClass();
        java.lang.Class<?> wildcardClass39 = calculadora34.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora40.calcularMedia(intArray48, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float64 = calculadora56.calcularMedia(intArray61, 0, (int) (short) 1);
        float float67 = calculadora40.calcularMedia(intArray61, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray73 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float76 = calculadora68.calcularMedia(intArray73, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray82 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float85 = calculadora77.calcularMedia(intArray82, (int) (byte) 10, (int) '4');
        float float88 = calculadora68.calcularMedia(intArray82, (int) (byte) 1, (int) '4');
        float float91 = calculadora40.calcularMedia(intArray82, (int) (byte) 10, (int) (byte) 10);
        float float94 = calculadora34.calcularMedia(intArray82, (-1), 1);
        float float97 = calculadora0.calcularMedia(intArray82, 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 55.0f + "'", float67 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.0f + "'", float76 == 0.0f);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + 10.0f + "'", float85 == 10.0f);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + 5.5f + "'", float88 == 5.5f);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass31 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray44 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float47 = calculadora39.calcularMedia(intArray44, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        java.lang.Class<?> wildcardClass55 = intArray50.getClass();
        float float58 = calculadora39.calcularMedia(intArray50, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass59 = calculadora39.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray66 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float69 = calculadora61.calcularMedia(intArray66, (int) (byte) 10, (int) '4');
        float float72 = calculadora60.calcularMedia(intArray66, 10, 0);
        float float75 = calculadora39.calcularMedia(intArray66, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass77 = calculadora76.getClass();
        int[] intArray78 = new int[] {};
        float float81 = calculadora76.calcularMedia(intArray78, 100, 1);
        java.lang.Class<?> wildcardClass82 = intArray78.getClass();
        java.lang.Class<?> wildcardClass83 = intArray78.getClass();
        float float86 = calculadora39.calcularMedia(intArray78, 0, (int) '#');
        float float89 = calculadora33.calcularMedia(intArray78, (int) '#', (int) (byte) 0);
        java.lang.Class<?> wildcardClass90 = intArray78.getClass();
        float float93 = calculadora0.calcularMedia(intArray78, (int) '4', (-1));
        java.lang.Class<?> wildcardClass94 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 10.0f + "'", float47 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 10.0f + "'", float69 == 10.0f);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals((float) float86, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora23.calcularMedia(intArray31, 10, (int) 'a');
        java.lang.Class<?> wildcardClass39 = intArray31.getClass();
        float float42 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass43 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass44 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass54 = calculadora45.getClass();
        int[] intArray55 = null;
        float float58 = calculadora45.calcularMedia(intArray55, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora69 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass70 = calculadora69.getClass();
        int[] intArray71 = new int[] {};
        float float74 = calculadora69.calcularMedia(intArray71, 100, 1);
        java.lang.Class<?> wildcardClass75 = intArray71.getClass();
        float float78 = calculadora60.calcularMedia(intArray71, 0, 10);
        float float81 = calculadora59.calcularMedia(intArray71, (int) (short) -1, (-1));
        float float84 = calculadora45.calcularMedia(intArray71, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora85 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass86 = calculadora85.getClass();
        int[] intArray87 = new int[] {};
        float float90 = calculadora85.calcularMedia(intArray87, 100, 1);
        java.lang.Class<?> wildcardClass91 = intArray87.getClass();
        float float94 = calculadora45.calcularMedia(intArray87, (int) (byte) 100, (int) (byte) 10);
        float float97 = calculadora0.calcularMedia(intArray87, (int) (short) 10, (int) '#');
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals((float) float78, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertEquals((float) float97, Float.NaN, 0);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass12 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray18 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float21 = calculadora13.calcularMedia(intArray18, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass23 = calculadora22.getClass();
        int[] intArray24 = new int[] {};
        float float27 = calculadora22.calcularMedia(intArray24, 100, 1);
        java.lang.Class<?> wildcardClass28 = intArray24.getClass();
        float float31 = calculadora13.calcularMedia(intArray24, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float40 = calculadora32.calcularMedia(intArray37, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray46 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float49 = calculadora41.calcularMedia(intArray46, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora41.calcularMedia(intArray52, 0, 10);
        float float62 = calculadora32.calcularMedia(intArray52, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray69 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float72 = calculadora64.calcularMedia(intArray69, (int) (byte) 10, (int) '4');
        float float75 = calculadora63.calcularMedia(intArray69, 10, 0);
        float float78 = calculadora32.calcularMedia(intArray69, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass79 = intArray69.getClass();
        float float82 = calculadora13.calcularMedia(intArray69, (int) '4', (int) (short) -1);
        java.lang.Class<?> wildcardClass83 = intArray69.getClass();
        float float86 = calculadora0.calcularMedia(intArray69, 1, (int) ' ');
        java.lang.Class<?> wildcardClass87 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 10.0f + "'", float21 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals((float) float31, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 0.0f + "'", float40 == 0.0f);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 10.0f + "'", float49 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 10.0f + "'", float72 == 10.0f);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + 5.5f + "'", float86 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        float float33 = calculadora21.calcularMedia(intArray27, 10, 0);
        float float36 = calculadora0.calcularMedia(intArray27, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        java.lang.Class<?> wildcardClass44 = intArray39.getClass();
        float float47 = calculadora0.calcularMedia(intArray39, 0, (int) '#');
        int[] intArray48 = null;
        try {
            float float51 = calculadora0.calcularMedia(intArray48, (int) (byte) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = calculadora16.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass27 = calculadora26.getClass();
        int[] intArray31 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float34 = calculadora26.calcularMedia(intArray31, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray40 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float43 = calculadora35.calcularMedia(intArray40, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray46 = new int[] {};
        float float49 = calculadora44.calcularMedia(intArray46, 100, 1);
        java.lang.Class<?> wildcardClass50 = intArray46.getClass();
        float float53 = calculadora35.calcularMedia(intArray46, 0, 10);
        float float56 = calculadora26.calcularMedia(intArray46, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray63 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float66 = calculadora58.calcularMedia(intArray63, (int) (byte) 10, (int) '4');
        float float69 = calculadora57.calcularMedia(intArray63, 10, 0);
        float float72 = calculadora26.calcularMedia(intArray63, (int) (short) 0, 0);
        float float75 = calculadora16.calcularMedia(intArray63, (int) (byte) 100, (int) (short) -1);
        float float78 = calculadora0.calcularMedia(intArray63, (int) '4', (int) (short) 1);
        int[] intArray79 = null;
        try {
            float float82 = calculadora0.calcularMedia(intArray79, 0, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 0.0f + "'", float34 == 0.0f);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 10.0f + "'", float43 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals((float) float53, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 10.0f + "'", float66 == 10.0f);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass6 = calculadora5.getClass();
        int[] intArray7 = new int[] {};
        float float10 = calculadora5.calcularMedia(intArray7, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray13 = new int[] {};
        float float16 = calculadora11.calcularMedia(intArray13, 100, 1);
        java.lang.Class<?> wildcardClass17 = intArray13.getClass();
        float float20 = calculadora5.calcularMedia(intArray13, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass30 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float39 = calculadora31.calcularMedia(intArray36, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora31.calcularMedia(intArray51, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray68 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float71 = calculadora63.calcularMedia(intArray68, (int) (byte) 10, (int) '4');
        float float74 = calculadora62.calcularMedia(intArray68, 10, 0);
        float float77 = calculadora31.calcularMedia(intArray68, (int) (short) 0, 0);
        float float80 = calculadora21.calcularMedia(intArray68, (int) (byte) 100, (int) (short) -1);
        float float83 = calculadora5.calcularMedia(intArray68, (int) '4', (int) (short) 1);
        java.lang.Class<?> wildcardClass84 = intArray68.getClass();
        float float87 = calculadora0.calcularMedia(intArray68, (int) (short) 0, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora88 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass89 = calculadora88.getClass();
        int[] intArray90 = new int[] {};
        float float93 = calculadora88.calcularMedia(intArray90, 100, 1);
        float float96 = calculadora0.calcularMedia(intArray90, (int) 'a', (int) '4');
        java.lang.Class<?> wildcardClass97 = intArray90.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + (-1.0f) + "'", float10 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals((float) float20, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 0.0f + "'", float39 == 0.0f);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 10.0f + "'", float71 == 10.0f);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + (-1.0f) + "'", float96 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora23.calcularMedia(intArray31, 10, (int) 'a');
        java.lang.Class<?> wildcardClass39 = intArray31.getClass();
        float float42 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float51 = calculadora43.calcularMedia(intArray48, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass52 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray64 = new int[] {};
        float float67 = calculadora62.calcularMedia(intArray64, 100, 1);
        java.lang.Class<?> wildcardClass68 = intArray64.getClass();
        float float71 = calculadora53.calcularMedia(intArray64, 0, 10);
        float float74 = calculadora43.calcularMedia(intArray64, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray80 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float83 = calculadora75.calcularMedia(intArray80, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass84 = intArray80.getClass();
        float float87 = calculadora43.calcularMedia(intArray80, (int) '#', 10);
        float float90 = calculadora0.calcularMedia(intArray80, (int) (short) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass91 = calculadora0.getClass();
        int[] intArray92 = null;
        float float95 = calculadora0.calcularMedia(intArray92, 10, (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals((float) float71, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 10.0f + "'", float83 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        int[] intArray27 = null;
        float float30 = calculadora21.calcularMedia(intArray27, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass31 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray34 = new int[] {};
        float float37 = calculadora32.calcularMedia(intArray34, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora32.calcularMedia(intArray40, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray53 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float56 = calculadora48.calcularMedia(intArray53, 0, (int) (short) 1);
        float float59 = calculadora32.calcularMedia(intArray53, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora69 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass70 = calculadora69.getClass();
        int[] intArray71 = new int[] {};
        float float74 = calculadora69.calcularMedia(intArray71, 100, 1);
        java.lang.Class<?> wildcardClass75 = intArray71.getClass();
        float float78 = calculadora60.calcularMedia(intArray71, 0, 10);
        java.lang.Class<?> wildcardClass79 = intArray71.getClass();
        float float82 = calculadora32.calcularMedia(intArray71, 100, (int) '4');
        java.lang.Class<?> wildcardClass83 = intArray71.getClass();
        float float86 = calculadora21.calcularMedia(intArray71, 0, (int) (byte) 0);
        float float89 = calculadora0.calcularMedia(intArray71, 10, 0);
        java.lang.Class<?> wildcardClass90 = intArray71.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 0.0f + "'", float56 == 0.0f);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 55.0f + "'", float59 == 55.0f);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals((float) float78, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        int[] intArray20 = null;
        float float23 = calculadora0.calcularMedia(intArray20, (int) '#', (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float32 = calculadora24.calcularMedia(intArray29, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass33 = calculadora24.getClass();
        int[] intArray34 = null;
        float float37 = calculadora24.calcularMedia(intArray34, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray44 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float47 = calculadora39.calcularMedia(intArray44, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        float float57 = calculadora39.calcularMedia(intArray50, 0, 10);
        float float60 = calculadora38.calcularMedia(intArray50, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray67 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float70 = calculadora62.calcularMedia(intArray67, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass72 = calculadora71.getClass();
        int[] intArray73 = new int[] {};
        float float76 = calculadora71.calcularMedia(intArray73, 100, 1);
        java.lang.Class<?> wildcardClass77 = intArray73.getClass();
        float float80 = calculadora62.calcularMedia(intArray73, 0, 10);
        float float83 = calculadora61.calcularMedia(intArray73, (int) (short) -1, (-1));
        float float86 = calculadora38.calcularMedia(intArray73, (int) (byte) -1, (int) 'a');
        float float89 = calculadora24.calcularMedia(intArray73, (int) ' ', 10);
        float float92 = calculadora0.calcularMedia(intArray73, (-1), (int) ' ');
        java.lang.Class<?> wildcardClass93 = intArray73.getClass();
        java.lang.Class<?> wildcardClass94 = intArray73.getClass();
        java.lang.Class<?> wildcardClass95 = intArray73.getClass();
        java.lang.Class<?> wildcardClass96 = intArray73.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 0.0f + "'", float32 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 10.0f + "'", float47 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals((float) float57, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 10.0f + "'", float70 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals((float) float80, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        float float31 = calculadora11.calcularMedia(intArray25, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray44 = new int[] {};
        float float47 = calculadora42.calcularMedia(intArray44, 100, 1);
        java.lang.Class<?> wildcardClass48 = intArray44.getClass();
        float float51 = calculadora33.calcularMedia(intArray44, 0, 10);
        float float54 = calculadora32.calcularMedia(intArray44, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray61 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float64 = calculadora56.calcularMedia(intArray61, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass66 = calculadora65.getClass();
        int[] intArray67 = new int[] {};
        float float70 = calculadora65.calcularMedia(intArray67, 100, 1);
        java.lang.Class<?> wildcardClass71 = intArray67.getClass();
        float float74 = calculadora56.calcularMedia(intArray67, 0, 10);
        float float77 = calculadora55.calcularMedia(intArray67, (int) (short) -1, (-1));
        float float80 = calculadora32.calcularMedia(intArray67, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass81 = intArray67.getClass();
        float float84 = calculadora11.calcularMedia(intArray67, (int) '4', (int) '#');
        float float87 = calculadora0.calcularMedia(intArray67, 0, (int) '#');
        java.lang.Class<?> wildcardClass88 = intArray67.getClass();
        java.lang.Class<?> wildcardClass89 = intArray67.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 5.5f + "'", float31 == 5.5f);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 10.0f + "'", float64 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertEquals((float) float87, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float27 = calculadora19.calcularMedia(intArray24, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora28.calcularMedia(intArray39, 0, 10);
        float float49 = calculadora19.calcularMedia(intArray39, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        float float62 = calculadora50.calcularMedia(intArray56, 10, 0);
        float float65 = calculadora19.calcularMedia(intArray56, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass66 = intArray56.getClass();
        float float69 = calculadora0.calcularMedia(intArray56, (int) '4', (int) (short) -1);
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray77 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float80 = calculadora72.calcularMedia(intArray77, (int) (byte) 10, (int) '4');
        float float83 = calculadora71.calcularMedia(intArray77, 10, 0);
        java.lang.Class<?> wildcardClass84 = intArray77.getClass();
        float float87 = calculadora0.calcularMedia(intArray77, (int) (short) 10, (int) ' ');
        java.lang.Class<?> wildcardClass88 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 10.0f + "'", float80 == 10.0f);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + 10.0f + "'", float87 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        float float56 = calculadora0.calcularMedia(intArray50, (int) (byte) 1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        java.lang.Class<?> wildcardClass67 = intArray62.getClass();
        java.lang.Class<?> wildcardClass68 = intArray62.getClass();
        java.lang.Class<?> wildcardClass69 = intArray62.getClass();
        float float72 = calculadora0.calcularMedia(intArray62, (int) '4', (int) 'a');
        java.lang.Class<?> wildcardClass73 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass75 = calculadora74.getClass();
        int[] intArray76 = new int[] {};
        float float79 = calculadora74.calcularMedia(intArray76, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass81 = calculadora80.getClass();
        int[] intArray82 = new int[] {};
        float float85 = calculadora80.calcularMedia(intArray82, 100, 1);
        java.lang.Class<?> wildcardClass86 = intArray82.getClass();
        float float89 = calculadora74.calcularMedia(intArray82, 10, (int) 'a');
        java.lang.Class<?> wildcardClass90 = intArray82.getClass();
        float float93 = calculadora0.calcularMedia(intArray82, (int) (byte) -1, (int) 'a');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 36.0f + "'", float56 == 36.0f);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 97.0f + "'", float72 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertEquals((float) float89, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        float float53 = calculadora23.calcularMedia(intArray43, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        float float66 = calculadora54.calcularMedia(intArray60, 10, 0);
        float float69 = calculadora23.calcularMedia(intArray60, (int) (short) 0, 0);
        float float72 = calculadora0.calcularMedia(intArray60, 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray81 = new int[] {};
        float float84 = calculadora79.calcularMedia(intArray81, 100, 1);
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        float float88 = calculadora73.calcularMedia(intArray81, 10, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intArray81.getClass();
        java.lang.Class<?> wildcardClass90 = intArray81.getClass();
        float float93 = calculadora0.calcularMedia(intArray81, (int) (byte) -1, 0);
        int[] intArray94 = null;
        float float97 = calculadora0.calcularMedia(intArray94, (int) (short) 10, (-1));
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass36 = calculadora35.getClass();
        int[] intArray37 = new int[] {};
        float float40 = calculadora35.calcularMedia(intArray37, 100, 1);
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora29.calcularMedia(intArray37, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        float float56 = calculadora29.calcularMedia(intArray50, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass67 = calculadora66.getClass();
        int[] intArray68 = new int[] {};
        float float71 = calculadora66.calcularMedia(intArray68, 100, 1);
        java.lang.Class<?> wildcardClass72 = intArray68.getClass();
        float float75 = calculadora57.calcularMedia(intArray68, 0, 10);
        java.lang.Class<?> wildcardClass76 = intArray68.getClass();
        float float79 = calculadora29.calcularMedia(intArray68, 100, (int) '4');
        float float82 = calculadora28.calcularMedia(intArray68, (int) (short) 100, (int) (byte) -1);
        float float85 = calculadora0.calcularMedia(intArray68, (int) ' ', (int) '#');
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora87 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray92 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float95 = calculadora87.calcularMedia(intArray92, (int) (byte) 10, (int) '4');
        float float98 = calculadora0.calcularMedia(intArray92, (int) (byte) -1, 100);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals((float) float44, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 55.0f + "'", float56 == 55.0f);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertEquals((float) float75, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertEquals((float) float85, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + 10.0f + "'", float95 == 10.0f);
        org.junit.Assert.assertTrue("'" + float98 + "' != '" + (-1.0f) + "'", float98 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora21.calcularMedia(intArray33, (int) (short) -1, (-1));
        float float46 = calculadora0.calcularMedia(intArray33, (int) ' ', (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray49 = new int[] {};
        float float52 = calculadora47.calcularMedia(intArray49, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass54 = calculadora53.getClass();
        int[] intArray55 = new int[] {};
        float float58 = calculadora53.calcularMedia(intArray55, 100, 1);
        java.lang.Class<?> wildcardClass59 = intArray55.getClass();
        float float62 = calculadora47.calcularMedia(intArray55, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass64 = calculadora63.getClass();
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float71 = calculadora63.calcularMedia(intArray68, 0, (int) (short) 1);
        float float74 = calculadora47.calcularMedia(intArray68, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass76 = calculadora75.getClass();
        int[] intArray77 = new int[] {};
        float float80 = calculadora75.calcularMedia(intArray77, 100, 1);
        java.lang.Class<?> wildcardClass81 = intArray77.getClass();
        java.lang.Class<?> wildcardClass82 = intArray77.getClass();
        float float85 = calculadora47.calcularMedia(intArray77, (int) (byte) -1, (int) (byte) -1);
        float float88 = calculadora0.calcularMedia(intArray77, (int) (byte) 1, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intArray77.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals((float) float62, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 0.0f + "'", float71 == 0.0f);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 55.0f + "'", float74 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora29.calcularMedia(intArray41, (int) (short) -1, (-1));
        float float54 = calculadora0.calcularMedia(intArray41, (int) (short) 100, 100);
        java.lang.Class<?> wildcardClass55 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass56 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass57 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        int[] intArray20 = null;
        float float23 = calculadora0.calcularMedia(intArray20, (int) '#', (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray32 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float35 = calculadora27.calcularMedia(intArray32, (int) (byte) 10, (int) '4');
        float float38 = calculadora26.calcularMedia(intArray32, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray44 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float47 = calculadora39.calcularMedia(intArray44, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray53 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float56 = calculadora48.calcularMedia(intArray53, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass58 = calculadora57.getClass();
        int[] intArray59 = new int[] {};
        float float62 = calculadora57.calcularMedia(intArray59, 100, 1);
        java.lang.Class<?> wildcardClass63 = intArray59.getClass();
        float float66 = calculadora48.calcularMedia(intArray59, 0, 10);
        float float69 = calculadora39.calcularMedia(intArray59, 10, (int) (short) 0);
        float float72 = calculadora26.calcularMedia(intArray59, (int) (short) -1, (int) ' ');
        float float75 = calculadora0.calcularMedia(intArray59, (int) (byte) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + 10.0f + "'", float35 == 10.0f);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 0.0f + "'", float47 == 0.0f);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 10.0f + "'", float56 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals((float) float66, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertEquals((float) float75, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora0.calcularMedia(intArray42, (int) (byte) 100, (int) (byte) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass61 = calculadora60.getClass();
        int[] intArray62 = new int[] {};
        float float65 = calculadora60.calcularMedia(intArray62, 100, 1);
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        float float69 = calculadora51.calcularMedia(intArray62, 0, 10);
        float float72 = calculadora50.calcularMedia(intArray62, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray81 = new int[] {};
        float float84 = calculadora79.calcularMedia(intArray81, 100, 1);
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        float float88 = calculadora73.calcularMedia(intArray81, 10, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intArray81.getClass();
        float float92 = calculadora50.calcularMedia(intArray81, (int) (short) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass93 = intArray81.getClass();
        float float96 = calculadora0.calcularMedia(intArray81, (int) (byte) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass97 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals((float) float69, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertEquals((float) float96, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass6 = calculadora5.getClass();
        int[] intArray7 = new int[] {};
        float float10 = calculadora5.calcularMedia(intArray7, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray13 = new int[] {};
        float float16 = calculadora11.calcularMedia(intArray13, 100, 1);
        java.lang.Class<?> wildcardClass17 = intArray13.getClass();
        float float20 = calculadora5.calcularMedia(intArray13, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass30 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float39 = calculadora31.calcularMedia(intArray36, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora31.calcularMedia(intArray51, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray68 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float71 = calculadora63.calcularMedia(intArray68, (int) (byte) 10, (int) '4');
        float float74 = calculadora62.calcularMedia(intArray68, 10, 0);
        float float77 = calculadora31.calcularMedia(intArray68, (int) (short) 0, 0);
        float float80 = calculadora21.calcularMedia(intArray68, (int) (byte) 100, (int) (short) -1);
        float float83 = calculadora5.calcularMedia(intArray68, (int) '4', (int) (short) 1);
        java.lang.Class<?> wildcardClass84 = intArray68.getClass();
        float float87 = calculadora0.calcularMedia(intArray68, (int) (short) 0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass88 = intArray68.getClass();
        java.lang.Class<?> wildcardClass89 = intArray68.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + (-1.0f) + "'", float10 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals((float) float20, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 0.0f + "'", float39 == 0.0f);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 10.0f + "'", float71 == 10.0f);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        float float48 = calculadora28.calcularMedia(intArray42, (int) (byte) 1, (int) '4');
        float float51 = calculadora0.calcularMedia(intArray42, (int) (byte) 10, (int) (byte) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora0.calcularMedia(intArray57, (int) (byte) 0, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float72 = calculadora64.calcularMedia(intArray69, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray78 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float81 = calculadora73.calcularMedia(intArray78, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora82 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass83 = calculadora82.getClass();
        int[] intArray84 = new int[] {};
        float float87 = calculadora82.calcularMedia(intArray84, 100, 1);
        java.lang.Class<?> wildcardClass88 = intArray84.getClass();
        float float91 = calculadora73.calcularMedia(intArray84, 0, 10);
        float float94 = calculadora64.calcularMedia(intArray84, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass95 = intArray84.getClass();
        float float98 = calculadora0.calcularMedia(intArray84, 100, (int) ' ');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 5.5f + "'", float48 == 5.5f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 1.0f + "'", float63 == 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 0.0f + "'", float72 == 0.0f);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + 10.0f + "'", float81 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertEquals((float) float91, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + float98 + "' != '" + (-1.0f) + "'", float98 == (-1.0f));
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora20.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray28 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float31 = calculadora23.calcularMedia(intArray28, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray34 = new int[] {};
        float float37 = calculadora32.calcularMedia(intArray34, 100, 1);
        java.lang.Class<?> wildcardClass38 = intArray34.getClass();
        float float41 = calculadora23.calcularMedia(intArray34, 0, 10);
        java.lang.Class<?> wildcardClass42 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        float float61 = calculadora43.calcularMedia(intArray54, 0, 10);
        float float64 = calculadora23.calcularMedia(intArray54, 0, (int) ' ');
        float float67 = calculadora20.calcularMedia(intArray54, (int) 'a', (int) (byte) 0);
        float float70 = calculadora0.calcularMedia(intArray54, (int) '#', (int) (byte) 100);
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 10.0f + "'", float31 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float64, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        float float56 = calculadora0.calcularMedia(intArray50, (int) (byte) 1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        java.lang.Class<?> wildcardClass67 = intArray62.getClass();
        java.lang.Class<?> wildcardClass68 = intArray62.getClass();
        java.lang.Class<?> wildcardClass69 = intArray62.getClass();
        float float72 = calculadora0.calcularMedia(intArray62, (int) '4', (int) 'a');
        java.lang.Class<?> wildcardClass73 = intArray62.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 36.0f + "'", float56 == 36.0f);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 97.0f + "'", float72 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass2 = calculadora1.getClass();
        int[] intArray3 = new int[] {};
        float float6 = calculadora1.calcularMedia(intArray3, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora7 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass8 = calculadora7.getClass();
        int[] intArray9 = new int[] {};
        float float12 = calculadora7.calcularMedia(intArray9, 100, 1);
        java.lang.Class<?> wildcardClass13 = intArray9.getClass();
        float float16 = calculadora1.calcularMedia(intArray9, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        int[] intArray22 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float25 = calculadora17.calcularMedia(intArray22, 0, (int) (short) 1);
        float float28 = calculadora1.calcularMedia(intArray22, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        java.lang.Class<?> wildcardClass48 = intArray40.getClass();
        float float51 = calculadora1.calcularMedia(intArray40, 100, (int) '4');
        float float54 = calculadora0.calcularMedia(intArray40, (int) (short) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass55 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float64 = calculadora56.calcularMedia(intArray61, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass65 = calculadora56.getClass();
        int[] intArray66 = null;
        float float69 = calculadora56.calcularMedia(intArray66, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray76 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float79 = calculadora71.calcularMedia(intArray76, (int) (byte) 10, (int) '4');
        float float82 = calculadora70.calcularMedia(intArray76, 10, 0);
        float float85 = calculadora56.calcularMedia(intArray76, 100, (int) '#');
        float float88 = calculadora0.calcularMedia(intArray76, (-1), (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass90 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass91 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + (-1.0f) + "'", float6 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals((float) float16, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 0.0f + "'", float25 == 0.0f);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 55.0f + "'", float28 == 55.0f);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 10.0f + "'", float79 == 10.0f);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        int[] intArray21 = null;
        float float24 = calculadora11.calcularMedia(intArray21, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora11.calcularMedia(intArray31, 100, (int) '#');
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (short) 0);
        java.lang.Class<?> wildcardClass44 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        java.lang.Class<?> wildcardClass47 = calculadora45.getClass();
        java.lang.Class<?> wildcardClass48 = calculadora45.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray55 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float58 = calculadora50.calcularMedia(intArray55, (int) (byte) 10, (int) '4');
        float float61 = calculadora49.calcularMedia(intArray55, 10, 0);
        float float64 = calculadora45.calcularMedia(intArray55, 0, 100);
        java.lang.Class<?> wildcardClass65 = intArray55.getClass();
        java.lang.Class<?> wildcardClass66 = intArray55.getClass();
        float float69 = calculadora0.calcularMedia(intArray55, (int) (byte) 0, 10);
        java.lang.Class<?> wildcardClass70 = intArray55.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 10.0f + "'", float58 == 10.0f);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 36.0f + "'", float64 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 5.5f + "'", float69 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray36 = new int[] {};
        float float39 = calculadora34.calcularMedia(intArray36, 100, 1);
        java.lang.Class<?> wildcardClass40 = intArray36.getClass();
        float float43 = calculadora28.calcularMedia(intArray36, 10, (int) 'a');
        float float46 = calculadora0.calcularMedia(intArray36, (int) 'a', (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        float float58 = calculadora0.calcularMedia(intArray52, (int) (short) 100, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        float float71 = calculadora59.calcularMedia(intArray65, 10, 0);
        java.lang.Class<?> wildcardClass72 = intArray65.getClass();
        float float75 = calculadora0.calcularMedia(intArray65, (int) ' ', (int) (short) 1);
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass77 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals((float) float43, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora21.calcularMedia(intArray33, (int) (short) -1, (-1));
        float float46 = calculadora0.calcularMedia(intArray33, (int) ' ', (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray61 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float64 = calculadora56.calcularMedia(intArray61, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass66 = calculadora65.getClass();
        int[] intArray67 = new int[] {};
        float float70 = calculadora65.calcularMedia(intArray67, 100, 1);
        java.lang.Class<?> wildcardClass71 = intArray67.getClass();
        float float74 = calculadora56.calcularMedia(intArray67, 0, 10);
        float float77 = calculadora47.calcularMedia(intArray67, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora78 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray84 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float87 = calculadora79.calcularMedia(intArray84, (int) (byte) 10, (int) '4');
        float float90 = calculadora78.calcularMedia(intArray84, 10, 0);
        float float93 = calculadora47.calcularMedia(intArray84, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass94 = intArray84.getClass();
        float float97 = calculadora0.calcularMedia(intArray84, (int) (byte) 1, 10);
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass99 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 10.0f + "'", float64 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + 10.0f + "'", float87 == 10.0f);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + 5.5f + "'", float97 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass23 = calculadora22.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora22.getClass();
        java.lang.Class<?> wildcardClass25 = calculadora22.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray32 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float35 = calculadora27.calcularMedia(intArray32, (int) (byte) 10, (int) '4');
        float float38 = calculadora26.calcularMedia(intArray32, 10, 0);
        float float41 = calculadora22.calcularMedia(intArray32, 0, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        java.lang.Class<?> wildcardClass44 = calculadora42.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass55 = calculadora54.getClass();
        int[] intArray56 = new int[] {};
        float float59 = calculadora54.calcularMedia(intArray56, 100, 1);
        java.lang.Class<?> wildcardClass60 = intArray56.getClass();
        float float63 = calculadora45.calcularMedia(intArray56, 0, 10);
        java.lang.Class<?> wildcardClass64 = calculadora45.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray70 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float73 = calculadora65.calcularMedia(intArray70, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass75 = calculadora74.getClass();
        int[] intArray76 = new int[] {};
        float float79 = calculadora74.calcularMedia(intArray76, 100, 1);
        java.lang.Class<?> wildcardClass80 = intArray76.getClass();
        float float83 = calculadora65.calcularMedia(intArray76, 0, 10);
        float float86 = calculadora45.calcularMedia(intArray76, 0, (int) ' ');
        float float89 = calculadora42.calcularMedia(intArray76, (int) 'a', (int) (byte) 0);
        float float92 = calculadora22.calcularMedia(intArray76, (int) '#', (int) (byte) 100);
        java.lang.Class<?> wildcardClass93 = intArray76.getClass();
        java.lang.Class<?> wildcardClass94 = intArray76.getClass();
        java.lang.Class<?> wildcardClass95 = intArray76.getClass();
        float float98 = calculadora0.calcularMedia(intArray76, (int) (byte) 10, (int) '#');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + 10.0f + "'", float35 == 10.0f);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 36.0f + "'", float41 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 10.0f + "'", float73 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals((float) float83, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float86, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertEquals((float) float92, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertEquals((float) float98, Float.NaN, 0);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float27 = calculadora19.calcularMedia(intArray24, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora28.calcularMedia(intArray39, 0, 10);
        float float49 = calculadora19.calcularMedia(intArray39, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        float float62 = calculadora50.calcularMedia(intArray56, 10, 0);
        float float65 = calculadora19.calcularMedia(intArray56, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass66 = intArray56.getClass();
        float float69 = calculadora0.calcularMedia(intArray56, (int) '4', (int) (short) -1);
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass72 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass73 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass74 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        int[] intArray21 = null;
        float float24 = calculadora11.calcularMedia(intArray21, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora11.calcularMedia(intArray31, 100, (int) '#');
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (short) 0);
        java.lang.Class<?> wildcardClass44 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        java.lang.Class<?> wildcardClass47 = calculadora45.getClass();
        java.lang.Class<?> wildcardClass48 = calculadora45.getClass();
        java.lang.Class<?> wildcardClass49 = calculadora45.getClass();
        java.lang.Class<?> wildcardClass50 = calculadora45.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray53 = new int[] {};
        float float56 = calculadora51.calcularMedia(intArray53, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass58 = calculadora57.getClass();
        int[] intArray59 = new int[] {};
        float float62 = calculadora57.calcularMedia(intArray59, 100, 1);
        java.lang.Class<?> wildcardClass63 = intArray59.getClass();
        float float66 = calculadora51.calcularMedia(intArray59, 10, (int) 'a');
        float float69 = calculadora45.calcularMedia(intArray59, (int) (byte) 0, (int) 'a');
        float float72 = calculadora0.calcularMedia(intArray59, (int) (byte) 10, (int) 'a');
        java.lang.Class<?> wildcardClass73 = intArray59.getClass();
        java.lang.Class<?> wildcardClass74 = intArray59.getClass();
        java.lang.Class<?> wildcardClass75 = intArray59.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals((float) float66, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float69, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float72, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, (int) '#', 100);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float40 = calculadora32.calcularMedia(intArray37, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray46 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float49 = calculadora41.calcularMedia(intArray46, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora41.calcularMedia(intArray52, 0, 10);
        float float62 = calculadora32.calcularMedia(intArray52, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray69 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float72 = calculadora64.calcularMedia(intArray69, (int) (byte) 10, (int) '4');
        float float75 = calculadora63.calcularMedia(intArray69, 10, 0);
        float float78 = calculadora32.calcularMedia(intArray69, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray84 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float87 = calculadora79.calcularMedia(intArray84, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass88 = intArray84.getClass();
        java.lang.Class<?> wildcardClass89 = intArray84.getClass();
        float float92 = calculadora32.calcularMedia(intArray84, 10, (int) 'a');
        java.lang.Class<?> wildcardClass93 = intArray84.getClass();
        java.lang.Class<?> wildcardClass94 = intArray84.getClass();
        java.lang.Class<?> wildcardClass95 = intArray84.getClass();
        float float98 = calculadora0.calcularMedia(intArray84, (int) (short) 10, 0);
        java.lang.Class<?> wildcardClass99 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 100.0f + "'", float28 == 100.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 55.0f + "'", float31 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 0.0f + "'", float40 == 0.0f);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 10.0f + "'", float49 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 10.0f + "'", float72 == 10.0f);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + 10.0f + "'", float87 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + 53.5f + "'", float92 == 53.5f);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + float98 + "' != '" + (-1.0f) + "'", float98 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora9.getClass();
        java.lang.Class<?> wildcardClass12 = calculadora9.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray19 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float22 = calculadora14.calcularMedia(intArray19, (int) (byte) 10, (int) '4');
        float float25 = calculadora13.calcularMedia(intArray19, 10, 0);
        float float28 = calculadora9.calcularMedia(intArray19, 0, 100);
        java.lang.Class<?> wildcardClass29 = calculadora9.getClass();
        java.lang.Class<?> wildcardClass30 = calculadora9.getClass();
        java.lang.Class<?> wildcardClass31 = calculadora9.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float40 = calculadora32.calcularMedia(intArray37, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass41 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass42 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float51 = calculadora43.calcularMedia(intArray48, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass52 = calculadora43.getClass();
        int[] intArray53 = null;
        float float56 = calculadora43.calcularMedia(intArray53, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray63 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float66 = calculadora58.calcularMedia(intArray63, (int) (byte) 10, (int) '4');
        float float69 = calculadora57.calcularMedia(intArray63, 10, 0);
        float float72 = calculadora43.calcularMedia(intArray63, 100, (int) '#');
        float float75 = calculadora32.calcularMedia(intArray63, (-1), (int) (short) 100);
        float float78 = calculadora9.calcularMedia(intArray63, (int) (short) 0, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray85 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float88 = calculadora80.calcularMedia(intArray85, (int) (byte) 10, (int) '4');
        float float91 = calculadora79.calcularMedia(intArray85, 10, 0);
        java.lang.Class<?> wildcardClass92 = intArray85.getClass();
        float float95 = calculadora9.calcularMedia(intArray85, (int) (byte) 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass96 = intArray85.getClass();
        float float99 = calculadora0.calcularMedia(intArray85, (int) (short) 1, 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 10.0f + "'", float22 == 10.0f);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + (-1.0f) + "'", float25 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 36.0f + "'", float28 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 0.0f + "'", float40 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 10.0f + "'", float66 == 10.0f);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + 10.0f + "'", float88 == 10.0f);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + (-1.0f) + "'", float99 == (-1.0f));
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        float float48 = calculadora28.calcularMedia(intArray42, (int) (byte) 1, (int) '4');
        float float51 = calculadora0.calcularMedia(intArray42, (int) (byte) 10, (int) (byte) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora0.calcularMedia(intArray57, (int) (byte) 0, 1);
        java.lang.Class<?> wildcardClass64 = intArray57.getClass();
        java.lang.Class<?> wildcardClass65 = intArray57.getClass();
        java.lang.Class<?> wildcardClass66 = intArray57.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 5.5f + "'", float48 == 5.5f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 1.0f + "'", float63 == 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray52 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float55 = calculadora47.calcularMedia(intArray52, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray58 = new int[] {};
        float float61 = calculadora56.calcularMedia(intArray58, 100, 1);
        java.lang.Class<?> wildcardClass62 = intArray58.getClass();
        java.lang.Class<?> wildcardClass63 = intArray58.getClass();
        float float66 = calculadora47.calcularMedia(intArray58, (int) ' ', (int) (byte) -1);
        int[] intArray69 = new int[] { 1, (short) 100 };
        float float72 = calculadora47.calcularMedia(intArray69, (int) (byte) 100, (int) (short) 100);
        float float75 = calculadora0.calcularMedia(intArray69, (int) (byte) 100, (int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 10.0f + "'", float55 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        float float53 = calculadora23.calcularMedia(intArray43, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        float float66 = calculadora54.calcularMedia(intArray60, 10, 0);
        float float69 = calculadora23.calcularMedia(intArray60, (int) (short) 0, 0);
        float float72 = calculadora0.calcularMedia(intArray60, 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray81 = new int[] {};
        float float84 = calculadora79.calcularMedia(intArray81, 100, 1);
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        float float88 = calculadora73.calcularMedia(intArray81, 10, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intArray81.getClass();
        java.lang.Class<?> wildcardClass90 = intArray81.getClass();
        float float93 = calculadora0.calcularMedia(intArray81, (int) (byte) -1, 0);
        java.lang.Class<?> wildcardClass94 = calculadora0.getClass();
        int[] intArray95 = null;
        try {
            float float98 = calculadora0.calcularMedia(intArray95, (int) (byte) 1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray11 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float14 = calculadora6.calcularMedia(intArray11, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass16 = calculadora15.getClass();
        int[] intArray17 = new int[] {};
        float float20 = calculadora15.calcularMedia(intArray17, 100, 1);
        java.lang.Class<?> wildcardClass21 = intArray17.getClass();
        float float24 = calculadora6.calcularMedia(intArray17, 0, 10);
        float float27 = calculadora5.calcularMedia(intArray17, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        float float50 = calculadora28.calcularMedia(intArray40, (int) (short) -1, (-1));
        float float53 = calculadora5.calcularMedia(intArray40, (int) (byte) -1, (int) 'a');
        int[] intArray54 = null;
        float float57 = calculadora5.calcularMedia(intArray54, (-1), (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray63 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float66 = calculadora58.calcularMedia(intArray63, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass67 = intArray63.getClass();
        float float70 = calculadora5.calcularMedia(intArray63, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass71 = intArray63.getClass();
        java.lang.Class<?> wildcardClass72 = intArray63.getClass();
        float float75 = calculadora0.calcularMedia(intArray63, (int) (byte) -1, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass78 = calculadora77.getClass();
        java.lang.Class<?> wildcardClass79 = calculadora77.getClass();
        java.lang.Class<?> wildcardClass80 = calculadora77.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora81 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora82 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray87 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float90 = calculadora82.calcularMedia(intArray87, (int) (byte) 10, (int) '4');
        float float93 = calculadora81.calcularMedia(intArray87, 10, 0);
        float float96 = calculadora77.calcularMedia(intArray87, 0, 100);
        float float99 = calculadora0.calcularMedia(intArray87, (int) '4', (int) (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 10.0f + "'", float14 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + (-1.0f) + "'", float20 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals((float) float24, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 10.0f + "'", float66 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + 10.0f + "'", float90 == 10.0f);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + 36.0f + "'", float96 == 36.0f);
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + (-1.0f) + "'", float99 == (-1.0f));
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) -1, (int) ' ');
        java.lang.Class<?> wildcardClass47 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray53 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float56 = calculadora48.calcularMedia(intArray53, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass57 = calculadora48.getClass();
        int[] intArray58 = null;
        float float61 = calculadora48.calcularMedia(intArray58, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray68 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float71 = calculadora63.calcularMedia(intArray68, (int) (byte) 10, (int) '4');
        float float74 = calculadora62.calcularMedia(intArray68, 10, 0);
        float float77 = calculadora48.calcularMedia(intArray68, 100, (int) '#');
        float float80 = calculadora0.calcularMedia(intArray68, 1, (int) (short) 100);
        java.lang.Class<?> wildcardClass81 = intArray68.getClass();
        java.lang.Class<?> wildcardClass82 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 0.0f + "'", float56 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 10.0f + "'", float71 == 10.0f);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 36.0f + "'", float80 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray11 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float14 = calculadora6.calcularMedia(intArray11, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass16 = calculadora15.getClass();
        int[] intArray17 = new int[] {};
        float float20 = calculadora15.calcularMedia(intArray17, 100, 1);
        java.lang.Class<?> wildcardClass21 = intArray17.getClass();
        float float24 = calculadora6.calcularMedia(intArray17, 0, 10);
        float float27 = calculadora5.calcularMedia(intArray17, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        float float50 = calculadora28.calcularMedia(intArray40, (int) (short) -1, (-1));
        float float53 = calculadora5.calcularMedia(intArray40, (int) (byte) -1, (int) 'a');
        int[] intArray54 = null;
        float float57 = calculadora5.calcularMedia(intArray54, (-1), (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray63 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float66 = calculadora58.calcularMedia(intArray63, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass67 = intArray63.getClass();
        float float70 = calculadora5.calcularMedia(intArray63, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass71 = intArray63.getClass();
        java.lang.Class<?> wildcardClass72 = intArray63.getClass();
        float float75 = calculadora0.calcularMedia(intArray63, (int) (byte) -1, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = intArray63.getClass();
        java.lang.Class<?> wildcardClass77 = intArray63.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 10.0f + "'", float14 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + (-1.0f) + "'", float20 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals((float) float24, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 10.0f + "'", float66 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float22 = calculadora14.calcularMedia(intArray19, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray28 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float31 = calculadora23.calcularMedia(intArray28, (int) (byte) 10, (int) '4');
        float float34 = calculadora14.calcularMedia(intArray28, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray41 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float44 = calculadora36.calcularMedia(intArray41, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora36.calcularMedia(intArray47, 0, 10);
        float float57 = calculadora35.calcularMedia(intArray47, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray70 = new int[] {};
        float float73 = calculadora68.calcularMedia(intArray70, 100, 1);
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        float float77 = calculadora59.calcularMedia(intArray70, 0, 10);
        float float80 = calculadora58.calcularMedia(intArray70, (int) (short) -1, (-1));
        float float83 = calculadora35.calcularMedia(intArray70, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass84 = intArray70.getClass();
        float float87 = calculadora14.calcularMedia(intArray70, (int) '4', (int) '#');
        java.lang.Class<?> wildcardClass88 = intArray70.getClass();
        float float91 = calculadora0.calcularMedia(intArray70, (int) '4', (int) (short) 100);
        java.lang.Class<?> wildcardClass92 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 0.0f + "'", float22 == 0.0f);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 10.0f + "'", float31 == 10.0f);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 5.5f + "'", float34 == 5.5f);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 10.0f + "'", float44 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertEquals((float) float91, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        int[] intArray21 = null;
        float float24 = calculadora11.calcularMedia(intArray21, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora11.calcularMedia(intArray31, 100, (int) '#');
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray46 = new int[] {};
        float float49 = calculadora44.calcularMedia(intArray46, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora44.calcularMedia(intArray52, 10, (int) 'a');
        java.lang.Class<?> wildcardClass60 = intArray52.getClass();
        float float63 = calculadora0.calcularMedia(intArray52, (int) (byte) -1, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        java.lang.Class<?> wildcardClass71 = intArray66.getClass();
        float float74 = calculadora0.calcularMedia(intArray66, (int) (short) 1, (int) ' ');
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass77 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass78 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float27 = calculadora19.calcularMedia(intArray24, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora28.calcularMedia(intArray39, 0, 10);
        float float49 = calculadora19.calcularMedia(intArray39, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        float float62 = calculadora50.calcularMedia(intArray56, 10, 0);
        float float65 = calculadora19.calcularMedia(intArray56, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass66 = intArray56.getClass();
        float float69 = calculadora0.calcularMedia(intArray56, (int) '4', (int) (short) -1);
        java.lang.Class<?> wildcardClass70 = intArray56.getClass();
        java.lang.Class<?> wildcardClass71 = intArray56.getClass();
        java.lang.Class<?> wildcardClass72 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass29 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass30 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass31 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass31 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass34 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray40 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float43 = calculadora35.calcularMedia(intArray40, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray46 = new int[] {};
        float float49 = calculadora44.calcularMedia(intArray46, 100, 1);
        java.lang.Class<?> wildcardClass50 = intArray46.getClass();
        float float53 = calculadora35.calcularMedia(intArray46, 0, 10);
        java.lang.Class<?> wildcardClass54 = calculadora35.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        float float73 = calculadora55.calcularMedia(intArray66, 0, 10);
        float float76 = calculadora35.calcularMedia(intArray66, 0, (int) ' ');
        float float79 = calculadora32.calcularMedia(intArray66, (int) 'a', (int) (byte) 0);
        float float82 = calculadora0.calcularMedia(intArray66, 10, (int) (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 10.0f + "'", float43 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals((float) float53, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray11 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float14 = calculadora6.calcularMedia(intArray11, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, (int) '#', 100);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        float float31 = calculadora0.calcularMedia(intArray25, (int) '4', 100);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        int[] intArray33 = null;
        try {
            float float36 = calculadora0.calcularMedia(intArray33, (int) (short) 10, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 100.0f + "'", float18 == 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 97.0f + "'", float31 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora24.getClass();
        java.lang.Class<?> wildcardClass27 = calculadora24.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        float float40 = calculadora28.calcularMedia(intArray34, 10, 0);
        float float43 = calculadora24.calcularMedia(intArray34, 0, 100);
        java.lang.Class<?> wildcardClass44 = intArray34.getClass();
        java.lang.Class<?> wildcardClass45 = intArray34.getClass();
        float float48 = calculadora0.calcularMedia(intArray34, 100, (int) (short) -1);
        java.lang.Class<?> wildcardClass49 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 36.0f + "'", float43 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora37.calcularMedia(intArray48, 0, 10);
        float float58 = calculadora28.calcularMedia(intArray48, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        float float71 = calculadora59.calcularMedia(intArray65, 10, 0);
        float float74 = calculadora28.calcularMedia(intArray65, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass75 = intArray65.getClass();
        float float78 = calculadora9.calcularMedia(intArray65, (int) '4', (int) (short) -1);
        float float81 = calculadora0.calcularMedia(intArray65, (int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass82 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass83 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass84 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray16 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float19 = calculadora11.calcularMedia(intArray16, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray22 = new int[] {};
        float float25 = calculadora20.calcularMedia(intArray22, 100, 1);
        java.lang.Class<?> wildcardClass26 = intArray22.getClass();
        java.lang.Class<?> wildcardClass27 = intArray22.getClass();
        float float30 = calculadora11.calcularMedia(intArray22, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass31 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        float float44 = calculadora32.calcularMedia(intArray38, 10, 0);
        float float47 = calculadora11.calcularMedia(intArray38, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        java.lang.Class<?> wildcardClass55 = intArray50.getClass();
        float float58 = calculadora11.calcularMedia(intArray50, 0, (int) '#');
        java.lang.Class<?> wildcardClass59 = intArray50.getClass();
        float float62 = calculadora0.calcularMedia(intArray50, 0, 0);
        java.lang.Class<?> wildcardClass63 = intArray50.getClass();
        java.lang.Class<?> wildcardClass64 = intArray50.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 10.0f + "'", float19 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + (-1.0f) + "'", float25 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = calculadora24.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        float float43 = calculadora31.calcularMedia(intArray37, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float52 = calculadora44.calcularMedia(intArray49, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray64 = new int[] {};
        float float67 = calculadora62.calcularMedia(intArray64, 100, 1);
        java.lang.Class<?> wildcardClass68 = intArray64.getClass();
        float float71 = calculadora53.calcularMedia(intArray64, 0, 10);
        float float74 = calculadora44.calcularMedia(intArray64, 10, (int) (short) 0);
        float float77 = calculadora31.calcularMedia(intArray64, (int) (short) 0, 10);
        java.lang.Class<?> wildcardClass78 = intArray64.getClass();
        float float81 = calculadora24.calcularMedia(intArray64, (int) (short) 1, (int) (byte) 10);
        java.lang.Class<?> wildcardClass82 = intArray64.getClass();
        float float85 = calculadora0.calcularMedia(intArray64, (int) '#', (int) (byte) 100);
        java.lang.Class<?> wildcardClass86 = intArray64.getClass();
        java.lang.Class<?> wildcardClass87 = intArray64.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 0.0f + "'", float52 == 0.0f);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals((float) float71, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals((float) float81, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertEquals((float) float85, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass5 = calculadora4.getClass();
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float12 = calculadora4.calcularMedia(intArray9, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray18 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float21 = calculadora13.calcularMedia(intArray18, (int) (byte) 10, (int) '4');
        float float24 = calculadora4.calcularMedia(intArray18, (int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass25 = intArray18.getClass();
        float float28 = calculadora0.calcularMedia(intArray18, (int) (short) 0, (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        float float41 = calculadora29.calcularMedia(intArray35, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray47 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float50 = calculadora42.calcularMedia(intArray47, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass61 = calculadora60.getClass();
        int[] intArray62 = new int[] {};
        float float65 = calculadora60.calcularMedia(intArray62, 100, 1);
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        float float69 = calculadora51.calcularMedia(intArray62, 0, 10);
        float float72 = calculadora42.calcularMedia(intArray62, 10, (int) (short) 0);
        float float75 = calculadora29.calcularMedia(intArray62, (int) (short) 0, 10);
        java.lang.Class<?> wildcardClass76 = intArray62.getClass();
        java.lang.Class<?> wildcardClass77 = intArray62.getClass();
        java.lang.Class<?> wildcardClass78 = intArray62.getClass();
        float float81 = calculadora0.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass82 = intArray62.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.0f + "'", float12 == 0.0f);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 10.0f + "'", float21 == 10.0f);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 5.5f + "'", float24 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + (-1.0f) + "'", float41 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + 0.0f + "'", float50 == 0.0f);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals((float) float69, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertEquals((float) float75, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals((float) float81, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        java.lang.Class<?> wildcardClass45 = intArray40.getClass();
        float float48 = calculadora29.calcularMedia(intArray40, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass49 = calculadora29.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        float float62 = calculadora50.calcularMedia(intArray56, 10, 0);
        float float65 = calculadora29.calcularMedia(intArray56, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass67 = calculadora66.getClass();
        int[] intArray68 = new int[] {};
        float float71 = calculadora66.calcularMedia(intArray68, 100, 1);
        java.lang.Class<?> wildcardClass72 = intArray68.getClass();
        java.lang.Class<?> wildcardClass73 = intArray68.getClass();
        float float76 = calculadora29.calcularMedia(intArray68, 0, (int) '#');
        float float79 = calculadora23.calcularMedia(intArray68, (int) '#', (int) (byte) 0);
        float float82 = calculadora0.calcularMedia(intArray68, (int) (byte) 0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora84 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray89 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float92 = calculadora84.calcularMedia(intArray89, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass93 = intArray89.getClass();
        java.lang.Class<?> wildcardClass94 = intArray89.getClass();
        float float97 = calculadora0.calcularMedia(intArray89, (int) '4', (int) (byte) 1);
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass99 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertEquals((float) float82, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + 10.0f + "'", float92 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass2 = calculadora1.getClass();
        int[] intArray3 = new int[] {};
        float float6 = calculadora1.calcularMedia(intArray3, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora7 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass8 = calculadora7.getClass();
        int[] intArray9 = new int[] {};
        float float12 = calculadora7.calcularMedia(intArray9, 100, 1);
        java.lang.Class<?> wildcardClass13 = intArray9.getClass();
        float float16 = calculadora1.calcularMedia(intArray9, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        int[] intArray22 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float25 = calculadora17.calcularMedia(intArray22, 0, (int) (short) 1);
        float float28 = calculadora1.calcularMedia(intArray22, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        java.lang.Class<?> wildcardClass48 = intArray40.getClass();
        float float51 = calculadora1.calcularMedia(intArray40, 100, (int) '4');
        float float54 = calculadora0.calcularMedia(intArray40, (int) (short) 100, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray63 = new int[] {};
        float float66 = calculadora61.calcularMedia(intArray63, 100, 1);
        java.lang.Class<?> wildcardClass67 = intArray63.getClass();
        float float70 = calculadora55.calcularMedia(intArray63, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass72 = calculadora71.getClass();
        int[] intArray76 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float79 = calculadora71.calcularMedia(intArray76, 0, (int) (short) 1);
        float float82 = calculadora55.calcularMedia(intArray76, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora83 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass84 = calculadora83.getClass();
        int[] intArray85 = new int[] {};
        float float88 = calculadora83.calcularMedia(intArray85, 100, 1);
        java.lang.Class<?> wildcardClass89 = intArray85.getClass();
        java.lang.Class<?> wildcardClass90 = intArray85.getClass();
        float float93 = calculadora55.calcularMedia(intArray85, (int) (byte) -1, (int) (byte) -1);
        java.lang.Class<?> wildcardClass94 = intArray85.getClass();
        float float97 = calculadora0.calcularMedia(intArray85, 0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = intArray85.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + (-1.0f) + "'", float6 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals((float) float16, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 0.0f + "'", float25 == 0.0f);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 55.0f + "'", float28 == 55.0f);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 0.0f + "'", float79 == 0.0f);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + 55.0f + "'", float82 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertEquals((float) float97, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        float float38 = calculadora0.calcularMedia(intArray30, (int) (byte) -1, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora39.calcularMedia(intArray47, 10, (int) 'a');
        java.lang.Class<?> wildcardClass55 = intArray47.getClass();
        java.lang.Class<?> wildcardClass56 = intArray47.getClass();
        float float59 = calculadora0.calcularMedia(intArray47, 0, (int) '#');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        java.lang.Class<?> wildcardClass70 = intArray65.getClass();
        java.lang.Class<?> wildcardClass71 = intArray65.getClass();
        java.lang.Class<?> wildcardClass72 = intArray65.getClass();
        float float75 = calculadora0.calcularMedia(intArray65, (int) (short) 0, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray82 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float85 = calculadora77.calcularMedia(intArray82, (int) (byte) 10, (int) '4');
        float float88 = calculadora76.calcularMedia(intArray82, 10, 0);
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        float float92 = calculadora0.calcularMedia(intArray82, (int) (byte) 100, (int) 'a');
        java.lang.Class<?> wildcardClass93 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + 36.0f + "'", float75 == 36.0f);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + 10.0f + "'", float85 == 10.0f);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float48 = calculadora40.calcularMedia(intArray45, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass59 = calculadora58.getClass();
        int[] intArray60 = new int[] {};
        float float63 = calculadora58.calcularMedia(intArray60, 100, 1);
        java.lang.Class<?> wildcardClass64 = intArray60.getClass();
        float float67 = calculadora49.calcularMedia(intArray60, 0, 10);
        float float70 = calculadora40.calcularMedia(intArray60, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass71 = intArray60.getClass();
        float float74 = calculadora0.calcularMedia(intArray60, (int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray81 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float84 = calculadora76.calcularMedia(intArray81, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        java.lang.Class<?> wildcardClass86 = intArray81.getClass();
        java.lang.Class<?> wildcardClass87 = intArray81.getClass();
        java.lang.Class<?> wildcardClass88 = intArray81.getClass();
        float float91 = calculadora0.calcularMedia(intArray81, (int) (byte) -1, (int) (byte) 1);
        int[] intArray92 = null;
        float float95 = calculadora0.calcularMedia(intArray92, (int) (byte) -1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass96 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass97 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 0.0f + "'", float48 == 0.0f);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals((float) float67, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + 10.0f + "'", float84 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float54 = calculadora46.calcularMedia(intArray51, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass55 = calculadora46.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray58 = new int[] {};
        float float61 = calculadora56.calcularMedia(intArray58, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float70 = calculadora62.calcularMedia(intArray67, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = intArray67.getClass();
        float float74 = calculadora56.calcularMedia(intArray67, (int) '#', 100);
        float float77 = calculadora46.calcularMedia(intArray67, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass78 = intArray67.getClass();
        float float81 = calculadora0.calcularMedia(intArray67, (int) '#', (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora82 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora83 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray88 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float91 = calculadora83.calcularMedia(intArray88, (int) (byte) 10, (int) '4');
        float float94 = calculadora82.calcularMedia(intArray88, 10, 0);
        java.lang.Class<?> wildcardClass95 = intArray88.getClass();
        java.lang.Class<?> wildcardClass96 = intArray88.getClass();
        float float99 = calculadora0.calcularMedia(intArray88, (int) '#', (int) '#');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 0.0f + "'", float54 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 0.0f + "'", float70 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 100.0f + "'", float74 == 100.0f);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + 55.0f + "'", float77 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + 10.0f + "'", float91 == 10.0f);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + (-1.0f) + "'", float99 == (-1.0f));
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        java.lang.Class<?> wildcardClass37 = intArray26.getClass();
        float float40 = calculadora0.calcularMedia(intArray26, (int) (byte) 1, (-1));
        java.lang.Class<?> wildcardClass41 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass42 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        java.lang.Class<?> wildcardClass59 = intArray54.getClass();
        float float62 = calculadora43.calcularMedia(intArray54, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass63 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass71 = calculadora70.getClass();
        int[] intArray72 = new int[] {};
        float float75 = calculadora70.calcularMedia(intArray72, 100, 1);
        java.lang.Class<?> wildcardClass76 = intArray72.getClass();
        float float79 = calculadora64.calcularMedia(intArray72, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass81 = calculadora80.getClass();
        int[] intArray85 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float88 = calculadora80.calcularMedia(intArray85, 0, (int) (short) 1);
        float float91 = calculadora64.calcularMedia(intArray85, 10, (int) (short) 100);
        float float94 = calculadora43.calcularMedia(intArray85, (int) ' ', (int) (byte) 10);
        float float97 = calculadora0.calcularMedia(intArray85, (int) (short) -1, (int) (short) 100);
        java.lang.Class<?> wildcardClass98 = intArray85.getClass();
        java.lang.Class<?> wildcardClass99 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals((float) float79, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + 0.0f + "'", float88 == 0.0f);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + 55.0f + "'", float91 == 55.0f);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        float float23 = calculadora5.calcularMedia(intArray16, 0, 10);
        float float26 = calculadora4.calcularMedia(intArray16, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        int[] intArray29 = new int[] {};
        float float32 = calculadora27.calcularMedia(intArray29, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora27.calcularMedia(intArray35, 10, (int) 'a');
        java.lang.Class<?> wildcardClass43 = intArray35.getClass();
        float float46 = calculadora4.calcularMedia(intArray35, (int) (short) 100, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = calculadora47.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass67 = calculadora66.getClass();
        int[] intArray68 = new int[] {};
        float float71 = calculadora66.calcularMedia(intArray68, 100, 1);
        java.lang.Class<?> wildcardClass72 = intArray68.getClass();
        float float75 = calculadora57.calcularMedia(intArray68, 0, 10);
        float float78 = calculadora47.calcularMedia(intArray68, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray84 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float87 = calculadora79.calcularMedia(intArray84, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass88 = intArray84.getClass();
        float float91 = calculadora47.calcularMedia(intArray84, (int) '#', 10);
        float float94 = calculadora4.calcularMedia(intArray84, (int) (short) 100, (int) (byte) 100);
        float float97 = calculadora0.calcularMedia(intArray84, (int) 'a', (int) (byte) 10);
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals((float) float23, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals((float) float42, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertEquals((float) float75, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + 10.0f + "'", float87 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        float float50 = calculadora0.calcularMedia(intArray40, (int) (short) -1, 100);
        java.lang.Class<?> wildcardClass51 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass52 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        int[] intArray21 = null;
        float float24 = calculadora11.calcularMedia(intArray21, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora11.calcularMedia(intArray31, 100, (int) '#');
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray46 = new int[] {};
        float float49 = calculadora44.calcularMedia(intArray46, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora44.calcularMedia(intArray52, 10, (int) 'a');
        java.lang.Class<?> wildcardClass60 = intArray52.getClass();
        float float63 = calculadora0.calcularMedia(intArray52, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass64 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass65 = calculadora0.getClass();
        int[] intArray66 = null;
        float float69 = calculadora0.calcularMedia(intArray66, 0, (int) (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora23.calcularMedia(intArray31, 10, (int) 'a');
        java.lang.Class<?> wildcardClass39 = intArray31.getClass();
        float float42 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass43 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass44 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass54 = calculadora45.getClass();
        int[] intArray55 = null;
        float float58 = calculadora45.calcularMedia(intArray55, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora69 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass70 = calculadora69.getClass();
        int[] intArray71 = new int[] {};
        float float74 = calculadora69.calcularMedia(intArray71, 100, 1);
        java.lang.Class<?> wildcardClass75 = intArray71.getClass();
        float float78 = calculadora60.calcularMedia(intArray71, 0, 10);
        float float81 = calculadora59.calcularMedia(intArray71, (int) (short) -1, (-1));
        float float84 = calculadora45.calcularMedia(intArray71, (int) (short) -1, (int) (short) 100);
        java.lang.Class<?> wildcardClass85 = intArray71.getClass();
        float float88 = calculadora0.calcularMedia(intArray71, (int) (byte) -1, (int) '#');
        java.lang.Class<?> wildcardClass89 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals((float) float78, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray17 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float20 = calculadora12.calcularMedia(intArray17, (int) (byte) 10, (int) '4');
        float float23 = calculadora11.calcularMedia(intArray17, 10, 0);
        float float26 = calculadora0.calcularMedia(intArray17, (-1), (int) (byte) 0);
        java.lang.Class<?> wildcardClass27 = intArray17.getClass();
        java.lang.Class<?> wildcardClass28 = intArray17.getClass();
        java.lang.Class<?> wildcardClass29 = intArray17.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 10.0f + "'", float20 == 10.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        float float43 = calculadora31.calcularMedia(intArray37, 10, 0);
        float float46 = calculadora0.calcularMedia(intArray37, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        java.lang.Class<?> wildcardClass57 = intArray52.getClass();
        float float60 = calculadora0.calcularMedia(intArray52, 1, 0);
        java.lang.Class<?> wildcardClass61 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float70 = calculadora62.calcularMedia(intArray67, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = calculadora62.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass73 = calculadora72.getClass();
        int[] intArray74 = new int[] {};
        float float77 = calculadora72.calcularMedia(intArray74, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora78 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass79 = calculadora78.getClass();
        int[] intArray83 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float86 = calculadora78.calcularMedia(intArray83, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass87 = intArray83.getClass();
        float float90 = calculadora72.calcularMedia(intArray83, (int) '#', 100);
        float float93 = calculadora62.calcularMedia(intArray83, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass94 = intArray83.getClass();
        float float97 = calculadora0.calcularMedia(intArray83, (int) (short) 10, (int) (byte) -1);
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 0.0f + "'", float70 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + 0.0f + "'", float86 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + 100.0f + "'", float90 == 100.0f);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + 55.0f + "'", float93 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float32 = calculadora24.calcularMedia(intArray29, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        float float44 = calculadora24.calcularMedia(intArray38, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray59 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float62 = calculadora54.calcularMedia(intArray59, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass64 = calculadora63.getClass();
        int[] intArray65 = new int[] {};
        float float68 = calculadora63.calcularMedia(intArray65, 100, 1);
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        float float72 = calculadora54.calcularMedia(intArray65, 0, 10);
        float float75 = calculadora45.calcularMedia(intArray65, 10, (int) (short) 0);
        float float78 = calculadora24.calcularMedia(intArray65, (int) (short) 0, (int) 'a');
        float float81 = calculadora0.calcularMedia(intArray65, (int) (short) 10, (int) 'a');
        int[] intArray82 = null;
        float float85 = calculadora0.calcularMedia(intArray82, (int) (byte) 100, (int) (short) -1);
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 0.0f + "'", float32 == 0.0f);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 5.5f + "'", float44 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 10.0f + "'", float62 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals((float) float72, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertEquals((float) float78, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float81, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        java.lang.Class<?> wildcardClass51 = intArray45.getClass();
        float float54 = calculadora0.calcularMedia(intArray45, (int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass55 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass56 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 97.0f + "'", float54 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass46 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray52 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float55 = calculadora47.calcularMedia(intArray52, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray58 = new int[] {};
        float float61 = calculadora56.calcularMedia(intArray58, 100, 1);
        java.lang.Class<?> wildcardClass62 = intArray58.getClass();
        java.lang.Class<?> wildcardClass63 = intArray58.getClass();
        float float66 = calculadora47.calcularMedia(intArray58, (int) ' ', (int) (byte) -1);
        int[] intArray69 = new int[] { 1, (short) 100 };
        float float72 = calculadora47.calcularMedia(intArray69, (int) (byte) 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        java.lang.Class<?> wildcardClass74 = intArray69.getClass();
        java.lang.Class<?> wildcardClass75 = intArray69.getClass();
        float float78 = calculadora0.calcularMedia(intArray69, 10, (int) (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 10.0f + "'", float55 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + 100.0f + "'", float78 == 100.0f);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        int[] intArray27 = null;
        float float30 = calculadora21.calcularMedia(intArray27, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass31 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray34 = new int[] {};
        float float37 = calculadora32.calcularMedia(intArray34, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora32.calcularMedia(intArray40, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray53 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float56 = calculadora48.calcularMedia(intArray53, 0, (int) (short) 1);
        float float59 = calculadora32.calcularMedia(intArray53, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora69 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass70 = calculadora69.getClass();
        int[] intArray71 = new int[] {};
        float float74 = calculadora69.calcularMedia(intArray71, 100, 1);
        java.lang.Class<?> wildcardClass75 = intArray71.getClass();
        float float78 = calculadora60.calcularMedia(intArray71, 0, 10);
        java.lang.Class<?> wildcardClass79 = intArray71.getClass();
        float float82 = calculadora32.calcularMedia(intArray71, 100, (int) '4');
        java.lang.Class<?> wildcardClass83 = intArray71.getClass();
        float float86 = calculadora21.calcularMedia(intArray71, 0, (int) (byte) 0);
        float float89 = calculadora0.calcularMedia(intArray71, 10, 0);
        java.lang.Class<?> wildcardClass90 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass91 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass92 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 0.0f + "'", float56 == 0.0f);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 55.0f + "'", float59 == 55.0f);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals((float) float78, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray11 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float14 = calculadora6.calcularMedia(intArray11, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass16 = calculadora15.getClass();
        int[] intArray17 = new int[] {};
        float float20 = calculadora15.calcularMedia(intArray17, 100, 1);
        java.lang.Class<?> wildcardClass21 = intArray17.getClass();
        float float24 = calculadora6.calcularMedia(intArray17, 0, 10);
        float float27 = calculadora5.calcularMedia(intArray17, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        float float50 = calculadora28.calcularMedia(intArray40, (int) (short) -1, (-1));
        float float53 = calculadora5.calcularMedia(intArray40, (int) (byte) -1, (int) 'a');
        int[] intArray54 = null;
        float float57 = calculadora5.calcularMedia(intArray54, (-1), (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray63 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float66 = calculadora58.calcularMedia(intArray63, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass67 = intArray63.getClass();
        float float70 = calculadora5.calcularMedia(intArray63, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass71 = intArray63.getClass();
        java.lang.Class<?> wildcardClass72 = intArray63.getClass();
        float float75 = calculadora0.calcularMedia(intArray63, (int) (byte) -1, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass78 = calculadora77.getClass();
        int[] intArray79 = new int[] {};
        float float82 = calculadora77.calcularMedia(intArray79, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora83 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass84 = calculadora83.getClass();
        int[] intArray85 = new int[] {};
        float float88 = calculadora83.calcularMedia(intArray85, 100, 1);
        java.lang.Class<?> wildcardClass89 = intArray85.getClass();
        float float92 = calculadora77.calcularMedia(intArray85, 10, (int) 'a');
        java.lang.Class<?> wildcardClass93 = intArray85.getClass();
        java.lang.Class<?> wildcardClass94 = intArray85.getClass();
        java.lang.Class<?> wildcardClass95 = intArray85.getClass();
        java.lang.Class<?> wildcardClass96 = intArray85.getClass();
        float float99 = calculadora0.calcularMedia(intArray85, (int) (short) -1, (int) 'a');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 10.0f + "'", float14 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + (-1.0f) + "'", float20 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals((float) float24, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 10.0f + "'", float66 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertEquals((float) float92, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + (-1.0f) + "'", float99 == (-1.0f));
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        float float43 = calculadora23.calcularMedia(intArray37, (int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass44 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray59 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float62 = calculadora54.calcularMedia(intArray59, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass64 = calculadora63.getClass();
        int[] intArray65 = new int[] {};
        float float68 = calculadora63.calcularMedia(intArray65, 100, 1);
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        float float72 = calculadora54.calcularMedia(intArray65, 0, 10);
        float float75 = calculadora45.calcularMedia(intArray65, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray82 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float85 = calculadora77.calcularMedia(intArray82, (int) (byte) 10, (int) '4');
        float float88 = calculadora76.calcularMedia(intArray82, 10, 0);
        float float91 = calculadora45.calcularMedia(intArray82, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass92 = intArray82.getClass();
        float float95 = calculadora23.calcularMedia(intArray82, 100, (int) (byte) 0);
        float float98 = calculadora0.calcularMedia(intArray82, (int) (byte) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass99 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 5.5f + "'", float43 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 10.0f + "'", float62 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals((float) float72, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + 10.0f + "'", float85 == 10.0f);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float98 + "' != '" + 1.0f + "'", float98 == 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora20.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray28 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float31 = calculadora23.calcularMedia(intArray28, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray34 = new int[] {};
        float float37 = calculadora32.calcularMedia(intArray34, 100, 1);
        java.lang.Class<?> wildcardClass38 = intArray34.getClass();
        float float41 = calculadora23.calcularMedia(intArray34, 0, 10);
        java.lang.Class<?> wildcardClass42 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        float float61 = calculadora43.calcularMedia(intArray54, 0, 10);
        float float64 = calculadora23.calcularMedia(intArray54, 0, (int) ' ');
        float float67 = calculadora20.calcularMedia(intArray54, (int) 'a', (int) (byte) 0);
        float float70 = calculadora0.calcularMedia(intArray54, (int) '#', (int) (byte) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass72 = calculadora71.getClass();
        int[] intArray73 = new int[] {};
        float float76 = calculadora71.calcularMedia(intArray73, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass78 = calculadora77.getClass();
        int[] intArray79 = new int[] {};
        float float82 = calculadora77.calcularMedia(intArray79, 100, 1);
        java.lang.Class<?> wildcardClass83 = intArray79.getClass();
        float float86 = calculadora71.calcularMedia(intArray79, 10, (int) 'a');
        java.lang.Class<?> wildcardClass87 = intArray79.getClass();
        float float90 = calculadora0.calcularMedia(intArray79, 0, (int) 'a');
        java.lang.Class<?> wildcardClass91 = intArray79.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 10.0f + "'", float31 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float64, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals((float) float86, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals((float) float90, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) -1, (int) ' ');
        java.lang.Class<?> wildcardClass47 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray53 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float56 = calculadora48.calcularMedia(intArray53, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass57 = calculadora48.getClass();
        java.lang.Class<?> wildcardClass58 = calculadora48.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass60 = calculadora59.getClass();
        int[] intArray64 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float67 = calculadora59.calcularMedia(intArray64, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass68 = calculadora59.getClass();
        int[] intArray69 = null;
        float float72 = calculadora59.calcularMedia(intArray69, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray79 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float82 = calculadora74.calcularMedia(intArray79, (int) (byte) 10, (int) '4');
        float float85 = calculadora73.calcularMedia(intArray79, 10, 0);
        float float88 = calculadora59.calcularMedia(intArray79, 100, (int) '#');
        float float91 = calculadora48.calcularMedia(intArray79, (-1), (int) (short) 100);
        java.lang.Class<?> wildcardClass92 = intArray79.getClass();
        float float95 = calculadora0.calcularMedia(intArray79, (int) (short) 10, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 0.0f + "'", float56 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 0.0f + "'", float67 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + 10.0f + "'", float82 == 10.0f);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        float float23 = calculadora5.calcularMedia(intArray16, 0, 10);
        float float26 = calculadora0.calcularMedia(intArray16, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass27 = calculadora0.getClass();
        int[] intArray28 = null;
        float float31 = calculadora0.calcularMedia(intArray28, (int) (byte) 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray44 = new int[] {};
        float float47 = calculadora42.calcularMedia(intArray44, 100, 1);
        java.lang.Class<?> wildcardClass48 = intArray44.getClass();
        java.lang.Class<?> wildcardClass49 = intArray44.getClass();
        float float52 = calculadora33.calcularMedia(intArray44, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass53 = calculadora33.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        float float66 = calculadora54.calcularMedia(intArray60, 10, 0);
        float float69 = calculadora33.calcularMedia(intArray60, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass71 = calculadora70.getClass();
        int[] intArray72 = new int[] {};
        float float75 = calculadora70.calcularMedia(intArray72, 100, 1);
        java.lang.Class<?> wildcardClass76 = intArray72.getClass();
        java.lang.Class<?> wildcardClass77 = intArray72.getClass();
        float float80 = calculadora33.calcularMedia(intArray72, 0, (int) '#');
        java.lang.Class<?> wildcardClass81 = intArray72.getClass();
        float float84 = calculadora0.calcularMedia(intArray72, (int) (short) 100, 10);
        java.lang.Class<?> wildcardClass85 = intArray72.getClass();
        java.lang.Class<?> wildcardClass86 = intArray72.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals((float) float23, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals((float) float80, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = intArray37.getClass();
        java.lang.Class<?> wildcardClass46 = intArray37.getClass();
        java.lang.Class<?> wildcardClass47 = intArray37.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora20.calcularMedia(intArray31, 0, 10);
        float float41 = calculadora0.calcularMedia(intArray31, 0, (int) ' ');
        java.lang.Class<?> wildcardClass42 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float51 = calculadora43.calcularMedia(intArray48, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        java.lang.Class<?> wildcardClass53 = intArray48.getClass();
        java.lang.Class<?> wildcardClass54 = intArray48.getClass();
        float float57 = calculadora0.calcularMedia(intArray48, 0, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass59 = calculadora58.getClass();
        int[] intArray63 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float66 = calculadora58.calcularMedia(intArray63, 0, (int) (short) 1);
        float float69 = calculadora0.calcularMedia(intArray63, (int) (byte) 100, (int) (byte) 0);
        java.lang.Class<?> wildcardClass70 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 0.0f + "'", float66 == 0.0f);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray29 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float32 = calculadora24.calcularMedia(intArray29, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora24.calcularMedia(intArray35, 0, 10);
        float float45 = calculadora23.calcularMedia(intArray35, (int) (short) -1, (-1));
        float float48 = calculadora0.calcularMedia(intArray35, (int) (byte) -1, (int) 'a');
        int[] intArray49 = null;
        float float52 = calculadora0.calcularMedia(intArray49, (-1), (-1));
        java.lang.Class<?> wildcardClass53 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass54 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float63 = calculadora55.calcularMedia(intArray60, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray69 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float72 = calculadora64.calcularMedia(intArray69, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        java.lang.Class<?> wildcardClass79 = intArray75.getClass();
        float float82 = calculadora64.calcularMedia(intArray75, 0, 10);
        float float85 = calculadora55.calcularMedia(intArray75, 10, (int) (short) 0);
        int[] intArray90 = new int[] { 0, 100, (byte) 0, 'a' };
        float float93 = calculadora55.calcularMedia(intArray90, (int) (byte) -1, (int) 'a');
        float float96 = calculadora0.calcularMedia(intArray90, (int) '4', (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 10.0f + "'", float32 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals((float) float42, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 0.0f + "'", float63 == 0.0f);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 10.0f + "'", float72 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals((float) float82, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + (-1.0f) + "'", float96 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) -1, (int) ' ');
        java.lang.Class<?> wildcardClass47 = calculadora0.getClass();
        int[] intArray48 = null;
        float float51 = calculadora0.calcularMedia(intArray48, (int) (short) 10, (int) (byte) -1);
        java.lang.Class<?> wildcardClass52 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) -1, (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        java.lang.Class<?> wildcardClass49 = calculadora47.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray55 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float58 = calculadora50.calcularMedia(intArray55, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass60 = calculadora59.getClass();
        int[] intArray61 = new int[] {};
        float float64 = calculadora59.calcularMedia(intArray61, 100, 1);
        java.lang.Class<?> wildcardClass65 = intArray61.getClass();
        float float68 = calculadora50.calcularMedia(intArray61, 0, 10);
        java.lang.Class<?> wildcardClass69 = calculadora50.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray75 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float78 = calculadora70.calcularMedia(intArray75, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray81 = new int[] {};
        float float84 = calculadora79.calcularMedia(intArray81, 100, 1);
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        float float88 = calculadora70.calcularMedia(intArray81, 0, 10);
        float float91 = calculadora50.calcularMedia(intArray81, 0, (int) ' ');
        float float94 = calculadora47.calcularMedia(intArray81, (int) 'a', (int) (byte) 0);
        float float97 = calculadora0.calcularMedia(intArray81, (int) ' ', 0);
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass99 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 10.0f + "'", float58 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals((float) float68, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + 10.0f + "'", float78 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float91, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray11 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float14 = calculadora6.calcularMedia(intArray11, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, (int) '#', 100);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float28 = calculadora20.calcularMedia(intArray25, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass36 = calculadora35.getClass();
        int[] intArray37 = new int[] {};
        float float40 = calculadora35.calcularMedia(intArray37, 100, 1);
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora29.calcularMedia(intArray37, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        float float56 = calculadora29.calcularMedia(intArray50, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass58 = calculadora57.getClass();
        int[] intArray59 = new int[] {};
        float float62 = calculadora57.calcularMedia(intArray59, 100, 1);
        java.lang.Class<?> wildcardClass63 = intArray59.getClass();
        java.lang.Class<?> wildcardClass64 = intArray59.getClass();
        float float67 = calculadora29.calcularMedia(intArray59, (int) (byte) -1, (int) (byte) -1);
        float float70 = calculadora20.calcularMedia(intArray59, (int) (short) 1, (int) (short) 0);
        float float73 = calculadora0.calcularMedia(intArray59, (int) '#', (-1));
        java.lang.Class<?> wildcardClass74 = intArray59.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 100.0f + "'", float18 == 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.0f + "'", float28 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals((float) float44, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 55.0f + "'", float56 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass5 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray14 = new int[] {};
        float float17 = calculadora12.calcularMedia(intArray14, 100, 1);
        java.lang.Class<?> wildcardClass18 = intArray14.getClass();
        float float21 = calculadora6.calcularMedia(intArray14, 10, (int) 'a');
        float float24 = calculadora0.calcularMedia(intArray14, (int) (byte) 0, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass26 = calculadora25.getClass();
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float33 = calculadora25.calcularMedia(intArray30, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray45 = new int[] {};
        float float48 = calculadora43.calcularMedia(intArray45, 100, 1);
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        float float52 = calculadora34.calcularMedia(intArray45, 0, 10);
        float float55 = calculadora25.calcularMedia(intArray45, 10, (int) (short) 0);
        int[] intArray60 = new int[] { 0, 100, (byte) 0, 'a' };
        float float63 = calculadora25.calcularMedia(intArray60, (int) (byte) -1, (int) 'a');
        float float66 = calculadora0.calcularMedia(intArray60, (int) (byte) 1, (int) 'a');
        java.lang.Class<?> wildcardClass67 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + (-1.0f) + "'", float17 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals((float) float21, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float24, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + 0.0f + "'", float33 == 0.0f);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals((float) float52, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 97.0f + "'", float66 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora21.calcularMedia(intArray31, 0, 100);
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 10, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        java.lang.Class<?> wildcardClass46 = calculadora44.getClass();
        java.lang.Class<?> wildcardClass47 = calculadora44.getClass();
        java.lang.Class<?> wildcardClass48 = calculadora44.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass59 = calculadora58.getClass();
        int[] intArray60 = new int[] {};
        float float63 = calculadora58.calcularMedia(intArray60, 100, 1);
        java.lang.Class<?> wildcardClass64 = intArray60.getClass();
        float float67 = calculadora49.calcularMedia(intArray60, 0, 10);
        float float70 = calculadora44.calcularMedia(intArray60, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass71 = intArray60.getClass();
        float float74 = calculadora0.calcularMedia(intArray60, (int) (short) -1, (int) '#');
        java.lang.Class<?> wildcardClass75 = intArray60.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 36.0f + "'", float40 == 36.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals((float) float67, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass14 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass15 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray18 = new int[] {};
        float float21 = calculadora16.calcularMedia(intArray18, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass23 = calculadora22.getClass();
        int[] intArray24 = new int[] {};
        float float27 = calculadora22.calcularMedia(intArray24, 100, 1);
        java.lang.Class<?> wildcardClass28 = intArray24.getClass();
        float float31 = calculadora16.calcularMedia(intArray24, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float40 = calculadora32.calcularMedia(intArray37, 0, (int) (short) 1);
        float float43 = calculadora16.calcularMedia(intArray37, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float52 = calculadora44.calcularMedia(intArray49, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        float float64 = calculadora44.calcularMedia(intArray58, (int) (byte) 1, (int) '4');
        float float67 = calculadora16.calcularMedia(intArray58, (int) (byte) 10, (int) (byte) 10);
        float float70 = calculadora0.calcularMedia(intArray58, (int) ' ', (int) '#');
        java.lang.Class<?> wildcardClass71 = intArray58.getClass();
        java.lang.Class<?> wildcardClass72 = intArray58.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + (-1.0f) + "'", float21 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals((float) float31, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 0.0f + "'", float40 == 0.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 55.0f + "'", float43 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 0.0f + "'", float52 == 0.0f);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 5.5f + "'", float64 == 5.5f);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float18 = calculadora10.calcularMedia(intArray15, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray24 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float27 = calculadora19.calcularMedia(intArray24, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        float float37 = calculadora19.calcularMedia(intArray30, 0, 10);
        float float40 = calculadora10.calcularMedia(intArray30, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray47 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float50 = calculadora42.calcularMedia(intArray47, (int) (byte) 10, (int) '4');
        float float53 = calculadora41.calcularMedia(intArray47, 10, 0);
        float float56 = calculadora10.calcularMedia(intArray47, (int) (short) 0, 0);
        float float59 = calculadora0.calcularMedia(intArray47, (int) (byte) 100, (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass61 = calculadora60.getClass();
        java.lang.Class<?> wildcardClass62 = calculadora60.getClass();
        java.lang.Class<?> wildcardClass63 = calculadora60.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray70 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float73 = calculadora65.calcularMedia(intArray70, (int) (byte) 10, (int) '4');
        float float76 = calculadora64.calcularMedia(intArray70, 10, 0);
        float float79 = calculadora60.calcularMedia(intArray70, 0, 100);
        float float82 = calculadora0.calcularMedia(intArray70, (int) (short) -1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = intArray70.getClass();
        java.lang.Class<?> wildcardClass84 = intArray70.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 0.0f + "'", float18 == 0.0f);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 10.0f + "'", float27 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals((float) float37, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + 10.0f + "'", float50 == 10.0f);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 10.0f + "'", float73 == 10.0f);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 36.0f + "'", float79 == 36.0f);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray17 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float20 = calculadora12.calcularMedia(intArray17, (int) (byte) 10, (int) '4');
        float float23 = calculadora11.calcularMedia(intArray17, 10, 0);
        float float26 = calculadora0.calcularMedia(intArray17, (-1), (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        int[] intArray32 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float35 = calculadora27.calcularMedia(intArray32, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray41 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float44 = calculadora36.calcularMedia(intArray41, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora36.calcularMedia(intArray47, 0, 10);
        float float57 = calculadora27.calcularMedia(intArray47, 10, (int) (short) 0);
        float float60 = calculadora0.calcularMedia(intArray47, (int) (byte) 100, (int) (short) 10);
        java.lang.Class<?> wildcardClass61 = intArray47.getClass();
        java.lang.Class<?> wildcardClass62 = intArray47.getClass();
        java.lang.Class<?> wildcardClass63 = intArray47.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 10.0f + "'", float20 == 10.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + 0.0f + "'", float35 == 0.0f);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 10.0f + "'", float44 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass23 = calculadora22.getClass();
        int[] intArray27 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float30 = calculadora22.calcularMedia(intArray27, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray36 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float39 = calculadora31.calcularMedia(intArray36, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora31.calcularMedia(intArray42, 0, 10);
        float float52 = calculadora22.calcularMedia(intArray42, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray59 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float62 = calculadora54.calcularMedia(intArray59, (int) (byte) 10, (int) '4');
        float float65 = calculadora53.calcularMedia(intArray59, 10, 0);
        float float68 = calculadora22.calcularMedia(intArray59, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass69 = intArray59.getClass();
        float float72 = calculadora0.calcularMedia(intArray59, 100, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray78 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float81 = calculadora73.calcularMedia(intArray78, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass82 = intArray78.getClass();
        java.lang.Class<?> wildcardClass83 = intArray78.getClass();
        float float86 = calculadora0.calcularMedia(intArray78, (int) (short) 10, (int) 'a');
        java.lang.Class<?> wildcardClass87 = calculadora0.getClass();
        int[] intArray88 = null;
        float float91 = calculadora0.calcularMedia(intArray88, (int) ' ', (int) (byte) 1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 0.0f + "'", float30 == 0.0f);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 10.0f + "'", float39 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals((float) float49, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 10.0f + "'", float62 == 10.0f);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + 10.0f + "'", float81 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + 53.5f + "'", float86 == 53.5f);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        float float38 = calculadora0.calcularMedia(intArray30, (int) (byte) -1, (int) (byte) -1);
        java.lang.Class<?> wildcardClass39 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass2 = calculadora1.getClass();
        int[] intArray3 = new int[] {};
        float float6 = calculadora1.calcularMedia(intArray3, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora7 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass8 = calculadora7.getClass();
        int[] intArray9 = new int[] {};
        float float12 = calculadora7.calcularMedia(intArray9, 100, 1);
        java.lang.Class<?> wildcardClass13 = intArray9.getClass();
        float float16 = calculadora1.calcularMedia(intArray9, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        int[] intArray22 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float25 = calculadora17.calcularMedia(intArray22, 0, (int) (short) 1);
        float float28 = calculadora1.calcularMedia(intArray22, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        java.lang.Class<?> wildcardClass48 = intArray40.getClass();
        float float51 = calculadora1.calcularMedia(intArray40, 100, (int) '4');
        float float54 = calculadora0.calcularMedia(intArray40, (int) (short) 100, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray63 = new int[] {};
        float float66 = calculadora61.calcularMedia(intArray63, 100, 1);
        java.lang.Class<?> wildcardClass67 = intArray63.getClass();
        float float70 = calculadora55.calcularMedia(intArray63, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass72 = calculadora71.getClass();
        int[] intArray76 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float79 = calculadora71.calcularMedia(intArray76, 0, (int) (short) 1);
        float float82 = calculadora55.calcularMedia(intArray76, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora83 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass84 = calculadora83.getClass();
        int[] intArray85 = new int[] {};
        float float88 = calculadora83.calcularMedia(intArray85, 100, 1);
        java.lang.Class<?> wildcardClass89 = intArray85.getClass();
        java.lang.Class<?> wildcardClass90 = intArray85.getClass();
        float float93 = calculadora55.calcularMedia(intArray85, (int) (byte) -1, (int) (byte) -1);
        java.lang.Class<?> wildcardClass94 = intArray85.getClass();
        float float97 = calculadora0.calcularMedia(intArray85, 0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + (-1.0f) + "'", float6 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals((float) float16, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 0.0f + "'", float25 == 0.0f);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 55.0f + "'", float28 == 55.0f);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 0.0f + "'", float79 == 0.0f);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + 55.0f + "'", float82 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertEquals((float) float97, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = calculadora47.getClass();
        int[] intArray57 = null;
        float float60 = calculadora47.calcularMedia(intArray57, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray67 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float70 = calculadora62.calcularMedia(intArray67, (int) (byte) 10, (int) '4');
        float float73 = calculadora61.calcularMedia(intArray67, 10, 0);
        float float76 = calculadora47.calcularMedia(intArray67, 100, (int) '#');
        java.lang.Class<?> wildcardClass77 = intArray67.getClass();
        float float80 = calculadora0.calcularMedia(intArray67, (int) (byte) -1, (int) (short) 10);
        java.lang.Class<?> wildcardClass81 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 10.0f + "'", float70 == 10.0f);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        int[] intArray29 = new int[] {};
        float float32 = calculadora27.calcularMedia(intArray29, 100, 1);
        java.lang.Class<?> wildcardClass33 = intArray29.getClass();
        float float36 = calculadora21.calcularMedia(intArray29, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray42 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float45 = calculadora37.calcularMedia(intArray42, 0, (int) (short) 1);
        float float48 = calculadora21.calcularMedia(intArray42, 10, (int) (short) 100);
        float float51 = calculadora0.calcularMedia(intArray42, (int) ' ', (int) (byte) 10);
        java.lang.Class<?> wildcardClass52 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass54 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals((float) float36, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 0.0f + "'", float45 == 0.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 55.0f + "'", float48 == 55.0f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora2 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass3 = calculadora2.getClass();
        int[] intArray7 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float10 = calculadora2.calcularMedia(intArray7, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass11 = calculadora2.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray17 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float20 = calculadora12.calcularMedia(intArray17, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        java.lang.Class<?> wildcardClass27 = intArray23.getClass();
        float float30 = calculadora12.calcularMedia(intArray23, 0, 10);
        float float33 = calculadora2.calcularMedia(intArray23, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass34 = calculadora2.getClass();
        java.lang.Class<?> wildcardClass35 = calculadora2.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        float float48 = calculadora36.calcularMedia(intArray42, 10, 0);
        java.lang.Class<?> wildcardClass49 = calculadora36.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass61 = calculadora60.getClass();
        int[] intArray62 = new int[] {};
        float float65 = calculadora60.calcularMedia(intArray62, 100, 1);
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        float float69 = calculadora51.calcularMedia(intArray62, 0, 10);
        float float72 = calculadora50.calcularMedia(intArray62, (int) (short) -1, (-1));
        float float75 = calculadora36.calcularMedia(intArray62, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray81 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float84 = calculadora76.calcularMedia(intArray81, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        java.lang.Class<?> wildcardClass86 = intArray81.getClass();
        java.lang.Class<?> wildcardClass87 = intArray81.getClass();
        float float90 = calculadora36.calcularMedia(intArray81, (int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = intArray81.getClass();
        float float94 = calculadora2.calcularMedia(intArray81, (int) ' ', 100);
        float float97 = calculadora0.calcularMedia(intArray81, 100, 0);
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 0.0f + "'", float10 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 10.0f + "'", float20 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals((float) float30, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals((float) float69, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + 10.0f + "'", float84 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + 97.0f + "'", float90 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + 97.0f + "'", float94 == 97.0f);
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        float float48 = calculadora28.calcularMedia(intArray42, (int) (byte) 1, (int) '4');
        float float51 = calculadora0.calcularMedia(intArray42, (int) (byte) 10, (int) (byte) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora0.calcularMedia(intArray57, (int) (byte) 0, 1);
        java.lang.Class<?> wildcardClass64 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass65 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 5.5f + "'", float48 == 5.5f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 1.0f + "'", float63 == 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora0.calcularMedia(intArray51, (int) 'a', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float70 = calculadora62.calcularMedia(intArray67, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray76 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float79 = calculadora71.calcularMedia(intArray76, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass81 = calculadora80.getClass();
        int[] intArray82 = new int[] {};
        float float85 = calculadora80.calcularMedia(intArray82, 100, 1);
        java.lang.Class<?> wildcardClass86 = intArray82.getClass();
        float float89 = calculadora71.calcularMedia(intArray82, 0, 10);
        float float92 = calculadora62.calcularMedia(intArray82, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass93 = intArray82.getClass();
        float float96 = calculadora0.calcularMedia(intArray82, (int) (short) -1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass97 = intArray82.getClass();
        java.lang.Class<?> wildcardClass98 = intArray82.getClass();
        java.lang.Class<?> wildcardClass99 = intArray82.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 0.0f + "'", float70 == 0.0f);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 10.0f + "'", float79 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertEquals((float) float89, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + (-1.0f) + "'", float96 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray16 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float19 = calculadora11.calcularMedia(intArray16, (int) (byte) 10, (int) '4');
        float float22 = calculadora10.calcularMedia(intArray16, 10, 0);
        java.lang.Class<?> wildcardClass23 = calculadora10.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray30 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float33 = calculadora25.calcularMedia(intArray30, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray36 = new int[] {};
        float float39 = calculadora34.calcularMedia(intArray36, 100, 1);
        java.lang.Class<?> wildcardClass40 = intArray36.getClass();
        float float43 = calculadora25.calcularMedia(intArray36, 0, 10);
        float float46 = calculadora24.calcularMedia(intArray36, (int) (short) -1, (-1));
        float float49 = calculadora10.calcularMedia(intArray36, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray55 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float58 = calculadora50.calcularMedia(intArray55, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass59 = intArray55.getClass();
        java.lang.Class<?> wildcardClass60 = intArray55.getClass();
        java.lang.Class<?> wildcardClass61 = intArray55.getClass();
        float float64 = calculadora10.calcularMedia(intArray55, (int) '#', (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass66 = calculadora65.getClass();
        int[] intArray67 = new int[] {};
        float float70 = calculadora65.calcularMedia(intArray67, 100, 1);
        float float73 = calculadora10.calcularMedia(intArray67, 0, (int) (short) 10);
        float float76 = calculadora0.calcularMedia(intArray67, (int) '4', (int) (byte) 10);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 10.0f + "'", float19 == 10.0f);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + 10.0f + "'", float33 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals((float) float43, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 10.0f + "'", float58 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 97.0f + "'", float64 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = calculadora16.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass27 = calculadora26.getClass();
        int[] intArray31 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float34 = calculadora26.calcularMedia(intArray31, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray40 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float43 = calculadora35.calcularMedia(intArray40, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray46 = new int[] {};
        float float49 = calculadora44.calcularMedia(intArray46, 100, 1);
        java.lang.Class<?> wildcardClass50 = intArray46.getClass();
        float float53 = calculadora35.calcularMedia(intArray46, 0, 10);
        float float56 = calculadora26.calcularMedia(intArray46, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray63 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float66 = calculadora58.calcularMedia(intArray63, (int) (byte) 10, (int) '4');
        float float69 = calculadora57.calcularMedia(intArray63, 10, 0);
        float float72 = calculadora26.calcularMedia(intArray63, (int) (short) 0, 0);
        float float75 = calculadora16.calcularMedia(intArray63, (int) (byte) 100, (int) (short) -1);
        float float78 = calculadora0.calcularMedia(intArray63, (int) '4', (int) (short) 1);
        java.lang.Class<?> wildcardClass79 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass80 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 0.0f + "'", float34 == 0.0f);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 10.0f + "'", float43 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals((float) float53, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 10.0f + "'", float66 == 10.0f);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora29.calcularMedia(intArray41, (int) (short) -1, (-1));
        float float54 = calculadora0.calcularMedia(intArray41, (int) (short) 100, 100);
        int[] intArray55 = null;
        float float58 = calculadora0.calcularMedia(intArray55, (int) (byte) 100, (int) (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass32 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray44 = new int[] {};
        float float47 = calculadora42.calcularMedia(intArray44, 100, 1);
        java.lang.Class<?> wildcardClass48 = intArray44.getClass();
        float float51 = calculadora33.calcularMedia(intArray44, 0, 10);
        float float54 = calculadora23.calcularMedia(intArray44, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass55 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        float float68 = calculadora56.calcularMedia(intArray62, 10, 0);
        java.lang.Class<?> wildcardClass69 = intArray62.getClass();
        float float72 = calculadora23.calcularMedia(intArray62, (int) (byte) 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass73 = intArray62.getClass();
        float float76 = calculadora0.calcularMedia(intArray62, 0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass77 = intArray62.getClass();
        java.lang.Class<?> wildcardClass78 = intArray62.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 5.5f + "'", float76 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float22 = calculadora14.calcularMedia(intArray19, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray28 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float31 = calculadora23.calcularMedia(intArray28, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray34 = new int[] {};
        float float37 = calculadora32.calcularMedia(intArray34, 100, 1);
        java.lang.Class<?> wildcardClass38 = intArray34.getClass();
        float float41 = calculadora23.calcularMedia(intArray34, 0, 10);
        float float44 = calculadora14.calcularMedia(intArray34, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray51 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float54 = calculadora46.calcularMedia(intArray51, (int) (byte) 10, (int) '4');
        float float57 = calculadora45.calcularMedia(intArray51, 10, 0);
        float float60 = calculadora14.calcularMedia(intArray51, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray66 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float69 = calculadora61.calcularMedia(intArray66, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass70 = calculadora61.getClass();
        java.lang.Class<?> wildcardClass71 = calculadora61.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray78 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float81 = calculadora73.calcularMedia(intArray78, (int) (byte) 10, (int) '4');
        float float84 = calculadora72.calcularMedia(intArray78, 10, 0);
        float float87 = calculadora61.calcularMedia(intArray78, (-1), (int) (byte) 0);
        float float90 = calculadora14.calcularMedia(intArray78, 10, (int) (short) 0);
        float float93 = calculadora0.calcularMedia(intArray78, (int) (byte) 1, (int) ' ');
        java.lang.Class<?> wildcardClass94 = intArray78.getClass();
        java.lang.Class<?> wildcardClass95 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 0.0f + "'", float22 == 0.0f);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 10.0f + "'", float31 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 10.0f + "'", float54 == 10.0f);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 0.0f + "'", float69 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + 10.0f + "'", float81 == 10.0f);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + 5.5f + "'", float93 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        java.lang.Class<?> wildcardClass38 = intArray33.getClass();
        float float41 = calculadora22.calcularMedia(intArray33, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass42 = calculadora22.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray49 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float52 = calculadora44.calcularMedia(intArray49, (int) (byte) 10, (int) '4');
        float float55 = calculadora43.calcularMedia(intArray49, 10, 0);
        float float58 = calculadora22.calcularMedia(intArray49, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass60 = calculadora59.getClass();
        int[] intArray64 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float67 = calculadora59.calcularMedia(intArray64, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray73 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float76 = calculadora68.calcularMedia(intArray73, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass78 = calculadora77.getClass();
        int[] intArray79 = new int[] {};
        float float82 = calculadora77.calcularMedia(intArray79, 100, 1);
        java.lang.Class<?> wildcardClass83 = intArray79.getClass();
        float float86 = calculadora68.calcularMedia(intArray79, 0, 10);
        float float89 = calculadora59.calcularMedia(intArray79, 10, (int) (short) 0);
        float float92 = calculadora22.calcularMedia(intArray79, 1, (int) (short) 0);
        float float95 = calculadora0.calcularMedia(intArray79, (int) (byte) 1, (int) (short) 10);
        java.lang.Class<?> wildcardClass96 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass97 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + (-1.0f) + "'", float41 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 10.0f + "'", float52 == 10.0f);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 0.0f + "'", float67 == 0.0f);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 10.0f + "'", float76 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals((float) float86, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertEquals((float) float95, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float27 = calculadora19.calcularMedia(intArray24, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora28.calcularMedia(intArray39, 0, 10);
        float float49 = calculadora19.calcularMedia(intArray39, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        float float62 = calculadora50.calcularMedia(intArray56, 10, 0);
        float float65 = calculadora19.calcularMedia(intArray56, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass66 = intArray56.getClass();
        float float69 = calculadora0.calcularMedia(intArray56, (int) '4', (int) (short) -1);
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray77 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float80 = calculadora72.calcularMedia(intArray77, (int) (byte) 10, (int) '4');
        float float83 = calculadora71.calcularMedia(intArray77, 10, 0);
        java.lang.Class<?> wildcardClass84 = intArray77.getClass();
        float float87 = calculadora0.calcularMedia(intArray77, (int) (short) 10, (int) ' ');
        int[] intArray88 = null;
        float float91 = calculadora0.calcularMedia(intArray88, (int) (short) 10, 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 10.0f + "'", float80 == 10.0f);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + 10.0f + "'", float87 == 10.0f);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora23.calcularMedia(intArray31, 10, (int) 'a');
        java.lang.Class<?> wildcardClass39 = intArray31.getClass();
        float float42 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        java.lang.Class<?> wildcardClass45 = calculadora43.getClass();
        java.lang.Class<?> wildcardClass46 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray53 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float56 = calculadora48.calcularMedia(intArray53, (int) (byte) 10, (int) '4');
        float float59 = calculadora47.calcularMedia(intArray53, 10, 0);
        float float62 = calculadora43.calcularMedia(intArray53, 0, 100);
        int[] intArray63 = null;
        float float66 = calculadora43.calcularMedia(intArray63, (int) '#', (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray73 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float76 = calculadora68.calcularMedia(intArray73, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass78 = calculadora77.getClass();
        int[] intArray79 = new int[] {};
        float float82 = calculadora77.calcularMedia(intArray79, 100, 1);
        java.lang.Class<?> wildcardClass83 = intArray79.getClass();
        float float86 = calculadora68.calcularMedia(intArray79, 0, 10);
        float float89 = calculadora67.calcularMedia(intArray79, (int) (short) -1, (-1));
        float float92 = calculadora43.calcularMedia(intArray79, (int) (byte) -1, (int) (short) 0);
        float float95 = calculadora0.calcularMedia(intArray79, (int) (short) 0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass96 = intArray79.getClass();
        java.lang.Class<?> wildcardClass97 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 10.0f + "'", float56 == 10.0f);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 36.0f + "'", float62 == 36.0f);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 10.0f + "'", float76 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals((float) float86, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertEquals((float) float95, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora40.calcularMedia(intArray48, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float64 = calculadora56.calcularMedia(intArray61, 0, (int) (short) 1);
        float float67 = calculadora40.calcularMedia(intArray61, 10, (int) (short) 100);
        float float70 = calculadora0.calcularMedia(intArray61, (int) (byte) -1, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass72 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass73 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray80 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float83 = calculadora75.calcularMedia(intArray80, (int) (byte) 10, (int) '4');
        float float86 = calculadora74.calcularMedia(intArray80, 10, 0);
        float float89 = calculadora0.calcularMedia(intArray80, (int) (short) -1, (int) (short) 0);
        java.lang.Class<?> wildcardClass90 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 55.0f + "'", float67 == 55.0f);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 10.0f + "'", float83 == 10.0f);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        float float53 = calculadora23.calcularMedia(intArray43, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        float float66 = calculadora54.calcularMedia(intArray60, 10, 0);
        float float69 = calculadora23.calcularMedia(intArray60, (int) (short) 0, 0);
        float float72 = calculadora0.calcularMedia(intArray60, 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass73 = intArray60.getClass();
        java.lang.Class<?> wildcardClass74 = intArray60.getClass();
        java.lang.Class<?> wildcardClass75 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        int[] intArray35 = new int[] { 0, 100, (byte) 0, 'a' };
        float float38 = calculadora0.calcularMedia(intArray35, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        java.lang.Class<?> wildcardClass40 = intArray35.getClass();
        java.lang.Class<?> wildcardClass41 = intArray35.getClass();
        java.lang.Class<?> wildcardClass42 = intArray35.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray29 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float32 = calculadora24.calcularMedia(intArray29, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora24.calcularMedia(intArray35, 0, 10);
        float float45 = calculadora23.calcularMedia(intArray35, (int) (short) -1, (-1));
        float float48 = calculadora0.calcularMedia(intArray35, (int) (byte) -1, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray54 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float57 = calculadora49.calcularMedia(intArray54, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass58 = calculadora49.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray70 = new int[] {};
        float float73 = calculadora68.calcularMedia(intArray70, 100, 1);
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        float float77 = calculadora59.calcularMedia(intArray70, 0, 10);
        float float80 = calculadora49.calcularMedia(intArray70, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass81 = intArray70.getClass();
        float float84 = calculadora0.calcularMedia(intArray70, (int) '4', (-1));
        java.lang.Class<?> wildcardClass85 = intArray70.getClass();
        java.lang.Class<?> wildcardClass86 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 10.0f + "'", float32 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals((float) float42, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 0.0f + "'", float57 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float54 = calculadora46.calcularMedia(intArray51, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        float float73 = calculadora55.calcularMedia(intArray66, 0, 10);
        float float76 = calculadora46.calcularMedia(intArray66, 10, (int) (short) 0);
        float float79 = calculadora0.calcularMedia(intArray66, (int) (short) -1, (int) (byte) 1);
        int[] intArray80 = null;
        float float83 = calculadora0.calcularMedia(intArray80, (int) (byte) 100, 1);
        java.lang.Class<?> wildcardClass84 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 0.0f + "'", float54 == 0.0f);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        float float61 = calculadora46.calcularMedia(intArray54, 10, (int) 'a');
        java.lang.Class<?> wildcardClass62 = intArray54.getClass();
        java.lang.Class<?> wildcardClass63 = intArray54.getClass();
        float float66 = calculadora0.calcularMedia(intArray54, 100, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass68 = calculadora67.getClass();
        int[] intArray69 = new int[] {};
        float float72 = calculadora67.calcularMedia(intArray69, 100, 1);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        float float76 = calculadora0.calcularMedia(intArray69, 0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = intArray69.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora0.calcularMedia(intArray42, (int) (byte) 100, (int) (byte) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass61 = calculadora60.getClass();
        int[] intArray62 = new int[] {};
        float float65 = calculadora60.calcularMedia(intArray62, 100, 1);
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        float float69 = calculadora51.calcularMedia(intArray62, 0, 10);
        float float72 = calculadora50.calcularMedia(intArray62, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray81 = new int[] {};
        float float84 = calculadora79.calcularMedia(intArray81, 100, 1);
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        float float88 = calculadora73.calcularMedia(intArray81, 10, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intArray81.getClass();
        float float92 = calculadora50.calcularMedia(intArray81, (int) (short) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass93 = intArray81.getClass();
        float float96 = calculadora0.calcularMedia(intArray81, (int) (byte) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass97 = intArray81.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals((float) float69, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertEquals((float) float96, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        float float48 = calculadora28.calcularMedia(intArray42, (int) (byte) 1, (int) '4');
        float float51 = calculadora0.calcularMedia(intArray42, (int) (byte) 10, (int) (byte) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora0.calcularMedia(intArray57, (int) (byte) 0, 1);
        int[] intArray64 = null;
        float float67 = calculadora0.calcularMedia(intArray64, (int) (short) 100, (int) '#');
        java.lang.Class<?> wildcardClass68 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass69 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 5.5f + "'", float48 == 5.5f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 1.0f + "'", float63 == 1.0f);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass5 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass6 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora7 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass8 = calculadora7.getClass();
        int[] intArray12 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float15 = calculadora7.calcularMedia(intArray12, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray21 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float24 = calculadora16.calcularMedia(intArray21, (int) (byte) 10, (int) '4');
        float float27 = calculadora7.calcularMedia(intArray21, (int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass28 = calculadora7.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray34 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float37 = calculadora29.calcularMedia(intArray34, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray43 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float46 = calculadora38.calcularMedia(intArray43, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray49 = new int[] {};
        float float52 = calculadora47.calcularMedia(intArray49, 100, 1);
        java.lang.Class<?> wildcardClass53 = intArray49.getClass();
        float float56 = calculadora38.calcularMedia(intArray49, 0, 10);
        float float59 = calculadora29.calcularMedia(intArray49, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray66 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float69 = calculadora61.calcularMedia(intArray66, (int) (byte) 10, (int) '4');
        float float72 = calculadora60.calcularMedia(intArray66, 10, 0);
        float float75 = calculadora29.calcularMedia(intArray66, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass76 = intArray66.getClass();
        float float79 = calculadora7.calcularMedia(intArray66, 100, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray85 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float88 = calculadora80.calcularMedia(intArray85, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass89 = intArray85.getClass();
        java.lang.Class<?> wildcardClass90 = intArray85.getClass();
        float float93 = calculadora7.calcularMedia(intArray85, (int) (short) 10, (int) 'a');
        java.lang.Class<?> wildcardClass94 = intArray85.getClass();
        java.lang.Class<?> wildcardClass95 = intArray85.getClass();
        float float98 = calculadora0.calcularMedia(intArray85, (int) (short) 0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass99 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 0.0f + "'", float15 == 0.0f);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 10.0f + "'", float24 == 10.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 5.5f + "'", float27 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 0.0f + "'", float37 == 0.0f);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + 10.0f + "'", float46 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals((float) float56, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 10.0f + "'", float69 == 10.0f);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + 10.0f + "'", float88 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + 53.5f + "'", float93 == 53.5f);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + float98 + "' != '" + 5.5f + "'", float98 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, (int) '#', 100);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray39 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float42 = calculadora34.calcularMedia(intArray39, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        java.lang.Class<?> wildcardClass44 = intArray39.getClass();
        float float47 = calculadora0.calcularMedia(intArray39, (-1), (int) (short) 0);
        java.lang.Class<?> wildcardClass48 = intArray39.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 100.0f + "'", float28 == 100.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 55.0f + "'", float31 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 0.0f + "'", float42 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, (int) '#', 100);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass32 = intArray21.getClass();
        java.lang.Class<?> wildcardClass33 = intArray21.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 100.0f + "'", float28 == 100.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 55.0f + "'", float31 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        float float53 = calculadora23.calcularMedia(intArray43, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        float float66 = calculadora54.calcularMedia(intArray60, 10, 0);
        float float69 = calculadora23.calcularMedia(intArray60, (int) (short) 0, 0);
        float float72 = calculadora0.calcularMedia(intArray60, 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray81 = new int[] {};
        float float84 = calculadora79.calcularMedia(intArray81, 100, 1);
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        float float88 = calculadora73.calcularMedia(intArray81, 10, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intArray81.getClass();
        java.lang.Class<?> wildcardClass90 = intArray81.getClass();
        float float93 = calculadora0.calcularMedia(intArray81, (int) (byte) -1, 0);
        java.lang.Class<?> wildcardClass94 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass95 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray29 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float32 = calculadora24.calcularMedia(intArray29, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora24.calcularMedia(intArray35, 0, 10);
        float float45 = calculadora23.calcularMedia(intArray35, (int) (short) -1, (-1));
        float float48 = calculadora0.calcularMedia(intArray35, (int) (byte) -1, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        java.lang.Class<?> wildcardClass51 = calculadora49.getClass();
        java.lang.Class<?> wildcardClass52 = calculadora49.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora49.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray59 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float62 = calculadora54.calcularMedia(intArray59, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass64 = calculadora63.getClass();
        int[] intArray65 = new int[] {};
        float float68 = calculadora63.calcularMedia(intArray65, 100, 1);
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        float float72 = calculadora54.calcularMedia(intArray65, 0, 10);
        float float75 = calculadora49.calcularMedia(intArray65, (int) 'a', (int) ' ');
        float float78 = calculadora0.calcularMedia(intArray65, (int) (short) 10, 100);
        java.lang.Class<?> wildcardClass79 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass80 = calculadora0.getClass();
        int[] intArray81 = null;
        try {
            float float84 = calculadora0.calcularMedia(intArray81, (int) (byte) 0, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 10.0f + "'", float32 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals((float) float42, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 10.0f + "'", float62 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals((float) float72, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertEquals((float) float78, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float40 = calculadora32.calcularMedia(intArray37, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray46 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float49 = calculadora41.calcularMedia(intArray46, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora41.calcularMedia(intArray52, 0, 10);
        float float62 = calculadora32.calcularMedia(intArray52, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass63 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        java.lang.Class<?> wildcardClass71 = intArray66.getClass();
        float float74 = calculadora32.calcularMedia(intArray66, (int) (short) -1, (int) (short) 1);
        float float77 = calculadora0.calcularMedia(intArray66, (int) (byte) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass78 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 0.0f + "'", float40 == 0.0f);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 10.0f + "'", float49 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float18 = calculadora10.calcularMedia(intArray15, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray24 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float27 = calculadora19.calcularMedia(intArray24, (int) (byte) 10, (int) '4');
        float float30 = calculadora10.calcularMedia(intArray24, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        float float53 = calculadora31.calcularMedia(intArray43, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        float float73 = calculadora55.calcularMedia(intArray66, 0, 10);
        float float76 = calculadora54.calcularMedia(intArray66, (int) (short) -1, (-1));
        float float79 = calculadora31.calcularMedia(intArray66, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass80 = intArray66.getClass();
        float float83 = calculadora10.calcularMedia(intArray66, (int) '4', (int) '#');
        java.lang.Class<?> wildcardClass84 = intArray66.getClass();
        float float87 = calculadora0.calcularMedia(intArray66, (int) '4', (int) (byte) 100);
        java.lang.Class<?> wildcardClass88 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 0.0f + "'", float18 == 0.0f);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 10.0f + "'", float27 == 10.0f);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 5.5f + "'", float30 == 5.5f);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertEquals((float) float87, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        float float38 = calculadora0.calcularMedia(intArray30, (int) (byte) -1, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora39.calcularMedia(intArray47, 10, (int) 'a');
        java.lang.Class<?> wildcardClass55 = intArray47.getClass();
        java.lang.Class<?> wildcardClass56 = intArray47.getClass();
        float float59 = calculadora0.calcularMedia(intArray47, 0, (int) '#');
        java.lang.Class<?> wildcardClass60 = intArray47.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora21.calcularMedia(intArray33, (int) (short) -1, (-1));
        float float46 = calculadora0.calcularMedia(intArray33, (int) ' ', (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = calculadora47.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass67 = calculadora66.getClass();
        int[] intArray68 = new int[] {};
        float float71 = calculadora66.calcularMedia(intArray68, 100, 1);
        java.lang.Class<?> wildcardClass72 = intArray68.getClass();
        float float75 = calculadora57.calcularMedia(intArray68, 0, 10);
        float float78 = calculadora47.calcularMedia(intArray68, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass79 = intArray68.getClass();
        float float82 = calculadora0.calcularMedia(intArray68, 1, (-1));
        java.lang.Class<?> wildcardClass83 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertEquals((float) float75, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora21.calcularMedia(intArray31, 0, 100);
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 10, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        java.lang.Class<?> wildcardClass46 = calculadora44.getClass();
        java.lang.Class<?> wildcardClass47 = calculadora44.getClass();
        java.lang.Class<?> wildcardClass48 = calculadora44.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass59 = calculadora58.getClass();
        int[] intArray60 = new int[] {};
        float float63 = calculadora58.calcularMedia(intArray60, 100, 1);
        java.lang.Class<?> wildcardClass64 = intArray60.getClass();
        float float67 = calculadora49.calcularMedia(intArray60, 0, 10);
        float float70 = calculadora44.calcularMedia(intArray60, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass71 = intArray60.getClass();
        float float74 = calculadora0.calcularMedia(intArray60, (int) (short) -1, (int) '#');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray80 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float83 = calculadora75.calcularMedia(intArray80, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora84 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass85 = calculadora84.getClass();
        int[] intArray86 = new int[] {};
        float float89 = calculadora84.calcularMedia(intArray86, 100, 1);
        java.lang.Class<?> wildcardClass90 = intArray86.getClass();
        java.lang.Class<?> wildcardClass91 = intArray86.getClass();
        float float94 = calculadora75.calcularMedia(intArray86, (int) ' ', (int) (byte) -1);
        float float97 = calculadora0.calcularMedia(intArray86, (int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass98 = intArray86.getClass();
        java.lang.Class<?> wildcardClass99 = intArray86.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 36.0f + "'", float40 == 36.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals((float) float67, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 10.0f + "'", float83 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertEquals((float) float97, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora9.getClass();
        java.lang.Class<?> wildcardClass12 = calculadora9.getClass();
        java.lang.Class<?> wildcardClass13 = calculadora9.getClass();
        java.lang.Class<?> wildcardClass14 = calculadora9.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass16 = calculadora15.getClass();
        int[] intArray17 = new int[] {};
        float float20 = calculadora15.calcularMedia(intArray17, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        java.lang.Class<?> wildcardClass27 = intArray23.getClass();
        float float30 = calculadora15.calcularMedia(intArray23, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float39 = calculadora31.calcularMedia(intArray36, 0, (int) (short) 1);
        float float42 = calculadora15.calcularMedia(intArray36, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float51 = calculadora43.calcularMedia(intArray48, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora43.calcularMedia(intArray57, (int) (byte) 1, (int) '4');
        float float66 = calculadora15.calcularMedia(intArray57, (int) (byte) 10, (int) (byte) 10);
        float float69 = calculadora9.calcularMedia(intArray57, (-1), 1);
        java.lang.Class<?> wildcardClass70 = intArray57.getClass();
        java.lang.Class<?> wildcardClass71 = intArray57.getClass();
        float float74 = calculadora0.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + (-1.0f) + "'", float20 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals((float) float30, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 0.0f + "'", float39 == 0.0f);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 55.0f + "'", float42 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 5.5f + "'", float63 == 5.5f);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 10.0f + "'", float74 == 10.0f);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora20.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray28 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float31 = calculadora23.calcularMedia(intArray28, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray34 = new int[] {};
        float float37 = calculadora32.calcularMedia(intArray34, 100, 1);
        java.lang.Class<?> wildcardClass38 = intArray34.getClass();
        float float41 = calculadora23.calcularMedia(intArray34, 0, 10);
        java.lang.Class<?> wildcardClass42 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        float float61 = calculadora43.calcularMedia(intArray54, 0, 10);
        float float64 = calculadora23.calcularMedia(intArray54, 0, (int) ' ');
        float float67 = calculadora20.calcularMedia(intArray54, (int) 'a', (int) (byte) 0);
        float float70 = calculadora0.calcularMedia(intArray54, (int) '#', (int) (byte) 100);
        java.lang.Class<?> wildcardClass71 = intArray54.getClass();
        java.lang.Class<?> wildcardClass72 = intArray54.getClass();
        java.lang.Class<?> wildcardClass73 = intArray54.getClass();
        java.lang.Class<?> wildcardClass74 = intArray54.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 10.0f + "'", float31 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float64, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float48 = calculadora40.calcularMedia(intArray45, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass59 = calculadora58.getClass();
        int[] intArray60 = new int[] {};
        float float63 = calculadora58.calcularMedia(intArray60, 100, 1);
        java.lang.Class<?> wildcardClass64 = intArray60.getClass();
        float float67 = calculadora49.calcularMedia(intArray60, 0, 10);
        float float70 = calculadora40.calcularMedia(intArray60, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass71 = intArray60.getClass();
        float float74 = calculadora0.calcularMedia(intArray60, (int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = intArray60.getClass();
        java.lang.Class<?> wildcardClass76 = intArray60.getClass();
        java.lang.Class<?> wildcardClass77 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 0.0f + "'", float48 == 0.0f);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals((float) float67, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        int[] intArray16 = null;
        float float19 = calculadora10.calcularMedia(intArray16, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        java.lang.Class<?> wildcardClass36 = intArray31.getClass();
        float float39 = calculadora20.calcularMedia(intArray31, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora20.calcularMedia(intArray51, (int) (short) 0, (int) (short) 1);
        float float64 = calculadora10.calcularMedia(intArray51, (int) (short) 10, (int) (byte) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray70 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float73 = calculadora65.calcularMedia(intArray70, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        java.lang.Class<?> wildcardClass75 = intArray70.getClass();
        java.lang.Class<?> wildcardClass76 = intArray70.getClass();
        float float79 = calculadora10.calcularMedia(intArray70, 100, 0);
        float float82 = calculadora0.calcularMedia(intArray70, 100, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora83 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass84 = calculadora83.getClass();
        int[] intArray85 = new int[] {};
        float float88 = calculadora83.calcularMedia(intArray85, 100, 1);
        float float91 = calculadora0.calcularMedia(intArray85, (int) '#', (int) (short) 0);
        java.lang.Class<?> wildcardClass92 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass93 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 10.0f + "'", float73 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, (int) '#', 100);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray44 = new int[] {};
        float float47 = calculadora42.calcularMedia(intArray44, 100, 1);
        java.lang.Class<?> wildcardClass48 = intArray44.getClass();
        float float51 = calculadora33.calcularMedia(intArray44, 0, 10);
        java.lang.Class<?> wildcardClass52 = calculadora33.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray64 = new int[] {};
        float float67 = calculadora62.calcularMedia(intArray64, 100, 1);
        java.lang.Class<?> wildcardClass68 = intArray64.getClass();
        float float71 = calculadora53.calcularMedia(intArray64, 0, 10);
        float float74 = calculadora33.calcularMedia(intArray64, 0, (int) ' ');
        java.lang.Class<?> wildcardClass75 = calculadora33.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass77 = calculadora76.getClass();
        int[] intArray78 = new int[] {};
        float float81 = calculadora76.calcularMedia(intArray78, 100, 1);
        java.lang.Class<?> wildcardClass82 = intArray78.getClass();
        float float85 = calculadora33.calcularMedia(intArray78, (int) (byte) 100, (int) (short) -1);
        float float88 = calculadora0.calcularMedia(intArray78, (int) ' ', (int) (short) 0);
        java.lang.Class<?> wildcardClass89 = intArray78.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 100.0f + "'", float28 == 100.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 55.0f + "'", float31 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals((float) float71, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass12 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        int[] intArray20 = null;
        float float23 = calculadora14.calcularMedia(intArray20, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray29 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float32 = calculadora24.calcularMedia(intArray29, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        java.lang.Class<?> wildcardClass40 = intArray35.getClass();
        float float43 = calculadora24.calcularMedia(intArray35, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray49 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float52 = calculadora44.calcularMedia(intArray49, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass54 = calculadora53.getClass();
        int[] intArray55 = new int[] {};
        float float58 = calculadora53.calcularMedia(intArray55, 100, 1);
        java.lang.Class<?> wildcardClass59 = intArray55.getClass();
        float float62 = calculadora44.calcularMedia(intArray55, 0, 10);
        float float65 = calculadora24.calcularMedia(intArray55, (int) (short) 0, (int) (short) 1);
        float float68 = calculadora14.calcularMedia(intArray55, (int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = intArray55.getClass();
        float float72 = calculadora0.calcularMedia(intArray55, 0, (int) ' ');
        java.lang.Class<?> wildcardClass73 = intArray55.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 10.0f + "'", float32 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 10.0f + "'", float52 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals((float) float62, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float65, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals((float) float72, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass12 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray18 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float21 = calculadora13.calcularMedia(intArray18, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass23 = calculadora22.getClass();
        int[] intArray24 = new int[] {};
        float float27 = calculadora22.calcularMedia(intArray24, 100, 1);
        java.lang.Class<?> wildcardClass28 = intArray24.getClass();
        float float31 = calculadora13.calcularMedia(intArray24, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float40 = calculadora32.calcularMedia(intArray37, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray46 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float49 = calculadora41.calcularMedia(intArray46, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora41.calcularMedia(intArray52, 0, 10);
        float float62 = calculadora32.calcularMedia(intArray52, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray69 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float72 = calculadora64.calcularMedia(intArray69, (int) (byte) 10, (int) '4');
        float float75 = calculadora63.calcularMedia(intArray69, 10, 0);
        float float78 = calculadora32.calcularMedia(intArray69, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass79 = intArray69.getClass();
        float float82 = calculadora13.calcularMedia(intArray69, (int) '4', (int) (short) -1);
        java.lang.Class<?> wildcardClass83 = intArray69.getClass();
        float float86 = calculadora0.calcularMedia(intArray69, 1, (int) ' ');
        int[] intArray87 = null;
        float float90 = calculadora0.calcularMedia(intArray87, (int) '4', 0);
        java.lang.Class<?> wildcardClass91 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 10.0f + "'", float21 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals((float) float31, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 0.0f + "'", float40 == 0.0f);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 10.0f + "'", float49 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 10.0f + "'", float72 == 10.0f);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + 5.5f + "'", float86 == 5.5f);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray36 = new int[] {};
        float float39 = calculadora34.calcularMedia(intArray36, 100, 1);
        java.lang.Class<?> wildcardClass40 = intArray36.getClass();
        float float43 = calculadora28.calcularMedia(intArray36, 10, (int) 'a');
        float float46 = calculadora0.calcularMedia(intArray36, (int) 'a', (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray53 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float56 = calculadora48.calcularMedia(intArray53, (int) (byte) 10, (int) '4');
        float float59 = calculadora47.calcularMedia(intArray53, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass61 = calculadora60.getClass();
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float68 = calculadora60.calcularMedia(intArray65, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora69 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray74 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float77 = calculadora69.calcularMedia(intArray74, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora78 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass79 = calculadora78.getClass();
        int[] intArray80 = new int[] {};
        float float83 = calculadora78.calcularMedia(intArray80, 100, 1);
        java.lang.Class<?> wildcardClass84 = intArray80.getClass();
        float float87 = calculadora69.calcularMedia(intArray80, 0, 10);
        float float90 = calculadora60.calcularMedia(intArray80, 10, (int) (short) 0);
        float float93 = calculadora47.calcularMedia(intArray80, (int) (short) -1, (int) ' ');
        float float96 = calculadora0.calcularMedia(intArray80, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass97 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals((float) float43, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 10.0f + "'", float56 == 10.0f);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 0.0f + "'", float68 == 0.0f);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + 10.0f + "'", float77 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertEquals((float) float87, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + (-1.0f) + "'", float96 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        int[] intArray21 = null;
        float float24 = calculadora11.calcularMedia(intArray21, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora11.calcularMedia(intArray31, 100, (int) '#');
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray46 = new int[] {};
        float float49 = calculadora44.calcularMedia(intArray46, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora44.calcularMedia(intArray52, 10, (int) 'a');
        java.lang.Class<?> wildcardClass60 = intArray52.getClass();
        float float63 = calculadora0.calcularMedia(intArray52, (int) (byte) -1, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        java.lang.Class<?> wildcardClass71 = intArray66.getClass();
        float float74 = calculadora0.calcularMedia(intArray66, (int) (short) 1, (int) ' ');
        java.lang.Class<?> wildcardClass75 = intArray66.getClass();
        java.lang.Class<?> wildcardClass76 = intArray66.getClass();
        java.lang.Class<?> wildcardClass77 = intArray66.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        java.lang.Class<?> wildcardClass49 = calculadora47.getClass();
        java.lang.Class<?> wildcardClass50 = calculadora47.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora51.calcularMedia(intArray57, 10, 0);
        float float66 = calculadora47.calcularMedia(intArray57, 0, 100);
        java.lang.Class<?> wildcardClass67 = intArray57.getClass();
        float float70 = calculadora0.calcularMedia(intArray57, 0, 0);
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass72 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 36.0f + "'", float66 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float18 = calculadora10.calcularMedia(intArray15, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float27 = calculadora19.calcularMedia(intArray24, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass28 = intArray24.getClass();
        java.lang.Class<?> wildcardClass29 = intArray24.getClass();
        float float32 = calculadora10.calcularMedia(intArray24, (int) (short) -1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass33 = intArray24.getClass();
        float float36 = calculadora0.calcularMedia(intArray24, (int) (byte) 100, (int) (byte) 0);
        java.lang.Class<?> wildcardClass37 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray44 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float47 = calculadora39.calcularMedia(intArray44, (int) (byte) 10, (int) '4');
        float float50 = calculadora38.calcularMedia(intArray44, 10, 0);
        java.lang.Class<?> wildcardClass51 = intArray44.getClass();
        float float54 = calculadora0.calcularMedia(intArray44, (int) '4', 0);
        int[] intArray55 = null;
        float float58 = calculadora0.calcularMedia(intArray55, (int) (byte) 10, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass68 = intArray64.getClass();
        java.lang.Class<?> wildcardClass69 = intArray64.getClass();
        java.lang.Class<?> wildcardClass70 = intArray64.getClass();
        java.lang.Class<?> wildcardClass71 = intArray64.getClass();
        java.lang.Class<?> wildcardClass72 = intArray64.getClass();
        float float75 = calculadora0.calcularMedia(intArray64, (int) (byte) 1, 100);
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 0.0f + "'", float18 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 10.0f + "'", float47 == 10.0f);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + 36.0f + "'", float75 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        int[] intArray13 = null;
        float float16 = calculadora0.calcularMedia(intArray13, (int) ' ', (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        java.lang.Class<?> wildcardClass19 = calculadora17.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora20.calcularMedia(intArray31, 0, 10);
        java.lang.Class<?> wildcardClass39 = calculadora20.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora20.calcularMedia(intArray51, 0, (int) ' ');
        float float64 = calculadora17.calcularMedia(intArray51, (int) 'a', (int) (byte) 0);
        java.lang.Class<?> wildcardClass65 = intArray51.getClass();
        float float68 = calculadora0.calcularMedia(intArray51, (int) ' ', (int) (short) 100);
        java.lang.Class<?> wildcardClass69 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals((float) float68, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        java.lang.Class<?> wildcardClass6 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass7 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora8 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray13 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float16 = calculadora8.calcularMedia(intArray13, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        int[] intArray19 = new int[] {};
        float float22 = calculadora17.calcularMedia(intArray19, 100, 1);
        java.lang.Class<?> wildcardClass23 = intArray19.getClass();
        java.lang.Class<?> wildcardClass24 = intArray19.getClass();
        float float27 = calculadora8.calcularMedia(intArray19, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora37.calcularMedia(intArray48, 0, 10);
        float float58 = calculadora28.calcularMedia(intArray48, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        float float71 = calculadora59.calcularMedia(intArray65, 10, 0);
        float float74 = calculadora28.calcularMedia(intArray65, (int) (short) 0, 0);
        float float77 = calculadora8.calcularMedia(intArray65, (-1), (int) '4');
        java.lang.Class<?> wildcardClass78 = intArray65.getClass();
        java.lang.Class<?> wildcardClass79 = intArray65.getClass();
        java.lang.Class<?> wildcardClass80 = intArray65.getClass();
        java.lang.Class<?> wildcardClass81 = intArray65.getClass();
        java.lang.Class<?> wildcardClass82 = intArray65.getClass();
        java.lang.Class<?> wildcardClass83 = intArray65.getClass();
        float float86 = calculadora0.calcularMedia(intArray65, (int) 'a', 1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 10.0f + "'", float16 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        java.lang.Class<?> wildcardClass31 = calculadora29.getClass();
        java.lang.Class<?> wildcardClass32 = calculadora29.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        float float45 = calculadora33.calcularMedia(intArray39, 10, 0);
        float float48 = calculadora29.calcularMedia(intArray39, 0, 100);
        float float51 = calculadora0.calcularMedia(intArray39, (int) (byte) -1, (int) (short) -1);
        java.lang.Class<?> wildcardClass52 = intArray39.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 36.0f + "'", float48 == 36.0f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray18 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float21 = calculadora13.calcularMedia(intArray18, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass23 = calculadora22.getClass();
        int[] intArray24 = new int[] {};
        float float27 = calculadora22.calcularMedia(intArray24, 100, 1);
        java.lang.Class<?> wildcardClass28 = intArray24.getClass();
        float float31 = calculadora13.calcularMedia(intArray24, 0, 10);
        float float34 = calculadora12.calcularMedia(intArray24, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray41 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float44 = calculadora36.calcularMedia(intArray41, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora36.calcularMedia(intArray47, 0, 10);
        float float57 = calculadora35.calcularMedia(intArray47, (int) (short) -1, (-1));
        float float60 = calculadora12.calcularMedia(intArray47, (int) (byte) -1, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray66 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float69 = calculadora61.calcularMedia(intArray66, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass70 = calculadora61.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray76 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float79 = calculadora71.calcularMedia(intArray76, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass81 = calculadora80.getClass();
        int[] intArray82 = new int[] {};
        float float85 = calculadora80.calcularMedia(intArray82, 100, 1);
        java.lang.Class<?> wildcardClass86 = intArray82.getClass();
        float float89 = calculadora71.calcularMedia(intArray82, 0, 10);
        float float92 = calculadora61.calcularMedia(intArray82, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass93 = intArray82.getClass();
        float float96 = calculadora12.calcularMedia(intArray82, (int) '4', (-1));
        float float99 = calculadora0.calcularMedia(intArray82, 0, 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 10.0f + "'", float21 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals((float) float31, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 10.0f + "'", float44 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 0.0f + "'", float69 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 10.0f + "'", float79 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertEquals((float) float89, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + (-1.0f) + "'", float96 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + (-1.0f) + "'", float99 == (-1.0f));
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        java.lang.Class<?> wildcardClass37 = intArray26.getClass();
        float float40 = calculadora0.calcularMedia(intArray26, (int) (byte) 1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray46 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float49 = calculadora41.calcularMedia(intArray46, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora41.calcularMedia(intArray52, 0, 10);
        java.lang.Class<?> wildcardClass60 = calculadora41.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray66 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float69 = calculadora61.calcularMedia(intArray66, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass71 = calculadora70.getClass();
        int[] intArray72 = new int[] {};
        float float75 = calculadora70.calcularMedia(intArray72, 100, 1);
        java.lang.Class<?> wildcardClass76 = intArray72.getClass();
        float float79 = calculadora61.calcularMedia(intArray72, 0, 10);
        float float82 = calculadora41.calcularMedia(intArray72, 0, (int) ' ');
        float float85 = calculadora0.calcularMedia(intArray72, (int) '4', 0);
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        int[] intArray87 = null;
        try {
            float float90 = calculadora0.calcularMedia(intArray87, (int) (short) 10, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 10.0f + "'", float49 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 10.0f + "'", float69 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals((float) float79, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float82, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        int[] intArray20 = null;
        float float23 = calculadora0.calcularMedia(intArray20, (int) '#', (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float32 = calculadora24.calcularMedia(intArray29, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass33 = calculadora24.getClass();
        java.lang.Class<?> wildcardClass34 = calculadora24.getClass();
        java.lang.Class<?> wildcardClass35 = calculadora24.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass37 = calculadora36.getClass();
        int[] intArray41 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float44 = calculadora36.calcularMedia(intArray41, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass45 = calculadora36.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray51 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float54 = calculadora46.calcularMedia(intArray51, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        java.lang.Class<?> wildcardClass61 = intArray57.getClass();
        float float64 = calculadora46.calcularMedia(intArray57, 0, 10);
        float float67 = calculadora36.calcularMedia(intArray57, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray73 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float76 = calculadora68.calcularMedia(intArray73, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass77 = intArray73.getClass();
        float float80 = calculadora36.calcularMedia(intArray73, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora81 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray86 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float89 = calculadora81.calcularMedia(intArray86, (int) (byte) 10, (int) '4');
        float float92 = calculadora36.calcularMedia(intArray86, (int) (byte) 1, (int) (short) 100);
        float float95 = calculadora24.calcularMedia(intArray86, (int) (byte) 0, (-1));
        float float98 = calculadora0.calcularMedia(intArray86, (int) (short) 1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = intArray86.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 0.0f + "'", float32 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 0.0f + "'", float44 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 10.0f + "'", float54 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals((float) float64, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 10.0f + "'", float76 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + 10.0f + "'", float89 == 10.0f);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + 36.0f + "'", float92 == 36.0f);
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float98 + "' != '" + (-1.0f) + "'", float98 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass32 = calculadora23.getClass();
        int[] intArray33 = null;
        float float36 = calculadora23.calcularMedia(intArray33, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray43 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float46 = calculadora38.calcularMedia(intArray43, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray49 = new int[] {};
        float float52 = calculadora47.calcularMedia(intArray49, 100, 1);
        java.lang.Class<?> wildcardClass53 = intArray49.getClass();
        float float56 = calculadora38.calcularMedia(intArray49, 0, 10);
        float float59 = calculadora37.calcularMedia(intArray49, (int) (short) -1, (-1));
        float float62 = calculadora23.calcularMedia(intArray49, (int) (short) -1, (int) (short) 100);
        java.lang.Class<?> wildcardClass63 = intArray49.getClass();
        float float66 = calculadora0.calcularMedia(intArray49, (int) 'a', (int) (byte) 10);
        java.lang.Class<?> wildcardClass67 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + 10.0f + "'", float46 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals((float) float56, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float18 = calculadora10.calcularMedia(intArray15, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float27 = calculadora19.calcularMedia(intArray24, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass28 = intArray24.getClass();
        java.lang.Class<?> wildcardClass29 = intArray24.getClass();
        float float32 = calculadora10.calcularMedia(intArray24, (int) (short) -1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass33 = intArray24.getClass();
        float float36 = calculadora0.calcularMedia(intArray24, (int) (byte) 100, (int) (byte) 0);
        java.lang.Class<?> wildcardClass37 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray44 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float47 = calculadora39.calcularMedia(intArray44, (int) (byte) 10, (int) '4');
        float float50 = calculadora38.calcularMedia(intArray44, 10, 0);
        java.lang.Class<?> wildcardClass51 = intArray44.getClass();
        float float54 = calculadora0.calcularMedia(intArray44, (int) '4', 0);
        int[] intArray55 = null;
        float float58 = calculadora0.calcularMedia(intArray55, (int) (byte) 10, 1);
        int[] intArray59 = null;
        float float62 = calculadora0.calcularMedia(intArray59, (int) 'a', (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 0.0f + "'", float18 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 10.0f + "'", float47 == 10.0f);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray11 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float14 = calculadora6.calcularMedia(intArray11, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, (int) '#', 100);
        java.lang.Class<?> wildcardClass19 = intArray11.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 100.0f + "'", float18 == 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass30 = calculadora21.getClass();
        int[] intArray31 = null;
        float float34 = calculadora21.calcularMedia(intArray31, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray41 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float44 = calculadora36.calcularMedia(intArray41, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora36.calcularMedia(intArray47, 0, 10);
        float float57 = calculadora35.calcularMedia(intArray47, (int) (short) -1, (-1));
        float float60 = calculadora21.calcularMedia(intArray47, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray63 = new int[] {};
        float float66 = calculadora61.calcularMedia(intArray63, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass68 = calculadora67.getClass();
        int[] intArray69 = new int[] {};
        float float72 = calculadora67.calcularMedia(intArray69, 100, 1);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        float float76 = calculadora61.calcularMedia(intArray69, 10, (int) 'a');
        java.lang.Class<?> wildcardClass77 = intArray69.getClass();
        java.lang.Class<?> wildcardClass78 = intArray69.getClass();
        float float81 = calculadora21.calcularMedia(intArray69, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass82 = intArray69.getClass();
        float float85 = calculadora0.calcularMedia(intArray69, 0, 0);
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        int[] intArray87 = null;
        float float90 = calculadora0.calcularMedia(intArray87, (int) (byte) -1, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 10.0f + "'", float44 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass31 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        java.lang.Class<?> wildcardClass35 = calculadora33.getClass();
        java.lang.Class<?> wildcardClass36 = calculadora33.getClass();
        java.lang.Class<?> wildcardClass37 = calculadora33.getClass();
        java.lang.Class<?> wildcardClass38 = calculadora33.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora39.calcularMedia(intArray47, 10, (int) 'a');
        float float57 = calculadora33.calcularMedia(intArray47, (int) (byte) 0, (int) 'a');
        java.lang.Class<?> wildcardClass58 = intArray47.getClass();
        float float61 = calculadora0.calcularMedia(intArray47, 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass62 = intArray47.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float57, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora21.calcularMedia(intArray33, (int) (short) -1, (-1));
        float float46 = calculadora0.calcularMedia(intArray33, (int) ' ', (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray49 = new int[] {};
        float float52 = calculadora47.calcularMedia(intArray49, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass54 = calculadora53.getClass();
        int[] intArray55 = new int[] {};
        float float58 = calculadora53.calcularMedia(intArray55, 100, 1);
        java.lang.Class<?> wildcardClass59 = intArray55.getClass();
        float float62 = calculadora47.calcularMedia(intArray55, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass64 = calculadora63.getClass();
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float71 = calculadora63.calcularMedia(intArray68, 0, (int) (short) 1);
        float float74 = calculadora47.calcularMedia(intArray68, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass76 = calculadora75.getClass();
        int[] intArray77 = new int[] {};
        float float80 = calculadora75.calcularMedia(intArray77, 100, 1);
        java.lang.Class<?> wildcardClass81 = intArray77.getClass();
        java.lang.Class<?> wildcardClass82 = intArray77.getClass();
        float float85 = calculadora47.calcularMedia(intArray77, (int) (byte) -1, (int) (byte) -1);
        float float88 = calculadora0.calcularMedia(intArray77, (int) (byte) 1, (int) 'a');
        java.lang.Class<?> wildcardClass89 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass90 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals((float) float62, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 0.0f + "'", float71 == 0.0f);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 55.0f + "'", float74 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray15 = new int[] {};
        float float18 = calculadora13.calcularMedia(intArray15, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora13.calcularMedia(intArray21, 10, (int) 'a');
        java.lang.Class<?> wildcardClass29 = intArray21.getClass();
        float float32 = calculadora0.calcularMedia(intArray21, (int) (short) 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass42 = intArray38.getClass();
        float float45 = calculadora0.calcularMedia(intArray38, (int) 'a', (int) (short) 1);
        java.lang.Class<?> wildcardClass46 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + (-1.0f) + "'", float18 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals((float) float32, Float.NaN, 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray29 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float32 = calculadora24.calcularMedia(intArray29, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora24.calcularMedia(intArray35, 0, 10);
        float float45 = calculadora23.calcularMedia(intArray35, (int) (short) -1, (-1));
        float float48 = calculadora0.calcularMedia(intArray35, (int) (byte) -1, (int) 'a');
        int[] intArray49 = null;
        float float52 = calculadora0.calcularMedia(intArray49, (-1), (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass62 = intArray58.getClass();
        float float65 = calculadora0.calcularMedia(intArray58, (int) (short) 1, (-1));
        int[] intArray66 = null;
        float float69 = calculadora0.calcularMedia(intArray66, (int) (byte) 0, 0);
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass72 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 10.0f + "'", float32 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals((float) float42, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass5 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray14 = new int[] {};
        float float17 = calculadora12.calcularMedia(intArray14, 100, 1);
        java.lang.Class<?> wildcardClass18 = intArray14.getClass();
        float float21 = calculadora6.calcularMedia(intArray14, 10, (int) 'a');
        float float24 = calculadora0.calcularMedia(intArray14, (int) (byte) 0, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray30 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float33 = calculadora25.calcularMedia(intArray30, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray36 = new int[] {};
        float float39 = calculadora34.calcularMedia(intArray36, 100, 1);
        java.lang.Class<?> wildcardClass40 = intArray36.getClass();
        float float43 = calculadora25.calcularMedia(intArray36, 0, 10);
        java.lang.Class<?> wildcardClass44 = calculadora25.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass54 = calculadora45.getClass();
        int[] intArray55 = null;
        float float58 = calculadora45.calcularMedia(intArray55, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora69 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass70 = calculadora69.getClass();
        int[] intArray71 = new int[] {};
        float float74 = calculadora69.calcularMedia(intArray71, 100, 1);
        java.lang.Class<?> wildcardClass75 = intArray71.getClass();
        float float78 = calculadora60.calcularMedia(intArray71, 0, 10);
        float float81 = calculadora59.calcularMedia(intArray71, (int) (short) -1, (-1));
        float float84 = calculadora45.calcularMedia(intArray71, (int) (short) -1, (int) (short) 100);
        float float87 = calculadora25.calcularMedia(intArray71, (int) (byte) 1, (int) 'a');
        java.lang.Class<?> wildcardClass88 = intArray71.getClass();
        float float91 = calculadora0.calcularMedia(intArray71, 10, 1);
        java.lang.Class<?> wildcardClass92 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + (-1.0f) + "'", float17 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals((float) float21, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float24, Float.NaN, 0);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + 10.0f + "'", float33 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals((float) float43, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals((float) float78, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertEquals((float) float87, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora40.calcularMedia(intArray48, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float64 = calculadora56.calcularMedia(intArray61, 0, (int) (short) 1);
        float float67 = calculadora40.calcularMedia(intArray61, 10, (int) (short) 100);
        float float70 = calculadora0.calcularMedia(intArray61, (int) (byte) -1, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass73 = calculadora72.getClass();
        int[] intArray77 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float80 = calculadora72.calcularMedia(intArray77, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass81 = intArray77.getClass();
        java.lang.Class<?> wildcardClass82 = intArray77.getClass();
        java.lang.Class<?> wildcardClass83 = intArray77.getClass();
        float float86 = calculadora0.calcularMedia(intArray77, 1, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 55.0f + "'", float67 == 55.0f);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 0.0f + "'", float80 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass30 = calculadora21.getClass();
        int[] intArray31 = null;
        float float34 = calculadora21.calcularMedia(intArray31, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray41 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float44 = calculadora36.calcularMedia(intArray41, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora36.calcularMedia(intArray47, 0, 10);
        float float57 = calculadora35.calcularMedia(intArray47, (int) (short) -1, (-1));
        float float60 = calculadora21.calcularMedia(intArray47, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray63 = new int[] {};
        float float66 = calculadora61.calcularMedia(intArray63, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass68 = calculadora67.getClass();
        int[] intArray69 = new int[] {};
        float float72 = calculadora67.calcularMedia(intArray69, 100, 1);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        float float76 = calculadora61.calcularMedia(intArray69, 10, (int) 'a');
        java.lang.Class<?> wildcardClass77 = intArray69.getClass();
        java.lang.Class<?> wildcardClass78 = intArray69.getClass();
        float float81 = calculadora21.calcularMedia(intArray69, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass82 = intArray69.getClass();
        float float85 = calculadora0.calcularMedia(intArray69, 0, 0);
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        int[] intArray87 = null;
        float float90 = calculadora0.calcularMedia(intArray87, (int) (byte) -1, (int) (short) 100);
        int[] intArray91 = null;
        float float94 = calculadora0.calcularMedia(intArray91, 100, 100);
        java.lang.Class<?> wildcardClass95 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 10.0f + "'", float44 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass23 = calculadora22.getClass();
        int[] intArray27 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float30 = calculadora22.calcularMedia(intArray27, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray36 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float39 = calculadora31.calcularMedia(intArray36, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora31.calcularMedia(intArray42, 0, 10);
        float float52 = calculadora22.calcularMedia(intArray42, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray59 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float62 = calculadora54.calcularMedia(intArray59, (int) (byte) 10, (int) '4');
        float float65 = calculadora53.calcularMedia(intArray59, 10, 0);
        float float68 = calculadora22.calcularMedia(intArray59, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass69 = intArray59.getClass();
        float float72 = calculadora0.calcularMedia(intArray59, 100, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray78 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float81 = calculadora73.calcularMedia(intArray78, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass82 = intArray78.getClass();
        java.lang.Class<?> wildcardClass83 = intArray78.getClass();
        float float86 = calculadora0.calcularMedia(intArray78, (int) (short) 10, (int) 'a');
        java.lang.Class<?> wildcardClass87 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass88 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass89 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 0.0f + "'", float30 == 0.0f);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 10.0f + "'", float39 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals((float) float49, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 10.0f + "'", float62 == 10.0f);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + 10.0f + "'", float81 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + 53.5f + "'", float86 == 53.5f);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        java.lang.Class<?> wildcardClass36 = calculadora34.getClass();
        java.lang.Class<?> wildcardClass37 = calculadora34.getClass();
        java.lang.Class<?> wildcardClass38 = calculadora34.getClass();
        java.lang.Class<?> wildcardClass39 = calculadora34.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora40.calcularMedia(intArray48, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float64 = calculadora56.calcularMedia(intArray61, 0, (int) (short) 1);
        float float67 = calculadora40.calcularMedia(intArray61, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray73 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float76 = calculadora68.calcularMedia(intArray73, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray82 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float85 = calculadora77.calcularMedia(intArray82, (int) (byte) 10, (int) '4');
        float float88 = calculadora68.calcularMedia(intArray82, (int) (byte) 1, (int) '4');
        float float91 = calculadora40.calcularMedia(intArray82, (int) (byte) 10, (int) (byte) 10);
        float float94 = calculadora34.calcularMedia(intArray82, (-1), 1);
        float float97 = calculadora0.calcularMedia(intArray82, 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass98 = intArray82.getClass();
        java.lang.Class<?> wildcardClass99 = intArray82.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 55.0f + "'", float67 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.0f + "'", float76 == 0.0f);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + 10.0f + "'", float85 == 10.0f);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + 5.5f + "'", float88 == 5.5f);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass5 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass6 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora7 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass8 = calculadora7.getClass();
        java.lang.Class<?> wildcardClass9 = calculadora7.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora7.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        java.lang.Class<?> wildcardClass13 = calculadora11.getClass();
        java.lang.Class<?> wildcardClass14 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray21 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float24 = calculadora16.calcularMedia(intArray21, (int) (byte) 10, (int) '4');
        float float27 = calculadora15.calcularMedia(intArray21, 10, 0);
        float float30 = calculadora11.calcularMedia(intArray21, 0, 100);
        int[] intArray31 = null;
        float float34 = calculadora11.calcularMedia(intArray31, (int) '#', (int) (short) -1);
        java.lang.Class<?> wildcardClass35 = calculadora11.getClass();
        java.lang.Class<?> wildcardClass36 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray43 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float46 = calculadora38.calcularMedia(intArray43, (int) (byte) 10, (int) '4');
        float float49 = calculadora37.calcularMedia(intArray43, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray55 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float58 = calculadora50.calcularMedia(intArray55, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray70 = new int[] {};
        float float73 = calculadora68.calcularMedia(intArray70, 100, 1);
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        float float77 = calculadora59.calcularMedia(intArray70, 0, 10);
        float float80 = calculadora50.calcularMedia(intArray70, 10, (int) (short) 0);
        float float83 = calculadora37.calcularMedia(intArray70, (int) (short) -1, (int) ' ');
        float float86 = calculadora11.calcularMedia(intArray70, (int) (byte) 0, (int) (short) 1);
        float float89 = calculadora7.calcularMedia(intArray70, (int) (short) 1, 1);
        java.lang.Class<?> wildcardClass90 = intArray70.getClass();
        float float93 = calculadora0.calcularMedia(intArray70, (int) 'a', 0);
        java.lang.Class<?> wildcardClass94 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 10.0f + "'", float24 == 10.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 36.0f + "'", float30 == 36.0f);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + 10.0f + "'", float46 == 10.0f);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 0.0f + "'", float58 == 0.0f);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertEquals((float) float86, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass5 = calculadora4.getClass();
        int[] intArray6 = new int[] {};
        float float9 = calculadora4.calcularMedia(intArray6, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora4.calcularMedia(intArray12, 10, (int) 'a');
        java.lang.Class<?> wildcardClass20 = calculadora4.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        int[] intArray29 = new int[] {};
        float float32 = calculadora27.calcularMedia(intArray29, 100, 1);
        java.lang.Class<?> wildcardClass33 = intArray29.getClass();
        float float36 = calculadora21.calcularMedia(intArray29, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray42 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float45 = calculadora37.calcularMedia(intArray42, 0, (int) (short) 1);
        float float48 = calculadora21.calcularMedia(intArray42, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass49 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray55 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float58 = calculadora50.calcularMedia(intArray55, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass60 = calculadora59.getClass();
        int[] intArray61 = new int[] {};
        float float64 = calculadora59.calcularMedia(intArray61, 100, 1);
        java.lang.Class<?> wildcardClass65 = intArray61.getClass();
        float float68 = calculadora50.calcularMedia(intArray61, 0, 10);
        float float71 = calculadora21.calcularMedia(intArray61, (int) (short) -1, 100);
        float float74 = calculadora4.calcularMedia(intArray61, 0, 10);
        float float77 = calculadora0.calcularMedia(intArray61, (int) (short) -1, 1);
        java.lang.Class<?> wildcardClass78 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass79 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass80 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals((float) float36, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 0.0f + "'", float45 == 0.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 55.0f + "'", float48 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 10.0f + "'", float58 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals((float) float68, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora20.calcularMedia(intArray31, 0, 10);
        float float41 = calculadora0.calcularMedia(intArray31, 0, (int) ' ');
        java.lang.Class<?> wildcardClass42 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray45 = new int[] {};
        float float48 = calculadora43.calcularMedia(intArray45, 100, 1);
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        float float52 = calculadora0.calcularMedia(intArray45, (int) (byte) 100, (int) (short) -1);
        java.lang.Class<?> wildcardClass53 = intArray45.getClass();
        java.lang.Class<?> wildcardClass54 = intArray45.getClass();
        java.lang.Class<?> wildcardClass55 = intArray45.getClass();
        java.lang.Class<?> wildcardClass56 = intArray45.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        float float48 = calculadora28.calcularMedia(intArray42, (int) (byte) 1, (int) '4');
        float float51 = calculadora0.calcularMedia(intArray42, (int) (byte) 10, (int) (byte) 10);
        java.lang.Class<?> wildcardClass52 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora0.getClass();
        int[] intArray54 = null;
        float float57 = calculadora0.calcularMedia(intArray54, (int) '4', (-1));
        java.lang.Class<?> wildcardClass58 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 5.5f + "'", float48 == 5.5f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, (int) '#', 100);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float40 = calculadora32.calcularMedia(intArray37, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray46 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float49 = calculadora41.calcularMedia(intArray46, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora41.calcularMedia(intArray52, 0, 10);
        float float62 = calculadora32.calcularMedia(intArray52, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray69 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float72 = calculadora64.calcularMedia(intArray69, (int) (byte) 10, (int) '4');
        float float75 = calculadora63.calcularMedia(intArray69, 10, 0);
        float float78 = calculadora32.calcularMedia(intArray69, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray84 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float87 = calculadora79.calcularMedia(intArray84, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass88 = intArray84.getClass();
        java.lang.Class<?> wildcardClass89 = intArray84.getClass();
        float float92 = calculadora32.calcularMedia(intArray84, 10, (int) 'a');
        java.lang.Class<?> wildcardClass93 = intArray84.getClass();
        java.lang.Class<?> wildcardClass94 = intArray84.getClass();
        java.lang.Class<?> wildcardClass95 = intArray84.getClass();
        float float98 = calculadora0.calcularMedia(intArray84, (int) (short) 10, 0);
        java.lang.Class<?> wildcardClass99 = intArray84.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 100.0f + "'", float28 == 100.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 55.0f + "'", float31 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 0.0f + "'", float40 == 0.0f);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 10.0f + "'", float49 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 10.0f + "'", float72 == 10.0f);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + 10.0f + "'", float87 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + 53.5f + "'", float92 == 53.5f);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + float98 + "' != '" + (-1.0f) + "'", float98 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora24.getClass();
        java.lang.Class<?> wildcardClass27 = calculadora24.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        float float40 = calculadora28.calcularMedia(intArray34, 10, 0);
        float float43 = calculadora24.calcularMedia(intArray34, 0, 100);
        java.lang.Class<?> wildcardClass44 = calculadora24.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray51 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float54 = calculadora46.calcularMedia(intArray51, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        java.lang.Class<?> wildcardClass61 = intArray57.getClass();
        float float64 = calculadora46.calcularMedia(intArray57, 0, 10);
        float float67 = calculadora45.calcularMedia(intArray57, (int) (short) -1, (-1));
        float float70 = calculadora24.calcularMedia(intArray57, (int) ' ', (int) 'a');
        float float73 = calculadora0.calcularMedia(intArray57, (int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass74 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 36.0f + "'", float43 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 10.0f + "'", float54 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals((float) float64, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        float float33 = calculadora21.calcularMedia(intArray27, 10, 0);
        float float36 = calculadora0.calcularMedia(intArray27, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        java.lang.Class<?> wildcardClass44 = intArray39.getClass();
        float float47 = calculadora0.calcularMedia(intArray39, 0, (int) '#');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        float float60 = calculadora48.calcularMedia(intArray54, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray66 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float69 = calculadora61.calcularMedia(intArray66, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass70 = calculadora61.getClass();
        int[] intArray71 = null;
        float float74 = calculadora61.calcularMedia(intArray71, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray81 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float84 = calculadora76.calcularMedia(intArray81, (int) (byte) 10, (int) '4');
        float float87 = calculadora75.calcularMedia(intArray81, 10, 0);
        float float90 = calculadora61.calcularMedia(intArray81, 100, (int) '#');
        float float93 = calculadora48.calcularMedia(intArray81, (int) (byte) 1, (int) (short) 1);
        java.lang.Class<?> wildcardClass94 = intArray81.getClass();
        java.lang.Class<?> wildcardClass95 = intArray81.getClass();
        float float98 = calculadora0.calcularMedia(intArray81, (int) (byte) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 0.0f + "'", float69 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + 10.0f + "'", float84 == 10.0f);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + float98 + "' != '" + 36.0f + "'", float98 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        float float26 = calculadora14.calcularMedia(intArray20, 10, 0);
        float float29 = calculadora0.calcularMedia(intArray20, 100, (int) '#');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass31 = calculadora30.getClass();
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float38 = calculadora30.calcularMedia(intArray35, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray44 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float47 = calculadora39.calcularMedia(intArray44, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        float float57 = calculadora39.calcularMedia(intArray50, 0, 10);
        float float60 = calculadora30.calcularMedia(intArray50, 10, (int) (short) 0);
        int[] intArray65 = new int[] { 0, 100, (byte) 0, 'a' };
        float float68 = calculadora30.calcularMedia(intArray65, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        java.lang.Class<?> wildcardClass70 = intArray65.getClass();
        java.lang.Class<?> wildcardClass71 = intArray65.getClass();
        float float74 = calculadora0.calcularMedia(intArray65, (int) ' ', 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 0.0f + "'", float38 == 0.0f);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 10.0f + "'", float47 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals((float) float57, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 98.5f + "'", float74 == 98.5f);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray9 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float12 = calculadora4.calcularMedia(intArray9, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray15 = new int[] {};
        float float18 = calculadora13.calcularMedia(intArray15, 100, 1);
        java.lang.Class<?> wildcardClass19 = intArray15.getClass();
        java.lang.Class<?> wildcardClass20 = intArray15.getClass();
        float float23 = calculadora4.calcularMedia(intArray15, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float32 = calculadora24.calcularMedia(intArray29, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray44 = new int[] {};
        float float47 = calculadora42.calcularMedia(intArray44, 100, 1);
        java.lang.Class<?> wildcardClass48 = intArray44.getClass();
        float float51 = calculadora33.calcularMedia(intArray44, 0, 10);
        float float54 = calculadora24.calcularMedia(intArray44, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray61 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float64 = calculadora56.calcularMedia(intArray61, (int) (byte) 10, (int) '4');
        float float67 = calculadora55.calcularMedia(intArray61, 10, 0);
        float float70 = calculadora24.calcularMedia(intArray61, (int) (short) 0, 0);
        float float73 = calculadora4.calcularMedia(intArray61, (-1), (int) '4');
        java.lang.Class<?> wildcardClass74 = intArray61.getClass();
        float float77 = calculadora0.calcularMedia(intArray61, (int) (byte) 1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass78 = intArray61.getClass();
        java.lang.Class<?> wildcardClass79 = intArray61.getClass();
        java.lang.Class<?> wildcardClass80 = intArray61.getClass();
        java.lang.Class<?> wildcardClass81 = intArray61.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 10.0f + "'", float12 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + (-1.0f) + "'", float18 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 0.0f + "'", float32 == 0.0f);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 10.0f + "'", float64 == 10.0f);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) -1, (int) ' ');
        java.lang.Class<?> wildcardClass47 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass48 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray15 = new int[] {};
        float float18 = calculadora13.calcularMedia(intArray15, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora13.calcularMedia(intArray21, 10, (int) 'a');
        java.lang.Class<?> wildcardClass29 = intArray21.getClass();
        float float32 = calculadora0.calcularMedia(intArray21, (int) (short) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass33 = intArray21.getClass();
        java.lang.Class<?> wildcardClass34 = intArray21.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + (-1.0f) + "'", float18 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals((float) float32, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray17 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float20 = calculadora12.calcularMedia(intArray17, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass21 = calculadora12.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora12.calcularMedia(intArray33, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray49 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float52 = calculadora44.calcularMedia(intArray49, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass53 = intArray49.getClass();
        float float56 = calculadora12.calcularMedia(intArray49, (int) '#', 10);
        java.lang.Class<?> wildcardClass57 = calculadora12.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass59 = calculadora58.getClass();
        int[] intArray60 = new int[] {};
        float float63 = calculadora58.calcularMedia(intArray60, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        float float73 = calculadora58.calcularMedia(intArray66, 10, (int) 'a');
        java.lang.Class<?> wildcardClass74 = intArray66.getClass();
        java.lang.Class<?> wildcardClass75 = intArray66.getClass();
        float float78 = calculadora12.calcularMedia(intArray66, 100, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray81 = new int[] {};
        float float84 = calculadora79.calcularMedia(intArray81, 100, 1);
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        float float88 = calculadora12.calcularMedia(intArray81, 0, (int) (byte) 1);
        float float91 = calculadora0.calcularMedia(intArray81, (int) (short) -1, 100);
        java.lang.Class<?> wildcardClass92 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 0.0f + "'", float20 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 10.0f + "'", float52 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora23.calcularMedia(intArray31, 10, (int) 'a');
        java.lang.Class<?> wildcardClass39 = intArray31.getClass();
        float float42 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        java.lang.Class<?> wildcardClass59 = intArray54.getClass();
        float float62 = calculadora43.calcularMedia(intArray54, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass63 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray70 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float73 = calculadora65.calcularMedia(intArray70, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass75 = calculadora74.getClass();
        int[] intArray76 = new int[] {};
        float float79 = calculadora74.calcularMedia(intArray76, 100, 1);
        java.lang.Class<?> wildcardClass80 = intArray76.getClass();
        float float83 = calculadora65.calcularMedia(intArray76, 0, 10);
        float float86 = calculadora64.calcularMedia(intArray76, (int) (short) -1, (-1));
        java.lang.Class<?> wildcardClass87 = intArray76.getClass();
        float float90 = calculadora43.calcularMedia(intArray76, (int) (byte) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass91 = intArray76.getClass();
        float float94 = calculadora0.calcularMedia(intArray76, 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass95 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 10.0f + "'", float73 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals((float) float83, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals((float) float90, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray9 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float12 = calculadora4.calcularMedia(intArray9, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray15 = new int[] {};
        float float18 = calculadora13.calcularMedia(intArray15, 100, 1);
        java.lang.Class<?> wildcardClass19 = intArray15.getClass();
        java.lang.Class<?> wildcardClass20 = intArray15.getClass();
        float float23 = calculadora4.calcularMedia(intArray15, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float32 = calculadora24.calcularMedia(intArray29, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray44 = new int[] {};
        float float47 = calculadora42.calcularMedia(intArray44, 100, 1);
        java.lang.Class<?> wildcardClass48 = intArray44.getClass();
        float float51 = calculadora33.calcularMedia(intArray44, 0, 10);
        float float54 = calculadora24.calcularMedia(intArray44, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray61 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float64 = calculadora56.calcularMedia(intArray61, (int) (byte) 10, (int) '4');
        float float67 = calculadora55.calcularMedia(intArray61, 10, 0);
        float float70 = calculadora24.calcularMedia(intArray61, (int) (short) 0, 0);
        float float73 = calculadora4.calcularMedia(intArray61, (-1), (int) '4');
        java.lang.Class<?> wildcardClass74 = intArray61.getClass();
        float float77 = calculadora0.calcularMedia(intArray61, (int) (byte) 1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass78 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass79 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass80 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 10.0f + "'", float12 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + (-1.0f) + "'", float18 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 0.0f + "'", float32 == 0.0f);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 10.0f + "'", float64 == 10.0f);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray11 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float14 = calculadora6.calcularMedia(intArray11, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass16 = calculadora15.getClass();
        int[] intArray17 = new int[] {};
        float float20 = calculadora15.calcularMedia(intArray17, 100, 1);
        java.lang.Class<?> wildcardClass21 = intArray17.getClass();
        java.lang.Class<?> wildcardClass22 = intArray17.getClass();
        float float25 = calculadora6.calcularMedia(intArray17, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass26 = calculadora6.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        float float39 = calculadora27.calcularMedia(intArray33, 10, 0);
        float float42 = calculadora6.calcularMedia(intArray33, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray45 = new int[] {};
        float float48 = calculadora43.calcularMedia(intArray45, 100, 1);
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        float float53 = calculadora6.calcularMedia(intArray45, 0, (int) '#');
        float float56 = calculadora0.calcularMedia(intArray45, (int) '#', (int) (byte) 0);
        java.lang.Class<?> wildcardClass57 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass58 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass59 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 10.0f + "'", float14 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + (-1.0f) + "'", float20 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + (-1.0f) + "'", float25 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals((float) float53, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        java.lang.Class<?> wildcardClass16 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        int[] intArray19 = new int[] {};
        float float22 = calculadora17.calcularMedia(intArray19, 100, 1);
        java.lang.Class<?> wildcardClass23 = intArray19.getClass();
        java.lang.Class<?> wildcardClass24 = intArray19.getClass();
        float float27 = calculadora0.calcularMedia(intArray19, (int) ' ', (int) ' ');
        java.lang.Class<?> wildcardClass28 = intArray19.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        java.lang.Class<?> wildcardClass21 = intArray16.getClass();
        float float24 = calculadora0.calcularMedia(intArray16, (int) (byte) 1, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = intArray16.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        float float33 = calculadora21.calcularMedia(intArray27, 10, 0);
        float float36 = calculadora0.calcularMedia(intArray27, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        java.lang.Class<?> wildcardClass44 = intArray39.getClass();
        float float47 = calculadora0.calcularMedia(intArray39, 0, (int) '#');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        float float60 = calculadora48.calcularMedia(intArray54, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray66 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float69 = calculadora61.calcularMedia(intArray66, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass70 = calculadora61.getClass();
        int[] intArray71 = null;
        float float74 = calculadora61.calcularMedia(intArray71, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray81 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float84 = calculadora76.calcularMedia(intArray81, (int) (byte) 10, (int) '4');
        float float87 = calculadora75.calcularMedia(intArray81, 10, 0);
        float float90 = calculadora61.calcularMedia(intArray81, 100, (int) '#');
        float float93 = calculadora48.calcularMedia(intArray81, (int) (byte) 1, (int) (short) 1);
        java.lang.Class<?> wildcardClass94 = intArray81.getClass();
        java.lang.Class<?> wildcardClass95 = intArray81.getClass();
        float float98 = calculadora0.calcularMedia(intArray81, (int) (byte) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 0.0f + "'", float69 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + 10.0f + "'", float84 == 10.0f);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + float98 + "' != '" + 36.0f + "'", float98 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora20.calcularMedia(intArray31, 0, 10);
        float float41 = calculadora0.calcularMedia(intArray31, 0, (int) ' ');
        java.lang.Class<?> wildcardClass42 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float51 = calculadora43.calcularMedia(intArray48, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        java.lang.Class<?> wildcardClass53 = intArray48.getClass();
        java.lang.Class<?> wildcardClass54 = intArray48.getClass();
        float float57 = calculadora0.calcularMedia(intArray48, 0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass58 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass59 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass60 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray14 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float17 = calculadora9.calcularMedia(intArray14, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass18 = intArray14.getClass();
        java.lang.Class<?> wildcardClass19 = intArray14.getClass();
        float float22 = calculadora0.calcularMedia(intArray14, (int) (short) -1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        java.lang.Class<?> wildcardClass46 = intArray41.getClass();
        float float49 = calculadora30.calcularMedia(intArray41, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass50 = calculadora30.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora51.calcularMedia(intArray57, 10, 0);
        float float66 = calculadora30.calcularMedia(intArray57, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass68 = calculadora67.getClass();
        int[] intArray69 = new int[] {};
        float float72 = calculadora67.calcularMedia(intArray69, 100, 1);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        java.lang.Class<?> wildcardClass74 = intArray69.getClass();
        float float77 = calculadora30.calcularMedia(intArray69, 0, (int) '#');
        float float80 = calculadora24.calcularMedia(intArray69, (int) '#', (int) (byte) 0);
        float float83 = calculadora0.calcularMedia(intArray69, (int) (byte) 1, (int) 'a');
        java.lang.Class<?> wildcardClass84 = intArray69.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 0.0f + "'", float17 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertEquals((float) float83, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass23 = calculadora22.getClass();
        int[] intArray27 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float30 = calculadora22.calcularMedia(intArray27, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray36 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float39 = calculadora31.calcularMedia(intArray36, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora31.calcularMedia(intArray42, 0, 10);
        float float52 = calculadora22.calcularMedia(intArray42, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray59 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float62 = calculadora54.calcularMedia(intArray59, (int) (byte) 10, (int) '4');
        float float65 = calculadora53.calcularMedia(intArray59, 10, 0);
        float float68 = calculadora22.calcularMedia(intArray59, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass69 = intArray59.getClass();
        float float72 = calculadora0.calcularMedia(intArray59, 100, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray78 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float81 = calculadora73.calcularMedia(intArray78, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass82 = intArray78.getClass();
        java.lang.Class<?> wildcardClass83 = intArray78.getClass();
        float float86 = calculadora0.calcularMedia(intArray78, (int) (short) 10, (int) 'a');
        java.lang.Class<?> wildcardClass87 = intArray78.getClass();
        java.lang.Class<?> wildcardClass88 = intArray78.getClass();
        java.lang.Class<?> wildcardClass89 = intArray78.getClass();
        java.lang.Class<?> wildcardClass90 = intArray78.getClass();
        java.lang.Class<?> wildcardClass91 = intArray78.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 0.0f + "'", float30 == 0.0f);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 10.0f + "'", float39 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals((float) float49, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 10.0f + "'", float62 == 10.0f);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + 10.0f + "'", float81 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + 53.5f + "'", float86 == 53.5f);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora21.calcularMedia(intArray31, 0, 100);
        int[] intArray41 = null;
        float float44 = calculadora21.calcularMedia(intArray41, (int) '#', (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray51 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float54 = calculadora46.calcularMedia(intArray51, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        java.lang.Class<?> wildcardClass61 = intArray57.getClass();
        float float64 = calculadora46.calcularMedia(intArray57, 0, 10);
        float float67 = calculadora45.calcularMedia(intArray57, (int) (short) -1, (-1));
        float float70 = calculadora21.calcularMedia(intArray57, (int) (byte) -1, (int) (short) 0);
        java.lang.Class<?> wildcardClass71 = intArray57.getClass();
        float float74 = calculadora0.calcularMedia(intArray57, (int) ' ', (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 36.0f + "'", float40 == 36.0f);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 10.0f + "'", float54 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals((float) float64, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        java.lang.Class<?> wildcardClass44 = intArray39.getClass();
        java.lang.Class<?> wildcardClass45 = intArray39.getClass();
        java.lang.Class<?> wildcardClass46 = intArray39.getClass();
        float float49 = calculadora0.calcularMedia(intArray39, (int) 'a', (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        java.lang.Class<?> wildcardClass52 = calculadora50.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora50.getClass();
        java.lang.Class<?> wildcardClass54 = calculadora50.getClass();
        java.lang.Class<?> wildcardClass55 = calculadora50.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray58 = new int[] {};
        float float61 = calculadora56.calcularMedia(intArray58, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray64 = new int[] {};
        float float67 = calculadora62.calcularMedia(intArray64, 100, 1);
        java.lang.Class<?> wildcardClass68 = intArray64.getClass();
        float float71 = calculadora56.calcularMedia(intArray64, 10, (int) 'a');
        float float74 = calculadora50.calcularMedia(intArray64, (int) (byte) 0, (int) 'a');
        float float77 = calculadora0.calcularMedia(intArray64, 0, (int) 'a');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 97.0f + "'", float49 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals((float) float71, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        int[] intArray21 = null;
        float float24 = calculadora11.calcularMedia(intArray21, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora11.calcularMedia(intArray31, 100, (int) '#');
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray46 = new int[] {};
        float float49 = calculadora44.calcularMedia(intArray46, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora44.calcularMedia(intArray52, 10, (int) 'a');
        java.lang.Class<?> wildcardClass60 = intArray52.getClass();
        float float63 = calculadora0.calcularMedia(intArray52, (int) (byte) -1, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        java.lang.Class<?> wildcardClass71 = intArray66.getClass();
        float float74 = calculadora0.calcularMedia(intArray66, (int) (short) 1, (int) ' ');
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass77 = calculadora76.getClass();
        int[] intArray78 = new int[] {};
        float float81 = calculadora76.calcularMedia(intArray78, 100, 1);
        java.lang.Class<?> wildcardClass82 = intArray78.getClass();
        float float85 = calculadora0.calcularMedia(intArray78, (int) (short) 0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass86 = intArray78.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertEquals((float) float85, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        java.lang.Class<?> wildcardClass51 = intArray45.getClass();
        float float54 = calculadora0.calcularMedia(intArray45, (int) '#', (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        float float63 = calculadora0.calcularMedia(intArray57, 0, (int) (short) 10);
        int[] intArray64 = null;
        float float67 = calculadora0.calcularMedia(intArray64, (int) (byte) 1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass68 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass69 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        int[] intArray71 = null;
        float float74 = calculadora0.calcularMedia(intArray71, (int) (byte) 100, (int) '4');
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 97.0f + "'", float54 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        float float48 = calculadora28.calcularMedia(intArray42, (int) (byte) 1, (int) '4');
        float float51 = calculadora0.calcularMedia(intArray42, (int) (byte) 10, (int) (byte) 10);
        java.lang.Class<?> wildcardClass52 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass54 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 5.5f + "'", float48 == 5.5f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        int[] intArray3 = null;
        try {
            float float6 = calculadora0.calcularMedia(intArray3, (int) (short) 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        int[] intArray21 = null;
        float float24 = calculadora11.calcularMedia(intArray21, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora11.calcularMedia(intArray31, 100, (int) '#');
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (short) 0);
        java.lang.Class<?> wildcardClass44 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        java.lang.Class<?> wildcardClass47 = calculadora45.getClass();
        java.lang.Class<?> wildcardClass48 = calculadora45.getClass();
        java.lang.Class<?> wildcardClass49 = calculadora45.getClass();
        java.lang.Class<?> wildcardClass50 = calculadora45.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray53 = new int[] {};
        float float56 = calculadora51.calcularMedia(intArray53, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass58 = calculadora57.getClass();
        int[] intArray59 = new int[] {};
        float float62 = calculadora57.calcularMedia(intArray59, 100, 1);
        java.lang.Class<?> wildcardClass63 = intArray59.getClass();
        float float66 = calculadora51.calcularMedia(intArray59, 10, (int) 'a');
        float float69 = calculadora45.calcularMedia(intArray59, (int) (byte) 0, (int) 'a');
        float float72 = calculadora0.calcularMedia(intArray59, (int) (byte) 10, (int) 'a');
        java.lang.Class<?> wildcardClass73 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals((float) float66, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float69, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float72, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        float float56 = calculadora0.calcularMedia(intArray50, (int) (byte) 1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        java.lang.Class<?> wildcardClass67 = intArray62.getClass();
        java.lang.Class<?> wildcardClass68 = intArray62.getClass();
        java.lang.Class<?> wildcardClass69 = intArray62.getClass();
        float float72 = calculadora0.calcularMedia(intArray62, (int) '4', (int) 'a');
        java.lang.Class<?> wildcardClass73 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass74 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 36.0f + "'", float56 == 36.0f);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 97.0f + "'", float72 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        int[] intArray20 = null;
        float float23 = calculadora0.calcularMedia(intArray20, (int) '#', (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass27 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray34 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float37 = calculadora29.calcularMedia(intArray34, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass38 = calculadora29.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        float float57 = calculadora39.calcularMedia(intArray50, (int) '#', 100);
        float float60 = calculadora29.calcularMedia(intArray50, (int) (byte) 10, 100);
        float float63 = calculadora0.calcularMedia(intArray50, 0, (int) ' ');
        java.lang.Class<?> wildcardClass64 = intArray50.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 0.0f + "'", float37 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 100.0f + "'", float57 == 100.0f);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 55.0f + "'", float60 == 55.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 5.0f + "'", float63 == 5.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        java.lang.Class<?> wildcardClass38 = intArray33.getClass();
        float float41 = calculadora22.calcularMedia(intArray33, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray47 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float50 = calculadora42.calcularMedia(intArray47, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray53 = new int[] {};
        float float56 = calculadora51.calcularMedia(intArray53, 100, 1);
        java.lang.Class<?> wildcardClass57 = intArray53.getClass();
        float float60 = calculadora42.calcularMedia(intArray53, 0, 10);
        float float63 = calculadora22.calcularMedia(intArray53, (int) (short) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass64 = intArray53.getClass();
        java.lang.Class<?> wildcardClass65 = intArray53.getClass();
        float float68 = calculadora0.calcularMedia(intArray53, 100, (int) (short) 10);
        java.lang.Class<?> wildcardClass69 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + (-1.0f) + "'", float41 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + 10.0f + "'", float50 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals((float) float60, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray11 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float14 = calculadora6.calcularMedia(intArray11, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, (int) '#', 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray24 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float27 = calculadora19.calcularMedia(intArray24, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        float float37 = calculadora19.calcularMedia(intArray30, 0, 10);
        java.lang.Class<?> wildcardClass38 = calculadora19.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray44 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float47 = calculadora39.calcularMedia(intArray44, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        float float57 = calculadora39.calcularMedia(intArray50, 0, 10);
        float float60 = calculadora19.calcularMedia(intArray50, 0, (int) ' ');
        java.lang.Class<?> wildcardClass61 = calculadora19.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float70 = calculadora62.calcularMedia(intArray67, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = intArray67.getClass();
        java.lang.Class<?> wildcardClass72 = intArray67.getClass();
        java.lang.Class<?> wildcardClass73 = intArray67.getClass();
        float float76 = calculadora19.calcularMedia(intArray67, 0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass77 = intArray67.getClass();
        java.lang.Class<?> wildcardClass78 = intArray67.getClass();
        float float81 = calculadora0.calcularMedia(intArray67, (int) (byte) 10, 1);
        java.lang.Class<?> wildcardClass82 = intArray67.getClass();
        java.lang.Class<?> wildcardClass83 = intArray67.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 100.0f + "'", float18 == 100.0f);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 10.0f + "'", float27 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals((float) float37, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 10.0f + "'", float47 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals((float) float57, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float60, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 0.0f + "'", float70 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, (int) '#', 100);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass34 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray40 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float43 = calculadora35.calcularMedia(intArray40, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray46 = new int[] {};
        float float49 = calculadora44.calcularMedia(intArray46, 100, 1);
        java.lang.Class<?> wildcardClass50 = intArray46.getClass();
        float float53 = calculadora35.calcularMedia(intArray46, 0, 10);
        java.lang.Class<?> wildcardClass54 = calculadora35.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        float float73 = calculadora55.calcularMedia(intArray66, 0, 10);
        float float76 = calculadora35.calcularMedia(intArray66, 0, (int) ' ');
        float float79 = calculadora32.calcularMedia(intArray66, (int) 'a', (int) (byte) 0);
        float float82 = calculadora0.calcularMedia(intArray66, (int) (short) 10, (int) (short) 1);
        java.lang.Class<?> wildcardClass83 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass84 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass85 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass87 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 100.0f + "'", float28 == 100.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 55.0f + "'", float31 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 10.0f + "'", float43 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals((float) float53, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        int[] intArray20 = null;
        float float23 = calculadora0.calcularMedia(intArray20, (int) '#', (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass27 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass36 = calculadora35.getClass();
        int[] intArray37 = new int[] {};
        float float40 = calculadora35.calcularMedia(intArray37, 100, 1);
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora29.calcularMedia(intArray37, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        float float56 = calculadora29.calcularMedia(intArray50, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass58 = calculadora57.getClass();
        int[] intArray59 = new int[] {};
        float float62 = calculadora57.calcularMedia(intArray59, 100, 1);
        java.lang.Class<?> wildcardClass63 = intArray59.getClass();
        java.lang.Class<?> wildcardClass64 = intArray59.getClass();
        float float67 = calculadora29.calcularMedia(intArray59, (int) (byte) -1, (int) (byte) -1);
        float float70 = calculadora0.calcularMedia(intArray59, 100, 0);
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals((float) float44, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 55.0f + "'", float56 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        int[] intArray16 = null;
        float float19 = calculadora0.calcularMedia(intArray16, 1, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray22 = new int[] {};
        float float25 = calculadora20.calcularMedia(intArray22, 100, 1);
        int[] intArray26 = null;
        float float29 = calculadora20.calcularMedia(intArray26, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass30 = calculadora20.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora31.calcularMedia(intArray39, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        float float58 = calculadora31.calcularMedia(intArray52, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray70 = new int[] {};
        float float73 = calculadora68.calcularMedia(intArray70, 100, 1);
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        float float77 = calculadora59.calcularMedia(intArray70, 0, 10);
        java.lang.Class<?> wildcardClass78 = intArray70.getClass();
        float float81 = calculadora31.calcularMedia(intArray70, 100, (int) '4');
        java.lang.Class<?> wildcardClass82 = intArray70.getClass();
        float float85 = calculadora20.calcularMedia(intArray70, 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass86 = calculadora20.getClass();
        int[] intArray88 = new int[] { (short) 10 };
        float float91 = calculadora20.calcularMedia(intArray88, (int) ' ', (int) ' ');
        float float94 = calculadora0.calcularMedia(intArray88, (int) 'a', 100);
        java.lang.Class<?> wildcardClass95 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + (-1.0f) + "'", float25 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 55.0f + "'", float58 == 55.0f);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertEquals((float) float94, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float28 = calculadora20.calcularMedia(intArray25, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass29 = calculadora20.getClass();
        java.lang.Class<?> wildcardClass30 = calculadora20.getClass();
        java.lang.Class<?> wildcardClass31 = calculadora20.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float40 = calculadora32.calcularMedia(intArray37, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass41 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray47 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float50 = calculadora42.calcularMedia(intArray47, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray53 = new int[] {};
        float float56 = calculadora51.calcularMedia(intArray53, 100, 1);
        java.lang.Class<?> wildcardClass57 = intArray53.getClass();
        float float60 = calculadora42.calcularMedia(intArray53, 0, 10);
        float float63 = calculadora32.calcularMedia(intArray53, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray69 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float72 = calculadora64.calcularMedia(intArray69, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        float float76 = calculadora32.calcularMedia(intArray69, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray82 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float85 = calculadora77.calcularMedia(intArray82, (int) (byte) 10, (int) '4');
        float float88 = calculadora32.calcularMedia(intArray82, (int) (byte) 1, (int) (short) 100);
        float float91 = calculadora20.calcularMedia(intArray82, (int) (byte) 0, (-1));
        java.lang.Class<?> wildcardClass92 = intArray82.getClass();
        float float95 = calculadora0.calcularMedia(intArray82, (int) (byte) 0, (int) 'a');
        java.lang.Class<?> wildcardClass96 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass97 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.0f + "'", float28 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 0.0f + "'", float40 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + 10.0f + "'", float50 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals((float) float60, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 10.0f + "'", float72 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + 10.0f + "'", float85 == 10.0f);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + 36.0f + "'", float88 == 36.0f);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + 36.0f + "'", float95 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass2 = calculadora1.getClass();
        int[] intArray6 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float9 = calculadora1.calcularMedia(intArray6, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        float float21 = calculadora1.calcularMedia(intArray15, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass23 = calculadora22.getClass();
        int[] intArray27 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float30 = calculadora22.calcularMedia(intArray27, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray36 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float39 = calculadora31.calcularMedia(intArray36, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora31.calcularMedia(intArray42, 0, 10);
        float float52 = calculadora22.calcularMedia(intArray42, 10, (int) (short) 0);
        float float55 = calculadora1.calcularMedia(intArray42, (int) (short) 0, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float64 = calculadora56.calcularMedia(intArray61, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray70 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float73 = calculadora65.calcularMedia(intArray70, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass75 = calculadora74.getClass();
        int[] intArray76 = new int[] {};
        float float79 = calculadora74.calcularMedia(intArray76, 100, 1);
        java.lang.Class<?> wildcardClass80 = intArray76.getClass();
        float float83 = calculadora65.calcularMedia(intArray76, 0, 10);
        float float86 = calculadora56.calcularMedia(intArray76, 10, (int) (short) 0);
        float float89 = calculadora1.calcularMedia(intArray76, (int) '4', (int) (byte) 100);
        float float92 = calculadora0.calcularMedia(intArray76, (int) (byte) 100, (int) (short) -1);
        java.lang.Class<?> wildcardClass93 = intArray76.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 0.0f + "'", float9 == 0.0f);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 5.5f + "'", float21 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 0.0f + "'", float30 == 0.0f);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 10.0f + "'", float39 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals((float) float49, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 10.0f + "'", float73 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals((float) float83, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertEquals((float) float89, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float48 = calculadora40.calcularMedia(intArray45, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass59 = calculadora58.getClass();
        int[] intArray60 = new int[] {};
        float float63 = calculadora58.calcularMedia(intArray60, 100, 1);
        java.lang.Class<?> wildcardClass64 = intArray60.getClass();
        float float67 = calculadora49.calcularMedia(intArray60, 0, 10);
        float float70 = calculadora40.calcularMedia(intArray60, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass71 = intArray60.getClass();
        float float74 = calculadora0.calcularMedia(intArray60, (int) (short) -1, (int) (byte) -1);
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 0.0f + "'", float48 == 0.0f);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals((float) float67, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        int[] intArray20 = null;
        float float23 = calculadora0.calcularMedia(intArray20, (int) '#', (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass27 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass29 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray9 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float12 = calculadora4.calcularMedia(intArray9, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray15 = new int[] {};
        float float18 = calculadora13.calcularMedia(intArray15, 100, 1);
        java.lang.Class<?> wildcardClass19 = intArray15.getClass();
        java.lang.Class<?> wildcardClass20 = intArray15.getClass();
        float float23 = calculadora4.calcularMedia(intArray15, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float32 = calculadora24.calcularMedia(intArray29, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray44 = new int[] {};
        float float47 = calculadora42.calcularMedia(intArray44, 100, 1);
        java.lang.Class<?> wildcardClass48 = intArray44.getClass();
        float float51 = calculadora33.calcularMedia(intArray44, 0, 10);
        float float54 = calculadora24.calcularMedia(intArray44, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray61 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float64 = calculadora56.calcularMedia(intArray61, (int) (byte) 10, (int) '4');
        float float67 = calculadora55.calcularMedia(intArray61, 10, 0);
        float float70 = calculadora24.calcularMedia(intArray61, (int) (short) 0, 0);
        float float73 = calculadora4.calcularMedia(intArray61, (-1), (int) '4');
        java.lang.Class<?> wildcardClass74 = intArray61.getClass();
        float float77 = calculadora0.calcularMedia(intArray61, (int) (byte) 1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass78 = calculadora0.getClass();
        int[] intArray79 = null;
        float float82 = calculadora0.calcularMedia(intArray79, (int) (byte) -1, (int) ' ');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 10.0f + "'", float12 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + (-1.0f) + "'", float18 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 0.0f + "'", float32 == 0.0f);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 10.0f + "'", float64 == 10.0f);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        java.lang.Class<?> wildcardClass26 = intArray21.getClass();
        float float29 = calculadora10.calcularMedia(intArray21, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora10.calcularMedia(intArray41, (int) (short) 0, (int) (short) 1);
        float float54 = calculadora0.calcularMedia(intArray41, (int) (short) 10, (int) (byte) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass64 = intArray60.getClass();
        java.lang.Class<?> wildcardClass65 = intArray60.getClass();
        java.lang.Class<?> wildcardClass66 = intArray60.getClass();
        float float69 = calculadora0.calcularMedia(intArray60, 100, 0);
        java.lang.Class<?> wildcardClass70 = intArray60.getClass();
        java.lang.Class<?> wildcardClass71 = intArray60.getClass();
        java.lang.Class<?> wildcardClass72 = intArray60.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        int[] intArray35 = new int[] { 0, 100, (byte) 0, 'a' };
        float float38 = calculadora0.calcularMedia(intArray35, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass39 = calculadora0.getClass();
        int[] intArray40 = null;
        try {
            float float43 = calculadora0.calcularMedia(intArray40, 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass32 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray44 = new int[] {};
        float float47 = calculadora42.calcularMedia(intArray44, 100, 1);
        java.lang.Class<?> wildcardClass48 = intArray44.getClass();
        float float51 = calculadora33.calcularMedia(intArray44, 0, 10);
        float float54 = calculadora23.calcularMedia(intArray44, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass55 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        float float68 = calculadora56.calcularMedia(intArray62, 10, 0);
        java.lang.Class<?> wildcardClass69 = intArray62.getClass();
        float float72 = calculadora23.calcularMedia(intArray62, (int) (byte) 100, (int) (short) 100);
        float float75 = calculadora0.calcularMedia(intArray62, (int) (short) 1, 1);
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass77 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray36 = new int[] {};
        float float39 = calculadora34.calcularMedia(intArray36, 100, 1);
        java.lang.Class<?> wildcardClass40 = intArray36.getClass();
        float float43 = calculadora28.calcularMedia(intArray36, 10, (int) 'a');
        float float46 = calculadora0.calcularMedia(intArray36, (int) 'a', (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        float float58 = calculadora0.calcularMedia(intArray52, (int) (short) 100, 100);
        java.lang.Class<?> wildcardClass59 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals((float) float43, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        float float53 = calculadora23.calcularMedia(intArray43, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        float float66 = calculadora54.calcularMedia(intArray60, 10, 0);
        float float69 = calculadora23.calcularMedia(intArray60, (int) (short) 0, 0);
        float float72 = calculadora0.calcularMedia(intArray60, 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray81 = new int[] {};
        float float84 = calculadora79.calcularMedia(intArray81, 100, 1);
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        float float88 = calculadora73.calcularMedia(intArray81, 10, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intArray81.getClass();
        float float92 = calculadora0.calcularMedia(intArray81, (int) (short) 1, 10);
        java.lang.Class<?> wildcardClass93 = intArray81.getClass();
        java.lang.Class<?> wildcardClass94 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertEquals((float) float92, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        float float45 = calculadora33.calcularMedia(intArray39, 10, 0);
        java.lang.Class<?> wildcardClass46 = intArray39.getClass();
        float float49 = calculadora0.calcularMedia(intArray39, (int) (byte) 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass50 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass51 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass52 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        java.lang.Class<?> wildcardClass6 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora7 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass8 = calculadora7.getClass();
        int[] intArray12 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float15 = calculadora7.calcularMedia(intArray12, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray21 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float24 = calculadora16.calcularMedia(intArray21, (int) (byte) 10, (int) '4');
        float float27 = calculadora7.calcularMedia(intArray21, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora37.calcularMedia(intArray48, 0, 10);
        float float58 = calculadora28.calcularMedia(intArray48, 10, (int) (short) 0);
        float float61 = calculadora7.calcularMedia(intArray48, (int) (short) 0, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float70 = calculadora62.calcularMedia(intArray67, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray76 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float79 = calculadora71.calcularMedia(intArray76, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass81 = calculadora80.getClass();
        int[] intArray82 = new int[] {};
        float float85 = calculadora80.calcularMedia(intArray82, 100, 1);
        java.lang.Class<?> wildcardClass86 = intArray82.getClass();
        float float89 = calculadora71.calcularMedia(intArray82, 0, 10);
        float float92 = calculadora62.calcularMedia(intArray82, 10, (int) (short) 0);
        float float95 = calculadora7.calcularMedia(intArray82, (int) '4', (int) (byte) 100);
        float float98 = calculadora0.calcularMedia(intArray82, (int) 'a', (int) (short) 0);
        java.lang.Class<?> wildcardClass99 = intArray82.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 0.0f + "'", float15 == 0.0f);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 10.0f + "'", float24 == 10.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 5.5f + "'", float27 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 0.0f + "'", float70 == 0.0f);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 10.0f + "'", float79 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertEquals((float) float89, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertEquals((float) float95, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float98 + "' != '" + (-1.0f) + "'", float98 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        float float23 = calculadora5.calcularMedia(intArray16, 0, 10);
        float float26 = calculadora0.calcularMedia(intArray16, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass27 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass37 = calculadora28.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float52 = calculadora44.calcularMedia(intArray49, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass53 = intArray49.getClass();
        float float56 = calculadora38.calcularMedia(intArray49, (int) '#', 100);
        float float59 = calculadora28.calcularMedia(intArray49, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass60 = calculadora28.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray63 = new int[] {};
        float float66 = calculadora61.calcularMedia(intArray63, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass68 = calculadora67.getClass();
        int[] intArray69 = new int[] {};
        float float72 = calculadora67.calcularMedia(intArray69, 100, 1);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        float float76 = calculadora61.calcularMedia(intArray69, 10, (int) 'a');
        java.lang.Class<?> wildcardClass77 = intArray69.getClass();
        float float80 = calculadora28.calcularMedia(intArray69, (int) (byte) -1, (int) (byte) -1);
        float float83 = calculadora0.calcularMedia(intArray69, 0, (int) (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals((float) float23, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 0.0f + "'", float52 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 100.0f + "'", float56 == 100.0f);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 55.0f + "'", float59 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        int[] intArray20 = null;
        float float23 = calculadora0.calcularMedia(intArray20, (int) '#', (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float32 = calculadora24.calcularMedia(intArray29, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass33 = calculadora24.getClass();
        java.lang.Class<?> wildcardClass34 = calculadora24.getClass();
        java.lang.Class<?> wildcardClass35 = calculadora24.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass37 = calculadora36.getClass();
        int[] intArray41 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float44 = calculadora36.calcularMedia(intArray41, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass45 = calculadora36.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray51 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float54 = calculadora46.calcularMedia(intArray51, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        java.lang.Class<?> wildcardClass61 = intArray57.getClass();
        float float64 = calculadora46.calcularMedia(intArray57, 0, 10);
        float float67 = calculadora36.calcularMedia(intArray57, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray73 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float76 = calculadora68.calcularMedia(intArray73, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass77 = intArray73.getClass();
        float float80 = calculadora36.calcularMedia(intArray73, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora81 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray86 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float89 = calculadora81.calcularMedia(intArray86, (int) (byte) 10, (int) '4');
        float float92 = calculadora36.calcularMedia(intArray86, (int) (byte) 1, (int) (short) 100);
        float float95 = calculadora24.calcularMedia(intArray86, (int) (byte) 0, (-1));
        float float98 = calculadora0.calcularMedia(intArray86, (int) (short) 1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 0.0f + "'", float32 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 0.0f + "'", float44 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 10.0f + "'", float54 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals((float) float64, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 10.0f + "'", float76 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + 10.0f + "'", float89 == 10.0f);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + 36.0f + "'", float92 == 36.0f);
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float98 + "' != '" + (-1.0f) + "'", float98 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float54 = calculadora46.calcularMedia(intArray51, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        float float73 = calculadora55.calcularMedia(intArray66, 0, 10);
        float float76 = calculadora46.calcularMedia(intArray66, 10, (int) (short) 0);
        float float79 = calculadora0.calcularMedia(intArray66, (int) (short) -1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass81 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass82 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 0.0f + "'", float54 == 0.0f);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray29 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float32 = calculadora24.calcularMedia(intArray29, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora24.calcularMedia(intArray35, 0, 10);
        float float45 = calculadora23.calcularMedia(intArray35, (int) (short) -1, (-1));
        float float48 = calculadora0.calcularMedia(intArray35, (int) (byte) -1, (int) 'a');
        int[] intArray49 = null;
        float float52 = calculadora0.calcularMedia(intArray49, (-1), (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass62 = intArray58.getClass();
        float float65 = calculadora0.calcularMedia(intArray58, (int) (short) 1, (-1));
        int[] intArray66 = null;
        float float69 = calculadora0.calcularMedia(intArray66, (int) (byte) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass71 = calculadora70.getClass();
        int[] intArray72 = new int[] {};
        float float75 = calculadora70.calcularMedia(intArray72, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass77 = calculadora76.getClass();
        int[] intArray78 = new int[] {};
        float float81 = calculadora76.calcularMedia(intArray78, 100, 1);
        java.lang.Class<?> wildcardClass82 = intArray78.getClass();
        float float85 = calculadora70.calcularMedia(intArray78, 10, (int) 'a');
        float float88 = calculadora0.calcularMedia(intArray78, 0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass89 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 10.0f + "'", float32 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals((float) float42, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertEquals((float) float85, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora21.calcularMedia(intArray41, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        float float64 = calculadora52.calcularMedia(intArray58, 10, 0);
        float float67 = calculadora21.calcularMedia(intArray58, (int) (short) 0, 0);
        float float70 = calculadora11.calcularMedia(intArray58, (int) (byte) 100, (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass72 = calculadora71.getClass();
        java.lang.Class<?> wildcardClass73 = calculadora71.getClass();
        java.lang.Class<?> wildcardClass74 = calculadora71.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray81 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float84 = calculadora76.calcularMedia(intArray81, (int) (byte) 10, (int) '4');
        float float87 = calculadora75.calcularMedia(intArray81, 10, 0);
        float float90 = calculadora71.calcularMedia(intArray81, 0, 100);
        float float93 = calculadora11.calcularMedia(intArray81, (int) (short) -1, (int) (byte) 1);
        float float96 = calculadora0.calcularMedia(intArray81, 0, 100);
        java.lang.Class<?> wildcardClass97 = intArray81.getClass();
        java.lang.Class<?> wildcardClass98 = intArray81.getClass();
        java.lang.Class<?> wildcardClass99 = intArray81.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + 10.0f + "'", float84 == 10.0f);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + 36.0f + "'", float90 == 36.0f);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + 36.0f + "'", float96 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        float float43 = calculadora31.calcularMedia(intArray37, 10, 0);
        float float46 = calculadora0.calcularMedia(intArray37, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray52 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float55 = calculadora47.calcularMedia(intArray52, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        java.lang.Class<?> wildcardClass57 = intArray52.getClass();
        float float60 = calculadora0.calcularMedia(intArray52, 10, (int) 'a');
        java.lang.Class<?> wildcardClass61 = intArray52.getClass();
        java.lang.Class<?> wildcardClass62 = intArray52.getClass();
        java.lang.Class<?> wildcardClass63 = intArray52.getClass();
        java.lang.Class<?> wildcardClass64 = intArray52.getClass();
        java.lang.Class<?> wildcardClass65 = intArray52.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 10.0f + "'", float55 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 53.5f + "'", float60 == 53.5f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass14 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass15 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass16 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        int[] intArray22 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float25 = calculadora17.calcularMedia(intArray22, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass36 = calculadora35.getClass();
        int[] intArray37 = new int[] {};
        float float40 = calculadora35.calcularMedia(intArray37, 100, 1);
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora26.calcularMedia(intArray37, 0, 10);
        float float47 = calculadora17.calcularMedia(intArray37, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        float float60 = calculadora48.calcularMedia(intArray54, 10, 0);
        float float63 = calculadora17.calcularMedia(intArray54, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float72 = calculadora64.calcularMedia(intArray69, 0, (int) (short) 1);
        float float75 = calculadora17.calcularMedia(intArray69, (int) (byte) -1, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = intArray69.getClass();
        float float79 = calculadora0.calcularMedia(intArray69, (int) (short) 0, (int) '#');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 0.0f + "'", float25 == 0.0f);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals((float) float44, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 0.0f + "'", float72 == 0.0f);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 5.0f + "'", float79 == 5.0f);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass6 = calculadora5.getClass();
        int[] intArray7 = new int[] {};
        float float10 = calculadora5.calcularMedia(intArray7, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray13 = new int[] {};
        float float16 = calculadora11.calcularMedia(intArray13, 100, 1);
        java.lang.Class<?> wildcardClass17 = intArray13.getClass();
        float float20 = calculadora5.calcularMedia(intArray13, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        float float32 = calculadora5.calcularMedia(intArray26, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray44 = new int[] {};
        float float47 = calculadora42.calcularMedia(intArray44, 100, 1);
        java.lang.Class<?> wildcardClass48 = intArray44.getClass();
        float float51 = calculadora33.calcularMedia(intArray44, 0, 10);
        java.lang.Class<?> wildcardClass52 = intArray44.getClass();
        float float55 = calculadora5.calcularMedia(intArray44, 100, (int) '4');
        float float58 = calculadora4.calcularMedia(intArray44, (int) (short) 100, (int) (byte) -1);
        float float61 = calculadora0.calcularMedia(intArray44, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass62 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass63 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass64 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + (-1.0f) + "'", float10 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals((float) float20, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 55.0f + "'", float32 == 55.0f);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        float float23 = calculadora5.calcularMedia(intArray16, 0, 10);
        float float26 = calculadora0.calcularMedia(intArray16, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass27 = intArray16.getClass();
        java.lang.Class<?> wildcardClass28 = intArray16.getClass();
        java.lang.Class<?> wildcardClass29 = intArray16.getClass();
        java.lang.Class<?> wildcardClass30 = intArray16.getClass();
        java.lang.Class<?> wildcardClass31 = intArray16.getClass();
        java.lang.Class<?> wildcardClass32 = intArray16.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals((float) float23, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        java.lang.Class<?> wildcardClass37 = intArray26.getClass();
        float float40 = calculadora0.calcularMedia(intArray26, (int) (byte) 1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray47 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float50 = calculadora42.calcularMedia(intArray47, (int) (byte) 10, (int) '4');
        float float53 = calculadora41.calcularMedia(intArray47, 10, 0);
        java.lang.Class<?> wildcardClass54 = calculadora41.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray61 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float64 = calculadora56.calcularMedia(intArray61, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass66 = calculadora65.getClass();
        int[] intArray67 = new int[] {};
        float float70 = calculadora65.calcularMedia(intArray67, 100, 1);
        java.lang.Class<?> wildcardClass71 = intArray67.getClass();
        float float74 = calculadora56.calcularMedia(intArray67, 0, 10);
        float float77 = calculadora55.calcularMedia(intArray67, (int) (short) -1, (-1));
        float float80 = calculadora41.calcularMedia(intArray67, (int) (short) 100, 0);
        float float83 = calculadora0.calcularMedia(intArray67, 1, (int) (short) -1);
        java.lang.Class<?> wildcardClass84 = calculadora0.getClass();
        int[] intArray85 = null;
        float float88 = calculadora0.calcularMedia(intArray85, 0, (int) (short) -1);
        java.lang.Class<?> wildcardClass89 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass90 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + 10.0f + "'", float50 == 10.0f);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 10.0f + "'", float64 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray11 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float14 = calculadora6.calcularMedia(intArray11, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass16 = calculadora15.getClass();
        int[] intArray17 = new int[] {};
        float float20 = calculadora15.calcularMedia(intArray17, 100, 1);
        java.lang.Class<?> wildcardClass21 = intArray17.getClass();
        float float24 = calculadora6.calcularMedia(intArray17, 0, 10);
        float float27 = calculadora5.calcularMedia(intArray17, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        float float50 = calculadora28.calcularMedia(intArray40, (int) (short) -1, (-1));
        float float53 = calculadora5.calcularMedia(intArray40, (int) (byte) -1, (int) 'a');
        int[] intArray54 = null;
        float float57 = calculadora5.calcularMedia(intArray54, (-1), (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray63 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float66 = calculadora58.calcularMedia(intArray63, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass67 = intArray63.getClass();
        float float70 = calculadora5.calcularMedia(intArray63, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass71 = intArray63.getClass();
        java.lang.Class<?> wildcardClass72 = intArray63.getClass();
        float float75 = calculadora0.calcularMedia(intArray63, (int) (byte) -1, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass77 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass78 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 10.0f + "'", float14 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + (-1.0f) + "'", float20 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals((float) float24, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 10.0f + "'", float66 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora40.calcularMedia(intArray48, 10, (int) 'a');
        java.lang.Class<?> wildcardClass56 = intArray48.getClass();
        java.lang.Class<?> wildcardClass57 = intArray48.getClass();
        float float60 = calculadora0.calcularMedia(intArray48, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass61 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float70 = calculadora62.calcularMedia(intArray67, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray76 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float79 = calculadora71.calcularMedia(intArray76, (int) (byte) 10, (int) '4');
        float float82 = calculadora62.calcularMedia(intArray76, (int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass83 = intArray76.getClass();
        java.lang.Class<?> wildcardClass84 = intArray76.getClass();
        float float87 = calculadora0.calcularMedia(intArray76, (int) '4', (int) 'a');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 0.0f + "'", float70 == 0.0f);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 10.0f + "'", float79 == 10.0f);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + 5.5f + "'", float82 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + 97.0f + "'", float87 == 97.0f);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass5 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray14 = new int[] {};
        float float17 = calculadora12.calcularMedia(intArray14, 100, 1);
        java.lang.Class<?> wildcardClass18 = intArray14.getClass();
        float float21 = calculadora6.calcularMedia(intArray14, 10, (int) 'a');
        float float24 = calculadora0.calcularMedia(intArray14, (int) (byte) 0, (int) 'a');
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        int[] intArray32 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float35 = calculadora27.calcularMedia(intArray32, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray41 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float44 = calculadora36.calcularMedia(intArray41, (int) (byte) 10, (int) '4');
        float float47 = calculadora27.calcularMedia(intArray41, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray53 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float56 = calculadora48.calcularMedia(intArray53, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass67 = calculadora66.getClass();
        int[] intArray68 = new int[] {};
        float float71 = calculadora66.calcularMedia(intArray68, 100, 1);
        java.lang.Class<?> wildcardClass72 = intArray68.getClass();
        float float75 = calculadora57.calcularMedia(intArray68, 0, 10);
        float float78 = calculadora48.calcularMedia(intArray68, 10, (int) (short) 0);
        float float81 = calculadora27.calcularMedia(intArray68, (int) (short) 0, (int) 'a');
        java.lang.Class<?> wildcardClass82 = intArray68.getClass();
        float float85 = calculadora0.calcularMedia(intArray68, 10, (int) (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + (-1.0f) + "'", float17 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals((float) float21, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float24, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + 0.0f + "'", float35 == 0.0f);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 10.0f + "'", float44 == 10.0f);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 5.5f + "'", float47 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 0.0f + "'", float56 == 0.0f);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertEquals((float) float75, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertEquals((float) float81, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertEquals((float) float85, Float.NaN, 0);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        int[] intArray13 = null;
        float float16 = calculadora0.calcularMedia(intArray13, (int) ' ', (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        int[] intArray19 = new int[] {};
        float float22 = calculadora17.calcularMedia(intArray19, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        java.lang.Class<?> wildcardClass29 = intArray25.getClass();
        float float32 = calculadora17.calcularMedia(intArray25, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float41 = calculadora33.calcularMedia(intArray38, 0, (int) (short) 1);
        float float44 = calculadora17.calcularMedia(intArray38, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray59 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float62 = calculadora54.calcularMedia(intArray59, (int) (byte) 10, (int) '4');
        float float65 = calculadora45.calcularMedia(intArray59, (int) (byte) 1, (int) '4');
        float float68 = calculadora17.calcularMedia(intArray59, (int) (byte) 10, (int) (byte) 10);
        float float71 = calculadora0.calcularMedia(intArray59, (int) (short) 100, (int) (short) 10);
        java.lang.Class<?> wildcardClass72 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass73 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass74 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals((float) float32, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 0.0f + "'", float41 == 0.0f);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 55.0f + "'", float44 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 10.0f + "'", float62 == 10.0f);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 5.5f + "'", float65 == 5.5f);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass5 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray14 = new int[] {};
        float float17 = calculadora12.calcularMedia(intArray14, 100, 1);
        java.lang.Class<?> wildcardClass18 = intArray14.getClass();
        float float21 = calculadora6.calcularMedia(intArray14, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass23 = calculadora22.getClass();
        int[] intArray27 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float30 = calculadora22.calcularMedia(intArray27, 0, (int) (short) 1);
        float float33 = calculadora6.calcularMedia(intArray27, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray39 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float42 = calculadora34.calcularMedia(intArray39, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        float float54 = calculadora34.calcularMedia(intArray48, (int) (byte) 1, (int) '4');
        float float57 = calculadora6.calcularMedia(intArray48, (int) (byte) 10, (int) (byte) 10);
        float float60 = calculadora0.calcularMedia(intArray48, (-1), 1);
        java.lang.Class<?> wildcardClass61 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + (-1.0f) + "'", float17 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals((float) float21, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 0.0f + "'", float30 == 0.0f);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + 55.0f + "'", float33 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 0.0f + "'", float42 == 0.0f);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 5.5f + "'", float54 == 5.5f);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora20.calcularMedia(intArray31, 0, 10);
        float float41 = calculadora11.calcularMedia(intArray31, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        float float54 = calculadora42.calcularMedia(intArray48, 10, 0);
        float float57 = calculadora11.calcularMedia(intArray48, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass58 = intArray48.getClass();
        float float61 = calculadora0.calcularMedia(intArray48, (int) (short) 100, 100);
        java.lang.Class<?> wildcardClass62 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + (-1.0f) + "'", float41 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass6 = calculadora5.getClass();
        int[] intArray10 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float13 = calculadora5.calcularMedia(intArray10, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray19 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float22 = calculadora14.calcularMedia(intArray19, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        java.lang.Class<?> wildcardClass29 = intArray25.getClass();
        float float32 = calculadora14.calcularMedia(intArray25, 0, 10);
        float float35 = calculadora5.calcularMedia(intArray25, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        float float48 = calculadora36.calcularMedia(intArray42, 10, 0);
        float float51 = calculadora5.calcularMedia(intArray42, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass52 = intArray42.getClass();
        float float55 = calculadora0.calcularMedia(intArray42, (int) (short) 0, (int) 'a');
        java.lang.Class<?> wildcardClass56 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass57 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass58 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 0.0f + "'", float13 == 0.0f);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 10.0f + "'", float22 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals((float) float32, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + (-1.0f) + "'", float35 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 36.0f + "'", float55 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        float float38 = calculadora0.calcularMedia(intArray30, (int) (byte) -1, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        float float51 = calculadora39.calcularMedia(intArray45, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray57 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float60 = calculadora52.calcularMedia(intArray57, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray66 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float69 = calculadora61.calcularMedia(intArray66, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass71 = calculadora70.getClass();
        int[] intArray72 = new int[] {};
        float float75 = calculadora70.calcularMedia(intArray72, 100, 1);
        java.lang.Class<?> wildcardClass76 = intArray72.getClass();
        float float79 = calculadora61.calcularMedia(intArray72, 0, 10);
        float float82 = calculadora52.calcularMedia(intArray72, 10, (int) (short) 0);
        float float85 = calculadora39.calcularMedia(intArray72, (int) (short) 0, 10);
        java.lang.Class<?> wildcardClass86 = intArray72.getClass();
        java.lang.Class<?> wildcardClass87 = intArray72.getClass();
        float float90 = calculadora0.calcularMedia(intArray72, 100, 0);
        java.lang.Class<?> wildcardClass91 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 0.0f + "'", float60 == 0.0f);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 10.0f + "'", float69 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals((float) float79, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertEquals((float) float85, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora20.calcularMedia(intArray31, 0, 10);
        float float41 = calculadora0.calcularMedia(intArray31, 0, (int) ' ');
        java.lang.Class<?> wildcardClass42 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float51 = calculadora43.calcularMedia(intArray48, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        java.lang.Class<?> wildcardClass53 = intArray48.getClass();
        java.lang.Class<?> wildcardClass54 = intArray48.getClass();
        float float57 = calculadora0.calcularMedia(intArray48, 0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass58 = intArray48.getClass();
        java.lang.Class<?> wildcardClass59 = intArray48.getClass();
        java.lang.Class<?> wildcardClass60 = intArray48.getClass();
        java.lang.Class<?> wildcardClass61 = intArray48.getClass();
        java.lang.Class<?> wildcardClass62 = intArray48.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass2 = calculadora1.getClass();
        int[] intArray3 = new int[] {};
        float float6 = calculadora1.calcularMedia(intArray3, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora7 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass8 = calculadora7.getClass();
        int[] intArray9 = new int[] {};
        float float12 = calculadora7.calcularMedia(intArray9, 100, 1);
        java.lang.Class<?> wildcardClass13 = intArray9.getClass();
        float float16 = calculadora1.calcularMedia(intArray9, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        int[] intArray22 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float25 = calculadora17.calcularMedia(intArray22, 0, (int) (short) 1);
        float float28 = calculadora1.calcularMedia(intArray22, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        java.lang.Class<?> wildcardClass48 = intArray40.getClass();
        float float51 = calculadora1.calcularMedia(intArray40, 100, (int) '4');
        float float54 = calculadora0.calcularMedia(intArray40, (int) (short) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass55 = intArray40.getClass();
        java.lang.Class<?> wildcardClass56 = intArray40.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + (-1.0f) + "'", float6 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals((float) float16, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 0.0f + "'", float25 == 0.0f);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 55.0f + "'", float28 == 55.0f);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray17 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float20 = calculadora12.calcularMedia(intArray17, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass21 = calculadora12.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora12.calcularMedia(intArray33, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray49 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float52 = calculadora44.calcularMedia(intArray49, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass53 = intArray49.getClass();
        float float56 = calculadora12.calcularMedia(intArray49, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        float float68 = calculadora12.calcularMedia(intArray62, (int) (byte) 1, (int) (short) 100);
        float float71 = calculadora0.calcularMedia(intArray62, (int) (byte) 0, (-1));
        java.lang.Class<?> wildcardClass72 = intArray62.getClass();
        java.lang.Class<?> wildcardClass73 = intArray62.getClass();
        java.lang.Class<?> wildcardClass74 = intArray62.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 0.0f + "'", float20 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 10.0f + "'", float52 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 36.0f + "'", float68 == 36.0f);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        float float43 = calculadora31.calcularMedia(intArray37, 10, 0);
        float float46 = calculadora0.calcularMedia(intArray37, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = calculadora47.getClass();
        java.lang.Class<?> wildcardClass57 = calculadora47.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        float float70 = calculadora58.calcularMedia(intArray64, 10, 0);
        float float73 = calculadora47.calcularMedia(intArray64, (-1), (int) (byte) 0);
        float float76 = calculadora0.calcularMedia(intArray64, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass77 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        java.lang.Class<?> wildcardClass49 = calculadora47.getClass();
        java.lang.Class<?> wildcardClass50 = calculadora47.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora51.calcularMedia(intArray57, 10, 0);
        float float66 = calculadora47.calcularMedia(intArray57, 0, 100);
        java.lang.Class<?> wildcardClass67 = intArray57.getClass();
        float float70 = calculadora0.calcularMedia(intArray57, 0, 0);
        java.lang.Class<?> wildcardClass71 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 36.0f + "'", float66 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        java.lang.Class<?> wildcardClass40 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass41 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass42 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        java.lang.Class<?> wildcardClass13 = calculadora11.getClass();
        java.lang.Class<?> wildcardClass14 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray21 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float24 = calculadora16.calcularMedia(intArray21, (int) (byte) 10, (int) '4');
        float float27 = calculadora15.calcularMedia(intArray21, 10, 0);
        float float30 = calculadora11.calcularMedia(intArray21, 0, 100);
        int[] intArray31 = null;
        float float34 = calculadora11.calcularMedia(intArray31, (int) '#', (int) (short) -1);
        java.lang.Class<?> wildcardClass35 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass37 = calculadora36.getClass();
        int[] intArray41 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float44 = calculadora36.calcularMedia(intArray41, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass55 = calculadora54.getClass();
        int[] intArray56 = new int[] {};
        float float59 = calculadora54.calcularMedia(intArray56, 100, 1);
        java.lang.Class<?> wildcardClass60 = intArray56.getClass();
        float float63 = calculadora45.calcularMedia(intArray56, 0, 10);
        float float66 = calculadora36.calcularMedia(intArray56, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray73 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float76 = calculadora68.calcularMedia(intArray73, (int) (byte) 10, (int) '4');
        float float79 = calculadora67.calcularMedia(intArray73, 10, 0);
        float float82 = calculadora36.calcularMedia(intArray73, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass83 = intArray73.getClass();
        float float86 = calculadora11.calcularMedia(intArray73, (int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass87 = intArray73.getClass();
        float float90 = calculadora0.calcularMedia(intArray73, (int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass91 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 10.0f + "'", float24 == 10.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 36.0f + "'", float30 == 36.0f);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 0.0f + "'", float44 == 0.0f);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 10.0f + "'", float76 == 10.0f);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass30 = calculadora21.getClass();
        int[] intArray31 = null;
        float float34 = calculadora21.calcularMedia(intArray31, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray41 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float44 = calculadora36.calcularMedia(intArray41, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora36.calcularMedia(intArray47, 0, 10);
        float float57 = calculadora35.calcularMedia(intArray47, (int) (short) -1, (-1));
        float float60 = calculadora21.calcularMedia(intArray47, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray63 = new int[] {};
        float float66 = calculadora61.calcularMedia(intArray63, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass68 = calculadora67.getClass();
        int[] intArray69 = new int[] {};
        float float72 = calculadora67.calcularMedia(intArray69, 100, 1);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        float float76 = calculadora61.calcularMedia(intArray69, 10, (int) 'a');
        java.lang.Class<?> wildcardClass77 = intArray69.getClass();
        java.lang.Class<?> wildcardClass78 = intArray69.getClass();
        float float81 = calculadora21.calcularMedia(intArray69, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass82 = intArray69.getClass();
        float float85 = calculadora0.calcularMedia(intArray69, 0, 0);
        java.lang.Class<?> wildcardClass86 = intArray69.getClass();
        java.lang.Class<?> wildcardClass87 = intArray69.getClass();
        java.lang.Class<?> wildcardClass88 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 10.0f + "'", float44 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora20.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray28 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float31 = calculadora23.calcularMedia(intArray28, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray34 = new int[] {};
        float float37 = calculadora32.calcularMedia(intArray34, 100, 1);
        java.lang.Class<?> wildcardClass38 = intArray34.getClass();
        float float41 = calculadora23.calcularMedia(intArray34, 0, 10);
        java.lang.Class<?> wildcardClass42 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        float float61 = calculadora43.calcularMedia(intArray54, 0, 10);
        float float64 = calculadora23.calcularMedia(intArray54, 0, (int) ' ');
        float float67 = calculadora20.calcularMedia(intArray54, (int) 'a', (int) (byte) 0);
        float float70 = calculadora0.calcularMedia(intArray54, (int) '#', (int) (byte) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass72 = calculadora71.getClass();
        int[] intArray73 = new int[] {};
        float float76 = calculadora71.calcularMedia(intArray73, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass78 = calculadora77.getClass();
        int[] intArray79 = new int[] {};
        float float82 = calculadora77.calcularMedia(intArray79, 100, 1);
        java.lang.Class<?> wildcardClass83 = intArray79.getClass();
        float float86 = calculadora71.calcularMedia(intArray79, 10, (int) 'a');
        java.lang.Class<?> wildcardClass87 = intArray79.getClass();
        float float90 = calculadora0.calcularMedia(intArray79, 0, (int) 'a');
        java.lang.Class<?> wildcardClass91 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 10.0f + "'", float31 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float64, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals((float) float86, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals((float) float90, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        float float43 = calculadora31.calcularMedia(intArray37, 10, 0);
        float float46 = calculadora0.calcularMedia(intArray37, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass47 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass48 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float54 = calculadora46.calcularMedia(intArray51, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        float float73 = calculadora55.calcularMedia(intArray66, 0, 10);
        float float76 = calculadora46.calcularMedia(intArray66, 10, (int) (short) 0);
        float float79 = calculadora0.calcularMedia(intArray66, (int) (short) -1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = intArray66.getClass();
        java.lang.Class<?> wildcardClass81 = intArray66.getClass();
        java.lang.Class<?> wildcardClass82 = intArray66.getClass();
        java.lang.Class<?> wildcardClass83 = intArray66.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 0.0f + "'", float54 == 0.0f);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        float float43 = calculadora31.calcularMedia(intArray37, 10, 0);
        float float46 = calculadora0.calcularMedia(intArray37, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass47 = intArray37.getClass();
        java.lang.Class<?> wildcardClass48 = intArray37.getClass();
        java.lang.Class<?> wildcardClass49 = intArray37.getClass();
        java.lang.Class<?> wildcardClass50 = intArray37.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass2 = calculadora1.getClass();
        int[] intArray3 = new int[] {};
        float float6 = calculadora1.calcularMedia(intArray3, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora7 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass8 = calculadora7.getClass();
        int[] intArray9 = new int[] {};
        float float12 = calculadora7.calcularMedia(intArray9, 100, 1);
        java.lang.Class<?> wildcardClass13 = intArray9.getClass();
        float float16 = calculadora1.calcularMedia(intArray9, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        int[] intArray22 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float25 = calculadora17.calcularMedia(intArray22, 0, (int) (short) 1);
        float float28 = calculadora1.calcularMedia(intArray22, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        java.lang.Class<?> wildcardClass48 = intArray40.getClass();
        float float51 = calculadora1.calcularMedia(intArray40, 100, (int) '4');
        float float54 = calculadora0.calcularMedia(intArray40, (int) (short) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass55 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float64 = calculadora56.calcularMedia(intArray61, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray70 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float73 = calculadora65.calcularMedia(intArray70, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass75 = calculadora74.getClass();
        int[] intArray76 = new int[] {};
        float float79 = calculadora74.calcularMedia(intArray76, 100, 1);
        java.lang.Class<?> wildcardClass80 = intArray76.getClass();
        float float83 = calculadora65.calcularMedia(intArray76, 0, 10);
        float float86 = calculadora56.calcularMedia(intArray76, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass87 = intArray76.getClass();
        float float90 = calculadora0.calcularMedia(intArray76, (int) (byte) 0, 0);
        java.lang.Class<?> wildcardClass91 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass92 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass93 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass94 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + (-1.0f) + "'", float6 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals((float) float16, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 0.0f + "'", float25 == 0.0f);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 55.0f + "'", float28 == 55.0f);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 10.0f + "'", float73 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals((float) float83, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        int[] intArray35 = new int[] { 0, 100, (byte) 0, 'a' };
        float float38 = calculadora0.calcularMedia(intArray35, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass39 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass40 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass41 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        java.lang.Class<?> wildcardClass31 = calculadora29.getClass();
        java.lang.Class<?> wildcardClass32 = calculadora29.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        float float45 = calculadora33.calcularMedia(intArray39, 10, 0);
        float float48 = calculadora29.calcularMedia(intArray39, 0, 100);
        float float51 = calculadora0.calcularMedia(intArray39, (int) (byte) -1, (int) (short) -1);
        java.lang.Class<?> wildcardClass52 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 36.0f + "'", float48 == 36.0f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        int[] intArray21 = null;
        float float24 = calculadora11.calcularMedia(intArray21, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora11.calcularMedia(intArray31, 100, (int) '#');
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (short) 0);
        java.lang.Class<?> wildcardClass44 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora20.calcularMedia(intArray31, 0, 10);
        float float41 = calculadora0.calcularMedia(intArray31, 0, (int) ' ');
        java.lang.Class<?> wildcardClass42 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        java.lang.Class<?> wildcardClass45 = calculadora43.getClass();
        java.lang.Class<?> wildcardClass46 = calculadora43.getClass();
        java.lang.Class<?> wildcardClass47 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray53 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float56 = calculadora48.calcularMedia(intArray53, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass58 = calculadora57.getClass();
        int[] intArray59 = new int[] {};
        float float62 = calculadora57.calcularMedia(intArray59, 100, 1);
        java.lang.Class<?> wildcardClass63 = intArray59.getClass();
        float float66 = calculadora48.calcularMedia(intArray59, 0, 10);
        float float69 = calculadora43.calcularMedia(intArray59, (int) 'a', (int) ' ');
        float float72 = calculadora0.calcularMedia(intArray59, 0, (int) (short) -1);
        java.lang.Class<?> wildcardClass73 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 10.0f + "'", float56 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals((float) float66, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora20.calcularMedia(intArray31, 0, 10);
        float float41 = calculadora0.calcularMedia(intArray31, 0, (int) ' ');
        java.lang.Class<?> wildcardClass42 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray45 = new int[] {};
        float float48 = calculadora43.calcularMedia(intArray45, 100, 1);
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        float float52 = calculadora0.calcularMedia(intArray45, (int) (byte) 100, (int) (short) -1);
        java.lang.Class<?> wildcardClass53 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass55 = calculadora54.getClass();
        int[] intArray56 = new int[] {};
        float float59 = calculadora54.calcularMedia(intArray56, 100, 1);
        float float62 = calculadora0.calcularMedia(intArray56, (int) '4', 1);
        java.lang.Class<?> wildcardClass63 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        java.lang.Class<?> wildcardClass44 = intArray39.getClass();
        java.lang.Class<?> wildcardClass45 = intArray39.getClass();
        java.lang.Class<?> wildcardClass46 = intArray39.getClass();
        float float49 = calculadora0.calcularMedia(intArray39, (int) 'a', (int) (short) 100);
        java.lang.Class<?> wildcardClass50 = intArray39.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 97.0f + "'", float49 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        int[] intArray20 = null;
        float float23 = calculadora0.calcularMedia(intArray20, (int) '#', (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass27 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass36 = calculadora35.getClass();
        int[] intArray37 = new int[] {};
        float float40 = calculadora35.calcularMedia(intArray37, 100, 1);
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora29.calcularMedia(intArray37, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        float float56 = calculadora29.calcularMedia(intArray50, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass57 = calculadora29.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray70 = new int[] {};
        float float73 = calculadora68.calcularMedia(intArray70, 100, 1);
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        float float77 = calculadora59.calcularMedia(intArray70, 0, 10);
        float float80 = calculadora58.calcularMedia(intArray70, (int) (short) -1, (-1));
        float float83 = calculadora29.calcularMedia(intArray70, (int) (short) 100, 100);
        float float86 = calculadora0.calcularMedia(intArray70, 0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass87 = intArray70.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals((float) float44, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 55.0f + "'", float56 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora40.calcularMedia(intArray48, 10, (int) 'a');
        java.lang.Class<?> wildcardClass56 = intArray48.getClass();
        java.lang.Class<?> wildcardClass57 = intArray48.getClass();
        float float60 = calculadora0.calcularMedia(intArray48, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass61 = intArray48.getClass();
        java.lang.Class<?> wildcardClass62 = intArray48.getClass();
        java.lang.Class<?> wildcardClass63 = intArray48.getClass();
        java.lang.Class<?> wildcardClass64 = intArray48.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray29 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float32 = calculadora24.calcularMedia(intArray29, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora24.calcularMedia(intArray35, 0, 10);
        float float45 = calculadora23.calcularMedia(intArray35, (int) (short) -1, (-1));
        float float48 = calculadora0.calcularMedia(intArray35, (int) (byte) -1, (int) 'a');
        int[] intArray49 = null;
        float float52 = calculadora0.calcularMedia(intArray49, (-1), (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass62 = intArray58.getClass();
        float float65 = calculadora0.calcularMedia(intArray58, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass66 = calculadora0.getClass();
        int[] intArray67 = null;
        try {
            float float70 = calculadora0.calcularMedia(intArray67, 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 10.0f + "'", float32 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals((float) float42, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        float float43 = calculadora31.calcularMedia(intArray37, 10, 0);
        float float46 = calculadora0.calcularMedia(intArray37, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        java.lang.Class<?> wildcardClass57 = intArray52.getClass();
        float float60 = calculadora0.calcularMedia(intArray52, 1, 0);
        java.lang.Class<?> wildcardClass61 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float70 = calculadora62.calcularMedia(intArray67, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = calculadora62.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass73 = calculadora72.getClass();
        int[] intArray74 = new int[] {};
        float float77 = calculadora72.calcularMedia(intArray74, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora78 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass79 = calculadora78.getClass();
        int[] intArray83 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float86 = calculadora78.calcularMedia(intArray83, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass87 = intArray83.getClass();
        float float90 = calculadora72.calcularMedia(intArray83, (int) '#', 100);
        float float93 = calculadora62.calcularMedia(intArray83, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass94 = intArray83.getClass();
        float float97 = calculadora0.calcularMedia(intArray83, (int) (short) 10, (int) (byte) -1);
        java.lang.Class<?> wildcardClass98 = intArray83.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 0.0f + "'", float70 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + 0.0f + "'", float86 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + 100.0f + "'", float90 == 100.0f);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + 55.0f + "'", float93 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        int[] intArray20 = null;
        float float23 = calculadora0.calcularMedia(intArray20, (int) '#', (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray32 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float35 = calculadora27.calcularMedia(intArray32, (int) (byte) 10, (int) '4');
        float float38 = calculadora26.calcularMedia(intArray32, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray44 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float47 = calculadora39.calcularMedia(intArray44, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray53 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float56 = calculadora48.calcularMedia(intArray53, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass58 = calculadora57.getClass();
        int[] intArray59 = new int[] {};
        float float62 = calculadora57.calcularMedia(intArray59, 100, 1);
        java.lang.Class<?> wildcardClass63 = intArray59.getClass();
        float float66 = calculadora48.calcularMedia(intArray59, 0, 10);
        float float69 = calculadora39.calcularMedia(intArray59, 10, (int) (short) 0);
        float float72 = calculadora26.calcularMedia(intArray59, (int) (short) -1, (int) ' ');
        float float75 = calculadora0.calcularMedia(intArray59, (int) (byte) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass76 = intArray59.getClass();
        java.lang.Class<?> wildcardClass77 = intArray59.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + 10.0f + "'", float35 == 10.0f);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 0.0f + "'", float47 == 0.0f);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 10.0f + "'", float56 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals((float) float66, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertEquals((float) float75, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        java.lang.Class<?> wildcardClass48 = intArray43.getClass();
        float float51 = calculadora32.calcularMedia(intArray43, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass52 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass54 = calculadora53.getClass();
        int[] intArray55 = new int[] {};
        float float58 = calculadora53.calcularMedia(intArray55, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass60 = calculadora59.getClass();
        int[] intArray61 = new int[] {};
        float float64 = calculadora59.calcularMedia(intArray61, 100, 1);
        java.lang.Class<?> wildcardClass65 = intArray61.getClass();
        float float68 = calculadora53.calcularMedia(intArray61, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora69 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass70 = calculadora69.getClass();
        int[] intArray74 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float77 = calculadora69.calcularMedia(intArray74, 0, (int) (short) 1);
        float float80 = calculadora53.calcularMedia(intArray74, 10, (int) (short) 100);
        float float83 = calculadora32.calcularMedia(intArray74, (int) ' ', (int) (byte) 10);
        java.lang.Class<?> wildcardClass84 = intArray74.getClass();
        float float87 = calculadora0.calcularMedia(intArray74, (int) (byte) 10, (int) (short) 1);
        java.lang.Class<?> wildcardClass88 = intArray74.getClass();
        java.lang.Class<?> wildcardClass89 = intArray74.getClass();
        java.lang.Class<?> wildcardClass90 = intArray74.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals((float) float68, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + 0.0f + "'", float77 == 0.0f);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 55.0f + "'", float80 == 55.0f);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float22 = calculadora14.calcularMedia(intArray19, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray28 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float31 = calculadora23.calcularMedia(intArray28, (int) (byte) 10, (int) '4');
        float float34 = calculadora14.calcularMedia(intArray28, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray41 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float44 = calculadora36.calcularMedia(intArray41, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora36.calcularMedia(intArray47, 0, 10);
        float float57 = calculadora35.calcularMedia(intArray47, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray70 = new int[] {};
        float float73 = calculadora68.calcularMedia(intArray70, 100, 1);
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        float float77 = calculadora59.calcularMedia(intArray70, 0, 10);
        float float80 = calculadora58.calcularMedia(intArray70, (int) (short) -1, (-1));
        float float83 = calculadora35.calcularMedia(intArray70, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass84 = intArray70.getClass();
        float float87 = calculadora14.calcularMedia(intArray70, (int) '4', (int) '#');
        java.lang.Class<?> wildcardClass88 = intArray70.getClass();
        java.lang.Class<?> wildcardClass89 = intArray70.getClass();
        float float92 = calculadora0.calcularMedia(intArray70, 0, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 0.0f + "'", float22 == 0.0f);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 10.0f + "'", float31 == 10.0f);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 5.5f + "'", float34 == 5.5f);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 10.0f + "'", float44 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass5 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray14 = new int[] {};
        float float17 = calculadora12.calcularMedia(intArray14, 100, 1);
        java.lang.Class<?> wildcardClass18 = intArray14.getClass();
        float float21 = calculadora6.calcularMedia(intArray14, 10, (int) 'a');
        float float24 = calculadora0.calcularMedia(intArray14, (int) (byte) 0, (int) 'a');
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass27 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + (-1.0f) + "'", float17 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals((float) float21, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float24, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        int[] intArray16 = null;
        float float19 = calculadora0.calcularMedia(intArray16, 1, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray22 = new int[] {};
        float float25 = calculadora20.calcularMedia(intArray22, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass27 = calculadora26.getClass();
        int[] intArray28 = new int[] {};
        float float31 = calculadora26.calcularMedia(intArray28, 100, 1);
        java.lang.Class<?> wildcardClass32 = intArray28.getClass();
        float float35 = calculadora20.calcularMedia(intArray28, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass37 = calculadora36.getClass();
        int[] intArray41 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float44 = calculadora36.calcularMedia(intArray41, 0, (int) (short) 1);
        float float47 = calculadora20.calcularMedia(intArray41, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass48 = calculadora20.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray55 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float58 = calculadora50.calcularMedia(intArray55, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass60 = calculadora59.getClass();
        int[] intArray61 = new int[] {};
        float float64 = calculadora59.calcularMedia(intArray61, 100, 1);
        java.lang.Class<?> wildcardClass65 = intArray61.getClass();
        float float68 = calculadora50.calcularMedia(intArray61, 0, 10);
        float float71 = calculadora49.calcularMedia(intArray61, (int) (short) -1, (-1));
        float float74 = calculadora20.calcularMedia(intArray61, (int) (short) 100, 100);
        java.lang.Class<?> wildcardClass75 = intArray61.getClass();
        java.lang.Class<?> wildcardClass76 = intArray61.getClass();
        java.lang.Class<?> wildcardClass77 = intArray61.getClass();
        float float80 = calculadora0.calcularMedia(intArray61, 100, (int) (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + (-1.0f) + "'", float25 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals((float) float35, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 0.0f + "'", float44 == 0.0f);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 55.0f + "'", float47 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 10.0f + "'", float58 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals((float) float68, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora23.calcularMedia(intArray31, 10, (int) 'a');
        java.lang.Class<?> wildcardClass39 = intArray31.getClass();
        float float42 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass43 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass44 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float54 = calculadora46.calcularMedia(intArray51, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass55 = calculadora46.getClass();
        int[] intArray56 = null;
        float float59 = calculadora46.calcularMedia(intArray56, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray66 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float69 = calculadora61.calcularMedia(intArray66, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass71 = calculadora70.getClass();
        int[] intArray72 = new int[] {};
        float float75 = calculadora70.calcularMedia(intArray72, 100, 1);
        java.lang.Class<?> wildcardClass76 = intArray72.getClass();
        float float79 = calculadora61.calcularMedia(intArray72, 0, 10);
        float float82 = calculadora60.calcularMedia(intArray72, (int) (short) -1, (-1));
        float float85 = calculadora46.calcularMedia(intArray72, (int) (short) -1, (int) (short) 100);
        java.lang.Class<?> wildcardClass86 = intArray72.getClass();
        java.lang.Class<?> wildcardClass87 = intArray72.getClass();
        float float90 = calculadora0.calcularMedia(intArray72, (-1), 0);
        java.lang.Class<?> wildcardClass91 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 0.0f + "'", float54 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 10.0f + "'", float69 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals((float) float79, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray36 = new int[] {};
        float float39 = calculadora34.calcularMedia(intArray36, 100, 1);
        java.lang.Class<?> wildcardClass40 = intArray36.getClass();
        float float43 = calculadora28.calcularMedia(intArray36, 10, (int) 'a');
        float float46 = calculadora0.calcularMedia(intArray36, (int) 'a', (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray61 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float64 = calculadora56.calcularMedia(intArray61, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass66 = calculadora65.getClass();
        int[] intArray67 = new int[] {};
        float float70 = calculadora65.calcularMedia(intArray67, 100, 1);
        java.lang.Class<?> wildcardClass71 = intArray67.getClass();
        float float74 = calculadora56.calcularMedia(intArray67, 0, 10);
        float float77 = calculadora47.calcularMedia(intArray67, 10, (int) (short) 0);
        int[] intArray82 = new int[] { 0, 100, (byte) 0, 'a' };
        float float85 = calculadora47.calcularMedia(intArray82, (int) (byte) -1, (int) 'a');
        float float88 = calculadora0.calcularMedia(intArray82, (int) (byte) 100, 0);
        java.lang.Class<?> wildcardClass89 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass90 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass91 = calculadora0.getClass();
        int[] intArray92 = null;
        float float95 = calculadora0.calcularMedia(intArray92, 0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass96 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass97 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals((float) float43, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 10.0f + "'", float64 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray14 = new int[] {};
        float float17 = calculadora12.calcularMedia(intArray14, 100, 1);
        int[] intArray18 = null;
        float float21 = calculadora12.calcularMedia(intArray18, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        java.lang.Class<?> wildcardClass38 = intArray33.getClass();
        float float41 = calculadora22.calcularMedia(intArray33, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray47 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float50 = calculadora42.calcularMedia(intArray47, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray53 = new int[] {};
        float float56 = calculadora51.calcularMedia(intArray53, 100, 1);
        java.lang.Class<?> wildcardClass57 = intArray53.getClass();
        float float60 = calculadora42.calcularMedia(intArray53, 0, 10);
        float float63 = calculadora22.calcularMedia(intArray53, (int) (short) 0, (int) (short) 1);
        float float66 = calculadora12.calcularMedia(intArray53, (int) (short) 10, (int) (byte) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray72 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float75 = calculadora67.calcularMedia(intArray72, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass77 = calculadora76.getClass();
        int[] intArray78 = new int[] {};
        float float81 = calculadora76.calcularMedia(intArray78, 100, 1);
        java.lang.Class<?> wildcardClass82 = intArray78.getClass();
        float float85 = calculadora67.calcularMedia(intArray78, 0, 10);
        float float88 = calculadora12.calcularMedia(intArray78, (int) (short) 0, 100);
        float float91 = calculadora0.calcularMedia(intArray78, (int) 'a', (int) (short) 0);
        java.lang.Class<?> wildcardClass92 = intArray78.getClass();
        java.lang.Class<?> wildcardClass93 = intArray78.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + (-1.0f) + "'", float17 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + (-1.0f) + "'", float21 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + (-1.0f) + "'", float41 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + 10.0f + "'", float50 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals((float) float60, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + 10.0f + "'", float75 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertEquals((float) float85, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora21.calcularMedia(intArray33, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass55 = calculadora54.getClass();
        int[] intArray56 = new int[] {};
        float float59 = calculadora54.calcularMedia(intArray56, 100, 1);
        java.lang.Class<?> wildcardClass60 = intArray56.getClass();
        float float63 = calculadora45.calcularMedia(intArray56, 0, 10);
        float float66 = calculadora44.calcularMedia(intArray56, (int) (short) -1, (-1));
        float float69 = calculadora21.calcularMedia(intArray56, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass70 = intArray56.getClass();
        float float73 = calculadora0.calcularMedia(intArray56, (int) '4', (int) '#');
        java.lang.Class<?> wildcardClass74 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass77 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        java.lang.Class<?> wildcardClass51 = intArray45.getClass();
        float float54 = calculadora0.calcularMedia(intArray45, (int) '#', (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        float float63 = calculadora0.calcularMedia(intArray57, 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass64 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass65 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass66 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 97.0f + "'", float54 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        java.lang.Class<?> wildcardClass51 = intArray45.getClass();
        float float54 = calculadora0.calcularMedia(intArray45, (int) '#', (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        float float63 = calculadora0.calcularMedia(intArray57, 0, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float72 = calculadora64.calcularMedia(intArray69, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray78 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float81 = calculadora73.calcularMedia(intArray78, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora82 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass83 = calculadora82.getClass();
        int[] intArray84 = new int[] {};
        float float87 = calculadora82.calcularMedia(intArray84, 100, 1);
        java.lang.Class<?> wildcardClass88 = intArray84.getClass();
        float float91 = calculadora73.calcularMedia(intArray84, 0, 10);
        float float94 = calculadora64.calcularMedia(intArray84, 10, (int) (short) 0);
        float float97 = calculadora0.calcularMedia(intArray84, (int) (short) 0, (int) 'a');
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass99 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 97.0f + "'", float54 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 0.0f + "'", float72 == 0.0f);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + 10.0f + "'", float81 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertEquals((float) float91, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertEquals((float) float97, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass31 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray34 = new int[] {};
        float float37 = calculadora32.calcularMedia(intArray34, 100, 1);
        java.lang.Class<?> wildcardClass38 = intArray34.getClass();
        java.lang.Class<?> wildcardClass39 = intArray34.getClass();
        float float42 = calculadora0.calcularMedia(intArray34, (int) (short) -1, (int) (short) 1);
        java.lang.Class<?> wildcardClass43 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass44 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray13 = new int[] {};
        float float16 = calculadora11.calcularMedia(intArray13, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        int[] intArray19 = new int[] {};
        float float22 = calculadora17.calcularMedia(intArray19, 100, 1);
        java.lang.Class<?> wildcardClass23 = intArray19.getClass();
        float float26 = calculadora11.calcularMedia(intArray19, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        int[] intArray32 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float35 = calculadora27.calcularMedia(intArray32, 0, (int) (short) 1);
        float float38 = calculadora11.calcularMedia(intArray32, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray44 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float47 = calculadora39.calcularMedia(intArray44, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        float float57 = calculadora39.calcularMedia(intArray50, 0, 10);
        java.lang.Class<?> wildcardClass58 = intArray50.getClass();
        float float61 = calculadora11.calcularMedia(intArray50, 100, (int) '4');
        java.lang.Class<?> wildcardClass62 = intArray50.getClass();
        float float65 = calculadora0.calcularMedia(intArray50, 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass66 = intArray50.getClass();
        java.lang.Class<?> wildcardClass67 = intArray50.getClass();
        java.lang.Class<?> wildcardClass68 = intArray50.getClass();
        java.lang.Class<?> wildcardClass69 = intArray50.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals((float) float26, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + 0.0f + "'", float35 == 0.0f);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 55.0f + "'", float38 == 55.0f);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 10.0f + "'", float47 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals((float) float57, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray26 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float29 = calculadora21.calcularMedia(intArray26, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass31 = calculadora30.getClass();
        int[] intArray32 = new int[] {};
        float float35 = calculadora30.calcularMedia(intArray32, 100, 1);
        java.lang.Class<?> wildcardClass36 = intArray32.getClass();
        float float39 = calculadora21.calcularMedia(intArray32, 0, 10);
        float float42 = calculadora20.calcularMedia(intArray32, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float51 = calculadora43.calcularMedia(intArray48, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass52 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray64 = new int[] {};
        float float67 = calculadora62.calcularMedia(intArray64, 100, 1);
        java.lang.Class<?> wildcardClass68 = intArray64.getClass();
        float float71 = calculadora53.calcularMedia(intArray64, 0, 10);
        float float74 = calculadora43.calcularMedia(intArray64, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass75 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray82 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float85 = calculadora77.calcularMedia(intArray82, (int) (byte) 10, (int) '4');
        float float88 = calculadora76.calcularMedia(intArray82, 10, 0);
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        float float92 = calculadora43.calcularMedia(intArray82, (int) (byte) 100, (int) (short) 100);
        float float95 = calculadora20.calcularMedia(intArray82, (int) (short) 1, 1);
        java.lang.Class<?> wildcardClass96 = intArray82.getClass();
        float float99 = calculadora0.calcularMedia(intArray82, (int) (byte) 100, (int) (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 10.0f + "'", float29 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + (-1.0f) + "'", float35 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals((float) float39, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals((float) float71, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + 10.0f + "'", float85 == 10.0f);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + (-1.0f) + "'", float99 == (-1.0f));
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        float float33 = calculadora21.calcularMedia(intArray27, 10, 0);
        float float36 = calculadora0.calcularMedia(intArray27, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        java.lang.Class<?> wildcardClass44 = intArray39.getClass();
        float float47 = calculadora0.calcularMedia(intArray39, 0, (int) '#');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        float float56 = calculadora0.calcularMedia(intArray50, 0, (int) (short) -1);
        java.lang.Class<?> wildcardClass57 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass59 = calculadora58.getClass();
        int[] intArray63 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float66 = calculadora58.calcularMedia(intArray63, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass68 = calculadora67.getClass();
        int[] intArray72 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float75 = calculadora67.calcularMedia(intArray72, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass76 = intArray72.getClass();
        java.lang.Class<?> wildcardClass77 = intArray72.getClass();
        float float80 = calculadora58.calcularMedia(intArray72, (int) (short) -1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass81 = intArray72.getClass();
        float float84 = calculadora0.calcularMedia(intArray72, (int) (short) 100, (int) (short) 0);
        java.lang.Class<?> wildcardClass85 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 0.0f + "'", float66 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + 0.0f + "'", float75 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass14 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass15 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass16 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass17 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass18 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, (int) '#', 100);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray44 = new int[] {};
        float float47 = calculadora42.calcularMedia(intArray44, 100, 1);
        java.lang.Class<?> wildcardClass48 = intArray44.getClass();
        float float51 = calculadora33.calcularMedia(intArray44, 0, 10);
        java.lang.Class<?> wildcardClass52 = calculadora33.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray64 = new int[] {};
        float float67 = calculadora62.calcularMedia(intArray64, 100, 1);
        java.lang.Class<?> wildcardClass68 = intArray64.getClass();
        float float71 = calculadora53.calcularMedia(intArray64, 0, 10);
        float float74 = calculadora33.calcularMedia(intArray64, 0, (int) ' ');
        java.lang.Class<?> wildcardClass75 = calculadora33.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass77 = calculadora76.getClass();
        int[] intArray78 = new int[] {};
        float float81 = calculadora76.calcularMedia(intArray78, 100, 1);
        java.lang.Class<?> wildcardClass82 = intArray78.getClass();
        float float85 = calculadora33.calcularMedia(intArray78, (int) (byte) 100, (int) (short) -1);
        float float88 = calculadora0.calcularMedia(intArray78, (int) ' ', (int) (short) 0);
        java.lang.Class<?> wildcardClass89 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass90 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 100.0f + "'", float28 == 100.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 55.0f + "'", float31 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals((float) float71, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        float float53 = calculadora23.calcularMedia(intArray43, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        float float66 = calculadora54.calcularMedia(intArray60, 10, 0);
        float float69 = calculadora23.calcularMedia(intArray60, (int) (short) 0, 0);
        float float72 = calculadora0.calcularMedia(intArray60, 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray81 = new int[] {};
        float float84 = calculadora79.calcularMedia(intArray81, 100, 1);
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        float float88 = calculadora73.calcularMedia(intArray81, 10, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intArray81.getClass();
        float float92 = calculadora0.calcularMedia(intArray81, (int) (short) 1, 10);
        java.lang.Class<?> wildcardClass93 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertEquals((float) float92, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        java.lang.Class<?> wildcardClass36 = intArray31.getClass();
        float float39 = calculadora20.calcularMedia(intArray31, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora20.calcularMedia(intArray51, (int) (short) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass62 = intArray51.getClass();
        float float65 = calculadora0.calcularMedia(intArray51, (int) (byte) 100, (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass67 = calculadora66.getClass();
        int[] intArray68 = new int[] {};
        float float71 = calculadora66.calcularMedia(intArray68, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass73 = calculadora72.getClass();
        int[] intArray77 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float80 = calculadora72.calcularMedia(intArray77, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass81 = intArray77.getClass();
        float float84 = calculadora66.calcularMedia(intArray77, (int) '#', 100);
        float float87 = calculadora0.calcularMedia(intArray77, (int) '#', 1);
        java.lang.Class<?> wildcardClass88 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass89 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 0.0f + "'", float80 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + 100.0f + "'", float84 == 100.0f);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float54 = calculadora46.calcularMedia(intArray51, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        float float73 = calculadora55.calcularMedia(intArray66, 0, 10);
        float float76 = calculadora46.calcularMedia(intArray66, 10, (int) (short) 0);
        float float79 = calculadora0.calcularMedia(intArray66, (int) (short) -1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass81 = calculadora0.getClass();
        int[] intArray82 = null;
        try {
            float float85 = calculadora0.calcularMedia(intArray82, (int) (short) 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 0.0f + "'", float54 == 0.0f);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora20.calcularMedia(intArray31, 0, 10);
        float float41 = calculadora0.calcularMedia(intArray31, 0, (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        java.lang.Class<?> wildcardClass44 = calculadora42.getClass();
        java.lang.Class<?> wildcardClass45 = calculadora42.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray52 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float55 = calculadora47.calcularMedia(intArray52, (int) (byte) 10, (int) '4');
        float float58 = calculadora46.calcularMedia(intArray52, 10, 0);
        float float61 = calculadora42.calcularMedia(intArray52, 0, 100);
        float float64 = calculadora0.calcularMedia(intArray52, 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass65 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 10.0f + "'", float55 == 10.0f);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 36.0f + "'", float61 == 36.0f);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass26 = calculadora25.getClass();
        int[] intArray27 = new int[] {};
        float float30 = calculadora25.calcularMedia(intArray27, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora25.calcularMedia(intArray33, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float49 = calculadora41.calcularMedia(intArray46, 0, (int) (short) 1);
        float float52 = calculadora25.calcularMedia(intArray46, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass54 = calculadora53.getClass();
        int[] intArray55 = new int[] {};
        float float58 = calculadora53.calcularMedia(intArray55, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass60 = calculadora59.getClass();
        int[] intArray61 = new int[] {};
        float float64 = calculadora59.calcularMedia(intArray61, 100, 1);
        java.lang.Class<?> wildcardClass65 = intArray61.getClass();
        float float68 = calculadora53.calcularMedia(intArray61, 10, (int) 'a');
        float float71 = calculadora25.calcularMedia(intArray61, (int) 'a', (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass73 = calculadora72.getClass();
        int[] intArray77 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float80 = calculadora72.calcularMedia(intArray77, 0, (int) (short) 1);
        float float83 = calculadora25.calcularMedia(intArray77, (int) (short) 100, 100);
        java.lang.Class<?> wildcardClass84 = intArray77.getClass();
        float float87 = calculadora0.calcularMedia(intArray77, (int) (short) 0, (-1));
        java.lang.Class<?> wildcardClass88 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 0.0f + "'", float49 == 0.0f);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 55.0f + "'", float52 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals((float) float68, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 0.0f + "'", float80 == 0.0f);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float54 = calculadora46.calcularMedia(intArray51, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass55 = calculadora46.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray58 = new int[] {};
        float float61 = calculadora56.calcularMedia(intArray58, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float70 = calculadora62.calcularMedia(intArray67, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = intArray67.getClass();
        float float74 = calculadora56.calcularMedia(intArray67, (int) '#', 100);
        float float77 = calculadora46.calcularMedia(intArray67, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass78 = intArray67.getClass();
        float float81 = calculadora0.calcularMedia(intArray67, (int) '#', (int) (short) -1);
        java.lang.Class<?> wildcardClass82 = intArray67.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 0.0f + "'", float54 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 0.0f + "'", float70 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 100.0f + "'", float74 == 100.0f);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + 55.0f + "'", float77 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        float float56 = calculadora44.calcularMedia(intArray50, 10, 0);
        float float59 = calculadora13.calcularMedia(intArray50, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        java.lang.Class<?> wildcardClass70 = intArray65.getClass();
        float float73 = calculadora13.calcularMedia(intArray65, 10, (int) 'a');
        java.lang.Class<?> wildcardClass74 = intArray65.getClass();
        float float77 = calculadora0.calcularMedia(intArray65, (int) (short) -1, 1);
        java.lang.Class<?> wildcardClass78 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass79 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass80 = calculadora0.getClass();
        int[] intArray81 = null;
        float float84 = calculadora0.calcularMedia(intArray81, (int) (byte) 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass85 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 53.5f + "'", float73 == 53.5f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray16 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float19 = calculadora11.calcularMedia(intArray16, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray22 = new int[] {};
        float float25 = calculadora20.calcularMedia(intArray22, 100, 1);
        java.lang.Class<?> wildcardClass26 = intArray22.getClass();
        java.lang.Class<?> wildcardClass27 = intArray22.getClass();
        float float30 = calculadora11.calcularMedia(intArray22, (int) ' ', (int) (byte) -1);
        int[] intArray33 = new int[] { 1, (short) 100 };
        float float36 = calculadora11.calcularMedia(intArray33, (int) (byte) 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora0.calcularMedia(intArray33, (int) (byte) -1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass41 = intArray33.getClass();
        java.lang.Class<?> wildcardClass42 = intArray33.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 10.0f + "'", float19 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + (-1.0f) + "'", float25 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass2 = calculadora1.getClass();
        int[] intArray3 = new int[] {};
        float float6 = calculadora1.calcularMedia(intArray3, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora7 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass8 = calculadora7.getClass();
        int[] intArray9 = new int[] {};
        float float12 = calculadora7.calcularMedia(intArray9, 100, 1);
        java.lang.Class<?> wildcardClass13 = intArray9.getClass();
        float float16 = calculadora1.calcularMedia(intArray9, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        int[] intArray22 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float25 = calculadora17.calcularMedia(intArray22, 0, (int) (short) 1);
        float float28 = calculadora1.calcularMedia(intArray22, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        java.lang.Class<?> wildcardClass48 = intArray40.getClass();
        float float51 = calculadora1.calcularMedia(intArray40, 100, (int) '4');
        float float54 = calculadora0.calcularMedia(intArray40, (int) (short) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass55 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float64 = calculadora56.calcularMedia(intArray61, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray70 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float73 = calculadora65.calcularMedia(intArray70, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass75 = calculadora74.getClass();
        int[] intArray76 = new int[] {};
        float float79 = calculadora74.calcularMedia(intArray76, 100, 1);
        java.lang.Class<?> wildcardClass80 = intArray76.getClass();
        float float83 = calculadora65.calcularMedia(intArray76, 0, 10);
        float float86 = calculadora56.calcularMedia(intArray76, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass87 = intArray76.getClass();
        float float90 = calculadora0.calcularMedia(intArray76, (int) (byte) 0, 0);
        java.lang.Class<?> wildcardClass91 = intArray76.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + (-1.0f) + "'", float6 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals((float) float16, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 0.0f + "'", float25 == 0.0f);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 55.0f + "'", float28 == 55.0f);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 10.0f + "'", float73 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals((float) float83, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        java.lang.Class<?> wildcardClass29 = calculadora10.getClass();
        java.lang.Class<?> wildcardClass30 = calculadora10.getClass();
        java.lang.Class<?> wildcardClass31 = calculadora10.getClass();
        java.lang.Class<?> wildcardClass32 = calculadora10.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora10.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray39 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float42 = calculadora34.calcularMedia(intArray39, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        float float54 = calculadora34.calcularMedia(intArray48, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float63 = calculadora55.calcularMedia(intArray60, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray69 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float72 = calculadora64.calcularMedia(intArray69, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        java.lang.Class<?> wildcardClass79 = intArray75.getClass();
        float float82 = calculadora64.calcularMedia(intArray75, 0, 10);
        float float85 = calculadora55.calcularMedia(intArray75, 10, (int) (short) 0);
        float float88 = calculadora34.calcularMedia(intArray75, (int) (short) 0, (int) 'a');
        float float91 = calculadora10.calcularMedia(intArray75, (int) (short) 10, (int) 'a');
        float float94 = calculadora0.calcularMedia(intArray75, 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass95 = intArray75.getClass();
        java.lang.Class<?> wildcardClass96 = intArray75.getClass();
        java.lang.Class<?> wildcardClass97 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 0.0f + "'", float42 == 0.0f);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 5.5f + "'", float54 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 0.0f + "'", float63 == 0.0f);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 10.0f + "'", float72 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals((float) float82, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float91, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray19 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float22 = calculadora14.calcularMedia(intArray19, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        java.lang.Class<?> wildcardClass29 = intArray25.getClass();
        float float32 = calculadora14.calcularMedia(intArray25, 0, 10);
        java.lang.Class<?> wildcardClass33 = calculadora14.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray45 = new int[] {};
        float float48 = calculadora43.calcularMedia(intArray45, 100, 1);
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        float float52 = calculadora34.calcularMedia(intArray45, 0, 10);
        float float55 = calculadora14.calcularMedia(intArray45, 0, (int) ' ');
        java.lang.Class<?> wildcardClass56 = calculadora14.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass58 = calculadora57.getClass();
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float65 = calculadora57.calcularMedia(intArray62, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        java.lang.Class<?> wildcardClass67 = intArray62.getClass();
        java.lang.Class<?> wildcardClass68 = intArray62.getClass();
        float float71 = calculadora14.calcularMedia(intArray62, 0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass72 = intArray62.getClass();
        float float75 = calculadora0.calcularMedia(intArray62, (int) (short) 0, 100);
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass77 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 10.0f + "'", float22 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals((float) float32, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals((float) float52, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 0.0f + "'", float65 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + 36.666668f + "'", float75 == 36.666668f);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora40.calcularMedia(intArray48, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float64 = calculadora56.calcularMedia(intArray61, 0, (int) (short) 1);
        float float67 = calculadora40.calcularMedia(intArray61, 10, (int) (short) 100);
        float float70 = calculadora0.calcularMedia(intArray61, (int) (byte) -1, (int) (short) 1);
        int[] intArray71 = null;
        float float74 = calculadora0.calcularMedia(intArray71, (int) (short) -1, (int) (short) 100);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 55.0f + "'", float67 == 55.0f);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        java.lang.Class<?> wildcardClass51 = intArray45.getClass();
        float float54 = calculadora0.calcularMedia(intArray45, (int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass55 = intArray45.getClass();
        java.lang.Class<?> wildcardClass56 = intArray45.getClass();
        java.lang.Class<?> wildcardClass57 = intArray45.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 97.0f + "'", float54 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora40.calcularMedia(intArray48, 10, (int) 'a');
        java.lang.Class<?> wildcardClass56 = intArray48.getClass();
        java.lang.Class<?> wildcardClass57 = intArray48.getClass();
        float float60 = calculadora0.calcularMedia(intArray48, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass61 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray67 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float70 = calculadora62.calcularMedia(intArray67, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass71 = intArray67.getClass();
        java.lang.Class<?> wildcardClass72 = intArray67.getClass();
        java.lang.Class<?> wildcardClass73 = intArray67.getClass();
        java.lang.Class<?> wildcardClass74 = intArray67.getClass();
        float float77 = calculadora0.calcularMedia(intArray67, 100, (int) (byte) 0);
        java.lang.Class<?> wildcardClass78 = intArray67.getClass();
        java.lang.Class<?> wildcardClass79 = intArray67.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 10.0f + "'", float70 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        java.lang.Class<?> wildcardClass26 = intArray21.getClass();
        float float29 = calculadora10.calcularMedia(intArray21, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora10.calcularMedia(intArray41, (int) (short) 0, (int) (short) 1);
        float float54 = calculadora0.calcularMedia(intArray41, (int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = intArray41.getClass();
        java.lang.Class<?> wildcardClass56 = intArray41.getClass();
        java.lang.Class<?> wildcardClass57 = intArray41.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora29.calcularMedia(intArray41, (int) (short) -1, (-1));
        float float54 = calculadora0.calcularMedia(intArray41, (int) (short) 100, 100);
        java.lang.Class<?> wildcardClass55 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float64 = calculadora56.calcularMedia(intArray61, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray70 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float73 = calculadora65.calcularMedia(intArray70, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass75 = calculadora74.getClass();
        int[] intArray76 = new int[] {};
        float float79 = calculadora74.calcularMedia(intArray76, 100, 1);
        java.lang.Class<?> wildcardClass80 = intArray76.getClass();
        float float83 = calculadora65.calcularMedia(intArray76, 0, 10);
        float float86 = calculadora56.calcularMedia(intArray76, 10, (int) (short) 0);
        int[] intArray91 = new int[] { 0, 100, (byte) 0, 'a' };
        float float94 = calculadora56.calcularMedia(intArray91, (int) (byte) -1, (int) 'a');
        float float97 = calculadora0.calcularMedia(intArray91, (int) (byte) 10, (int) ' ');
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass99 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 10.0f + "'", float73 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals((float) float83, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertEquals((float) float97, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float32 = calculadora24.calcularMedia(intArray29, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        float float44 = calculadora24.calcularMedia(intArray38, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray59 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float62 = calculadora54.calcularMedia(intArray59, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass64 = calculadora63.getClass();
        int[] intArray65 = new int[] {};
        float float68 = calculadora63.calcularMedia(intArray65, 100, 1);
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        float float72 = calculadora54.calcularMedia(intArray65, 0, 10);
        float float75 = calculadora45.calcularMedia(intArray65, 10, (int) (short) 0);
        float float78 = calculadora24.calcularMedia(intArray65, (int) (short) 0, (int) 'a');
        float float81 = calculadora0.calcularMedia(intArray65, (int) (short) 10, (int) 'a');
        java.lang.Class<?> wildcardClass82 = intArray65.getClass();
        java.lang.Class<?> wildcardClass83 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 0.0f + "'", float32 == 0.0f);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 5.5f + "'", float44 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 10.0f + "'", float62 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals((float) float72, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertEquals((float) float78, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float81, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora37.calcularMedia(intArray48, 0, 10);
        float float58 = calculadora28.calcularMedia(intArray48, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        float float71 = calculadora59.calcularMedia(intArray65, 10, 0);
        float float74 = calculadora28.calcularMedia(intArray65, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass75 = intArray65.getClass();
        float float78 = calculadora9.calcularMedia(intArray65, (int) '4', (int) (short) -1);
        float float81 = calculadora0.calcularMedia(intArray65, (int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass82 = intArray65.getClass();
        java.lang.Class<?> wildcardClass83 = intArray65.getClass();
        java.lang.Class<?> wildcardClass84 = intArray65.getClass();
        java.lang.Class<?> wildcardClass85 = intArray65.getClass();
        java.lang.Class<?> wildcardClass86 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        java.lang.Class<?> wildcardClass21 = intArray16.getClass();
        float float24 = calculadora0.calcularMedia(intArray16, (int) (byte) 1, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass26 = calculadora25.getClass();
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float33 = calculadora25.calcularMedia(intArray30, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray45 = new int[] {};
        float float48 = calculadora43.calcularMedia(intArray45, 100, 1);
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        float float52 = calculadora34.calcularMedia(intArray45, 0, 10);
        float float55 = calculadora25.calcularMedia(intArray45, 10, (int) (short) 0);
        int[] intArray60 = new int[] { 0, 100, (byte) 0, 'a' };
        float float63 = calculadora25.calcularMedia(intArray60, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass64 = intArray60.getClass();
        float float67 = calculadora0.calcularMedia(intArray60, (int) (short) 100, (int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + 0.0f + "'", float33 == 0.0f);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals((float) float52, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        java.lang.Class<?> wildcardClass13 = calculadora11.getClass();
        java.lang.Class<?> wildcardClass14 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray21 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float24 = calculadora16.calcularMedia(intArray21, (int) (byte) 10, (int) '4');
        float float27 = calculadora15.calcularMedia(intArray21, 10, 0);
        float float30 = calculadora11.calcularMedia(intArray21, 0, 100);
        java.lang.Class<?> wildcardClass31 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass34 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass35 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        float float48 = calculadora36.calcularMedia(intArray42, 10, 0);
        float float51 = calculadora32.calcularMedia(intArray42, 0, 100);
        float float54 = calculadora11.calcularMedia(intArray42, (int) (short) 10, (int) (byte) -1);
        float float57 = calculadora0.calcularMedia(intArray42, (int) (byte) 100, (int) '#');
        java.lang.Class<?> wildcardClass58 = intArray42.getClass();
        java.lang.Class<?> wildcardClass59 = intArray42.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 10.0f + "'", float24 == 10.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 36.0f + "'", float30 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 36.0f + "'", float51 == 36.0f);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        java.lang.Class<?> wildcardClass45 = intArray40.getClass();
        float float48 = calculadora29.calcularMedia(intArray40, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass49 = calculadora29.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        float float62 = calculadora50.calcularMedia(intArray56, 10, 0);
        float float65 = calculadora29.calcularMedia(intArray56, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass67 = calculadora66.getClass();
        int[] intArray68 = new int[] {};
        float float71 = calculadora66.calcularMedia(intArray68, 100, 1);
        java.lang.Class<?> wildcardClass72 = intArray68.getClass();
        java.lang.Class<?> wildcardClass73 = intArray68.getClass();
        float float76 = calculadora29.calcularMedia(intArray68, 0, (int) '#');
        float float79 = calculadora23.calcularMedia(intArray68, (int) '#', (int) (byte) 0);
        float float82 = calculadora0.calcularMedia(intArray68, (int) (byte) 0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora84 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray89 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float92 = calculadora84.calcularMedia(intArray89, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass93 = intArray89.getClass();
        java.lang.Class<?> wildcardClass94 = intArray89.getClass();
        float float97 = calculadora0.calcularMedia(intArray89, (int) '4', (int) (byte) 1);
        java.lang.Class<?> wildcardClass98 = intArray89.getClass();
        java.lang.Class<?> wildcardClass99 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertEquals((float) float82, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + 10.0f + "'", float92 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora0.calcularMedia(intArray51, (int) 'a', 10);
        java.lang.Class<?> wildcardClass62 = intArray51.getClass();
        java.lang.Class<?> wildcardClass63 = intArray51.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float28 = calculadora20.calcularMedia(intArray25, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        float float50 = calculadora20.calcularMedia(intArray40, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora51.calcularMedia(intArray57, 10, 0);
        float float66 = calculadora20.calcularMedia(intArray57, (int) (short) 0, 0);
        float float69 = calculadora0.calcularMedia(intArray57, (-1), (int) '4');
        java.lang.Class<?> wildcardClass70 = intArray57.getClass();
        java.lang.Class<?> wildcardClass71 = intArray57.getClass();
        java.lang.Class<?> wildcardClass72 = intArray57.getClass();
        java.lang.Class<?> wildcardClass73 = intArray57.getClass();
        java.lang.Class<?> wildcardClass74 = intArray57.getClass();
        java.lang.Class<?> wildcardClass75 = intArray57.getClass();
        java.lang.Class<?> wildcardClass76 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.0f + "'", float28 == 0.0f);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float39 = calculadora31.calcularMedia(intArray36, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass40 = calculadora31.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora41.calcularMedia(intArray52, (int) '#', 100);
        float float62 = calculadora31.calcularMedia(intArray52, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass63 = intArray52.getClass();
        float float66 = calculadora0.calcularMedia(intArray52, (int) (byte) 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass67 = intArray52.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 0.0f + "'", float39 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 100.0f + "'", float59 == 100.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 55.0f + "'", float62 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) -1, (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        java.lang.Class<?> wildcardClass49 = calculadora47.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray55 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float58 = calculadora50.calcularMedia(intArray55, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass60 = calculadora59.getClass();
        int[] intArray61 = new int[] {};
        float float64 = calculadora59.calcularMedia(intArray61, 100, 1);
        java.lang.Class<?> wildcardClass65 = intArray61.getClass();
        float float68 = calculadora50.calcularMedia(intArray61, 0, 10);
        java.lang.Class<?> wildcardClass69 = calculadora50.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray75 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float78 = calculadora70.calcularMedia(intArray75, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray81 = new int[] {};
        float float84 = calculadora79.calcularMedia(intArray81, 100, 1);
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        float float88 = calculadora70.calcularMedia(intArray81, 0, 10);
        float float91 = calculadora50.calcularMedia(intArray81, 0, (int) ' ');
        float float94 = calculadora47.calcularMedia(intArray81, (int) 'a', (int) (byte) 0);
        float float97 = calculadora0.calcularMedia(intArray81, (int) ' ', 0);
        java.lang.Class<?> wildcardClass98 = intArray81.getClass();
        java.lang.Class<?> wildcardClass99 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 10.0f + "'", float58 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals((float) float68, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + 10.0f + "'", float78 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float91, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        java.lang.Class<?> wildcardClass55 = intArray50.getClass();
        java.lang.Class<?> wildcardClass56 = intArray50.getClass();
        java.lang.Class<?> wildcardClass57 = intArray50.getClass();
        float float60 = calculadora0.calcularMedia(intArray50, (int) (short) 1, 0);
        java.lang.Class<?> wildcardClass61 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass32 = calculadora23.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray40 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float43 = calculadora35.calcularMedia(intArray40, (int) (byte) 10, (int) '4');
        float float46 = calculadora34.calcularMedia(intArray40, 10, 0);
        float float49 = calculadora23.calcularMedia(intArray40, (-1), (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray55 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float58 = calculadora50.calcularMedia(intArray55, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray70 = new int[] {};
        float float73 = calculadora68.calcularMedia(intArray70, 100, 1);
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        float float77 = calculadora59.calcularMedia(intArray70, 0, 10);
        float float80 = calculadora50.calcularMedia(intArray70, 10, (int) (short) 0);
        int[] intArray85 = new int[] { 0, 100, (byte) 0, 'a' };
        float float88 = calculadora50.calcularMedia(intArray85, (int) (byte) -1, (int) 'a');
        float float91 = calculadora23.calcularMedia(intArray85, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass92 = intArray85.getClass();
        float float95 = calculadora0.calcularMedia(intArray85, 10, (-1));
        java.lang.Class<?> wildcardClass96 = intArray85.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 10.0f + "'", float43 == 10.0f);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 0.0f + "'", float58 == 0.0f);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        java.lang.Class<?> wildcardClass37 = intArray26.getClass();
        float float40 = calculadora0.calcularMedia(intArray26, (int) (byte) 1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray46 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float49 = calculadora41.calcularMedia(intArray46, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora41.calcularMedia(intArray52, 0, 10);
        java.lang.Class<?> wildcardClass60 = calculadora41.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray66 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float69 = calculadora61.calcularMedia(intArray66, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass71 = calculadora70.getClass();
        int[] intArray72 = new int[] {};
        float float75 = calculadora70.calcularMedia(intArray72, 100, 1);
        java.lang.Class<?> wildcardClass76 = intArray72.getClass();
        float float79 = calculadora61.calcularMedia(intArray72, 0, 10);
        float float82 = calculadora41.calcularMedia(intArray72, 0, (int) ' ');
        float float85 = calculadora0.calcularMedia(intArray72, (int) '4', 0);
        java.lang.Class<?> wildcardClass86 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 10.0f + "'", float49 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 10.0f + "'", float69 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals((float) float79, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float82, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora2 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass3 = calculadora2.getClass();
        int[] intArray7 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float10 = calculadora2.calcularMedia(intArray7, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass11 = calculadora2.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray14 = new int[] {};
        float float17 = calculadora12.calcularMedia(intArray14, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float26 = calculadora18.calcularMedia(intArray23, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass27 = intArray23.getClass();
        float float30 = calculadora12.calcularMedia(intArray23, (int) '#', 100);
        float float33 = calculadora2.calcularMedia(intArray23, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass34 = calculadora2.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass36 = calculadora35.getClass();
        int[] intArray37 = new int[] {};
        float float40 = calculadora35.calcularMedia(intArray37, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora35.calcularMedia(intArray43, 10, (int) 'a');
        java.lang.Class<?> wildcardClass51 = intArray43.getClass();
        float float54 = calculadora2.calcularMedia(intArray43, (int) (byte) -1, (int) (byte) -1);
        java.lang.Class<?> wildcardClass55 = intArray43.getClass();
        float float58 = calculadora0.calcularMedia(intArray43, (int) (byte) 1, (int) (byte) -1);
        java.lang.Class<?> wildcardClass59 = intArray43.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 0.0f + "'", float10 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + (-1.0f) + "'", float17 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + 0.0f + "'", float26 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 100.0f + "'", float30 == 100.0f);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + 55.0f + "'", float33 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass5 = calculadora4.getClass();
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float12 = calculadora4.calcularMedia(intArray9, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray18 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float21 = calculadora13.calcularMedia(intArray18, (int) (byte) 10, (int) '4');
        float float24 = calculadora4.calcularMedia(intArray18, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass26 = calculadora25.getClass();
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float33 = calculadora25.calcularMedia(intArray30, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray45 = new int[] {};
        float float48 = calculadora43.calcularMedia(intArray45, 100, 1);
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        float float52 = calculadora34.calcularMedia(intArray45, 0, 10);
        float float55 = calculadora25.calcularMedia(intArray45, 10, (int) (short) 0);
        float float58 = calculadora4.calcularMedia(intArray45, (int) (short) 0, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass60 = calculadora59.getClass();
        int[] intArray64 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float67 = calculadora59.calcularMedia(intArray64, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray73 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float76 = calculadora68.calcularMedia(intArray73, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass78 = calculadora77.getClass();
        int[] intArray79 = new int[] {};
        float float82 = calculadora77.calcularMedia(intArray79, 100, 1);
        java.lang.Class<?> wildcardClass83 = intArray79.getClass();
        float float86 = calculadora68.calcularMedia(intArray79, 0, 10);
        float float89 = calculadora59.calcularMedia(intArray79, 10, (int) (short) 0);
        float float92 = calculadora4.calcularMedia(intArray79, (int) '4', (int) (byte) 100);
        java.lang.Class<?> wildcardClass93 = intArray79.getClass();
        float float96 = calculadora0.calcularMedia(intArray79, (int) '#', 10);
        java.lang.Class<?> wildcardClass97 = intArray79.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.0f + "'", float12 == 0.0f);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 10.0f + "'", float21 == 10.0f);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 5.5f + "'", float24 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + 0.0f + "'", float33 == 0.0f);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals((float) float52, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 0.0f + "'", float67 == 0.0f);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 10.0f + "'", float76 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals((float) float86, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertEquals((float) float92, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + (-1.0f) + "'", float96 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora0.calcularMedia(intArray42, (int) (byte) 100, (int) (byte) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray55 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float58 = calculadora50.calcularMedia(intArray55, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass60 = calculadora59.getClass();
        int[] intArray61 = new int[] {};
        float float64 = calculadora59.calcularMedia(intArray61, 100, 1);
        java.lang.Class<?> wildcardClass65 = intArray61.getClass();
        java.lang.Class<?> wildcardClass66 = intArray61.getClass();
        float float69 = calculadora50.calcularMedia(intArray61, (int) ' ', (int) (byte) -1);
        float float72 = calculadora0.calcularMedia(intArray61, 100, (int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 10.0f + "'", float58 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        java.lang.Class<?> wildcardClass36 = intArray31.getClass();
        float float39 = calculadora20.calcularMedia(intArray31, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora20.calcularMedia(intArray51, (int) (short) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass62 = intArray51.getClass();
        float float65 = calculadora0.calcularMedia(intArray51, (int) (byte) 100, (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass67 = calculadora66.getClass();
        int[] intArray68 = new int[] {};
        float float71 = calculadora66.calcularMedia(intArray68, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass73 = calculadora72.getClass();
        int[] intArray77 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float80 = calculadora72.calcularMedia(intArray77, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass81 = intArray77.getClass();
        float float84 = calculadora66.calcularMedia(intArray77, (int) '#', 100);
        float float87 = calculadora0.calcularMedia(intArray77, (int) '#', 1);
        java.lang.Class<?> wildcardClass88 = intArray77.getClass();
        java.lang.Class<?> wildcardClass89 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 0.0f + "'", float80 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + 100.0f + "'", float84 == 100.0f);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass5 = calculadora4.getClass();
        int[] intArray6 = new int[] {};
        float float9 = calculadora4.calcularMedia(intArray6, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora4.calcularMedia(intArray12, 10, (int) 'a');
        java.lang.Class<?> wildcardClass20 = calculadora4.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        int[] intArray29 = new int[] {};
        float float32 = calculadora27.calcularMedia(intArray29, 100, 1);
        java.lang.Class<?> wildcardClass33 = intArray29.getClass();
        float float36 = calculadora21.calcularMedia(intArray29, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray42 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float45 = calculadora37.calcularMedia(intArray42, 0, (int) (short) 1);
        float float48 = calculadora21.calcularMedia(intArray42, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass49 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray55 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float58 = calculadora50.calcularMedia(intArray55, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass60 = calculadora59.getClass();
        int[] intArray61 = new int[] {};
        float float64 = calculadora59.calcularMedia(intArray61, 100, 1);
        java.lang.Class<?> wildcardClass65 = intArray61.getClass();
        float float68 = calculadora50.calcularMedia(intArray61, 0, 10);
        float float71 = calculadora21.calcularMedia(intArray61, (int) (short) -1, 100);
        float float74 = calculadora4.calcularMedia(intArray61, 0, 10);
        float float77 = calculadora0.calcularMedia(intArray61, (int) (short) -1, 1);
        java.lang.Class<?> wildcardClass78 = intArray61.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals((float) float36, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 0.0f + "'", float45 == 0.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 55.0f + "'", float48 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 10.0f + "'", float58 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals((float) float68, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray14 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float17 = calculadora9.calcularMedia(intArray14, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass18 = intArray14.getClass();
        java.lang.Class<?> wildcardClass19 = intArray14.getClass();
        float float22 = calculadora0.calcularMedia(intArray14, (int) (short) -1, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray34 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float37 = calculadora29.calcularMedia(intArray34, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass38 = intArray34.getClass();
        float float41 = calculadora23.calcularMedia(intArray34, (int) '#', 100);
        float float44 = calculadora0.calcularMedia(intArray34, (int) '#', 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 0.0f + "'", float17 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 0.0f + "'", float37 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 100.0f + "'", float41 == 100.0f);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray13 = new int[] {};
        float float16 = calculadora11.calcularMedia(intArray13, 100, 1);
        java.lang.Class<?> wildcardClass17 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray24 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float27 = calculadora19.calcularMedia(intArray24, (int) (byte) 10, (int) '4');
        float float30 = calculadora18.calcularMedia(intArray24, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float39 = calculadora31.calcularMedia(intArray36, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora31.calcularMedia(intArray51, 10, (int) (short) 0);
        float float64 = calculadora18.calcularMedia(intArray51, (int) (short) 0, 10);
        java.lang.Class<?> wildcardClass65 = intArray51.getClass();
        float float68 = calculadora11.calcularMedia(intArray51, (int) (short) 1, (int) (byte) 10);
        float float71 = calculadora0.calcularMedia(intArray51, (int) (short) -1, 1);
        java.lang.Class<?> wildcardClass72 = intArray51.getClass();
        java.lang.Class<?> wildcardClass73 = intArray51.getClass();
        java.lang.Class<?> wildcardClass74 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 10.0f + "'", float27 == 10.0f);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 0.0f + "'", float39 == 0.0f);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertEquals((float) float64, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals((float) float68, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass32 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray44 = new int[] {};
        float float47 = calculadora42.calcularMedia(intArray44, 100, 1);
        java.lang.Class<?> wildcardClass48 = intArray44.getClass();
        float float51 = calculadora33.calcularMedia(intArray44, 0, 10);
        float float54 = calculadora23.calcularMedia(intArray44, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass55 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        float float68 = calculadora56.calcularMedia(intArray62, 10, 0);
        java.lang.Class<?> wildcardClass69 = intArray62.getClass();
        float float72 = calculadora23.calcularMedia(intArray62, (int) (byte) 100, (int) (short) 100);
        float float75 = calculadora0.calcularMedia(intArray62, (int) (short) 1, 1);
        java.lang.Class<?> wildcardClass76 = intArray62.getClass();
        java.lang.Class<?> wildcardClass77 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        int[] intArray21 = null;
        float float24 = calculadora11.calcularMedia(intArray21, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora11.calcularMedia(intArray31, 100, (int) '#');
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray46 = new int[] {};
        float float49 = calculadora44.calcularMedia(intArray46, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora44.calcularMedia(intArray52, 10, (int) 'a');
        java.lang.Class<?> wildcardClass60 = intArray52.getClass();
        float float63 = calculadora0.calcularMedia(intArray52, (int) (byte) -1, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        java.lang.Class<?> wildcardClass71 = intArray66.getClass();
        float float74 = calculadora0.calcularMedia(intArray66, (int) (short) 1, (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass76 = calculadora75.getClass();
        int[] intArray77 = new int[] {};
        float float80 = calculadora75.calcularMedia(intArray77, 100, 1);
        java.lang.Class<?> wildcardClass81 = intArray77.getClass();
        java.lang.Class<?> wildcardClass82 = intArray77.getClass();
        java.lang.Class<?> wildcardClass83 = intArray77.getClass();
        java.lang.Class<?> wildcardClass84 = intArray77.getClass();
        float float87 = calculadora0.calcularMedia(intArray77, (int) (short) 100, 100);
        java.lang.Class<?> wildcardClass88 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora0.calcularMedia(intArray42, (int) (byte) 100, (int) (byte) 10);
        java.lang.Class<?> wildcardClass50 = intArray42.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        java.lang.Class<?> wildcardClass21 = intArray16.getClass();
        float float24 = calculadora0.calcularMedia(intArray16, (int) (byte) 1, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass27 = calculadora26.getClass();
        int[] intArray31 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float34 = calculadora26.calcularMedia(intArray31, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray40 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float43 = calculadora35.calcularMedia(intArray40, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray46 = new int[] {};
        float float49 = calculadora44.calcularMedia(intArray46, 100, 1);
        java.lang.Class<?> wildcardClass50 = intArray46.getClass();
        float float53 = calculadora35.calcularMedia(intArray46, 0, 10);
        float float56 = calculadora26.calcularMedia(intArray46, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        java.lang.Class<?> wildcardClass67 = intArray62.getClass();
        java.lang.Class<?> wildcardClass68 = intArray62.getClass();
        float float71 = calculadora26.calcularMedia(intArray62, (int) (byte) -1, (int) '#');
        java.lang.Class<?> wildcardClass72 = intArray62.getClass();
        float float75 = calculadora0.calcularMedia(intArray62, (int) (short) 0, (int) '#');
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 0.0f + "'", float34 == 0.0f);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 10.0f + "'", float43 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals((float) float53, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + 5.5f + "'", float75 == 5.5f);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        java.lang.Class<?> wildcardClass51 = intArray45.getClass();
        float float54 = calculadora0.calcularMedia(intArray45, (int) '#', (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float63 = calculadora55.calcularMedia(intArray60, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float72 = calculadora64.calcularMedia(intArray69, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        java.lang.Class<?> wildcardClass74 = intArray69.getClass();
        float float77 = calculadora55.calcularMedia(intArray69, (int) (short) -1, (int) (byte) 0);
        float float80 = calculadora0.calcularMedia(intArray69, (int) '4', (int) 'a');
        java.lang.Class<?> wildcardClass81 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 97.0f + "'", float54 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 0.0f + "'", float63 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 0.0f + "'", float72 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertEquals((float) float80, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float27 = calculadora19.calcularMedia(intArray24, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora28.calcularMedia(intArray39, 0, 10);
        float float49 = calculadora19.calcularMedia(intArray39, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        float float62 = calculadora50.calcularMedia(intArray56, 10, 0);
        float float65 = calculadora19.calcularMedia(intArray56, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass66 = intArray56.getClass();
        float float69 = calculadora0.calcularMedia(intArray56, (int) '4', (int) (short) -1);
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass72 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass73 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass74 = calculadora0.getClass();
        int[] intArray78 = new int[] { (-1), '#', (short) 0 };
        float float81 = calculadora0.calcularMedia(intArray78, 0, 10);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + 0.0f + "'", float81 == 0.0f);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        int[] intArray21 = null;
        try {
            float float24 = calculadora0.calcularMedia(intArray21, 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        java.lang.Class<?> wildcardClass37 = intArray26.getClass();
        float float40 = calculadora0.calcularMedia(intArray26, (int) (byte) 1, (-1));
        java.lang.Class<?> wildcardClass41 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass42 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        float float61 = calculadora43.calcularMedia(intArray54, 0, 10);
        java.lang.Class<?> wildcardClass62 = calculadora43.getClass();
        java.lang.Class<?> wildcardClass63 = calculadora43.getClass();
        java.lang.Class<?> wildcardClass64 = calculadora43.getClass();
        java.lang.Class<?> wildcardClass65 = calculadora43.getClass();
        java.lang.Class<?> wildcardClass66 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass68 = calculadora67.getClass();
        java.lang.Class<?> wildcardClass69 = calculadora67.getClass();
        java.lang.Class<?> wildcardClass70 = calculadora67.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray77 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float80 = calculadora72.calcularMedia(intArray77, (int) (byte) 10, (int) '4');
        float float83 = calculadora71.calcularMedia(intArray77, 10, 0);
        float float86 = calculadora67.calcularMedia(intArray77, 0, 100);
        java.lang.Class<?> wildcardClass87 = intArray77.getClass();
        java.lang.Class<?> wildcardClass88 = intArray77.getClass();
        float float91 = calculadora43.calcularMedia(intArray77, 100, (int) (short) -1);
        float float94 = calculadora0.calcularMedia(intArray77, (int) '#', (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 10.0f + "'", float80 == 10.0f);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + 36.0f + "'", float86 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora21.calcularMedia(intArray31, 0, 100);
        int[] intArray41 = null;
        float float44 = calculadora21.calcularMedia(intArray41, (int) '#', (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray51 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float54 = calculadora46.calcularMedia(intArray51, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        java.lang.Class<?> wildcardClass61 = intArray57.getClass();
        float float64 = calculadora46.calcularMedia(intArray57, 0, 10);
        float float67 = calculadora45.calcularMedia(intArray57, (int) (short) -1, (-1));
        float float70 = calculadora21.calcularMedia(intArray57, (int) (byte) -1, (int) (short) 0);
        java.lang.Class<?> wildcardClass71 = intArray57.getClass();
        float float74 = calculadora0.calcularMedia(intArray57, (int) ' ', (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = intArray57.getClass();
        java.lang.Class<?> wildcardClass76 = intArray57.getClass();
        java.lang.Class<?> wildcardClass77 = intArray57.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 36.0f + "'", float40 == 36.0f);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 10.0f + "'", float54 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals((float) float64, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass14 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass15 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray18 = new int[] {};
        float float21 = calculadora16.calcularMedia(intArray18, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass23 = calculadora22.getClass();
        int[] intArray24 = new int[] {};
        float float27 = calculadora22.calcularMedia(intArray24, 100, 1);
        java.lang.Class<?> wildcardClass28 = intArray24.getClass();
        float float31 = calculadora16.calcularMedia(intArray24, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float40 = calculadora32.calcularMedia(intArray37, 0, (int) (short) 1);
        float float43 = calculadora16.calcularMedia(intArray37, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float52 = calculadora44.calcularMedia(intArray49, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        float float64 = calculadora44.calcularMedia(intArray58, (int) (byte) 1, (int) '4');
        float float67 = calculadora16.calcularMedia(intArray58, (int) (byte) 10, (int) (byte) 10);
        float float70 = calculadora0.calcularMedia(intArray58, (int) ' ', (int) '#');
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + (-1.0f) + "'", float21 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals((float) float31, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 0.0f + "'", float40 == 0.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 55.0f + "'", float43 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 0.0f + "'", float52 == 0.0f);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 5.5f + "'", float64 == 5.5f);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora21.calcularMedia(intArray31, 0, 100);
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 10, (int) (byte) -1);
        java.lang.Class<?> wildcardClass44 = calculadora0.getClass();
        int[] intArray45 = null;
        float float48 = calculadora0.calcularMedia(intArray45, (int) (short) -1, (-1));
        java.lang.Class<?> wildcardClass49 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass50 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora51.getClass();
        java.lang.Class<?> wildcardClass54 = calculadora51.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray61 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float64 = calculadora56.calcularMedia(intArray61, (int) (byte) 10, (int) '4');
        float float67 = calculadora55.calcularMedia(intArray61, 10, 0);
        float float70 = calculadora51.calcularMedia(intArray61, 0, 100);
        java.lang.Class<?> wildcardClass71 = calculadora51.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass73 = calculadora72.getClass();
        java.lang.Class<?> wildcardClass74 = calculadora72.getClass();
        java.lang.Class<?> wildcardClass75 = calculadora72.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray82 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float85 = calculadora77.calcularMedia(intArray82, (int) (byte) 10, (int) '4');
        float float88 = calculadora76.calcularMedia(intArray82, 10, 0);
        float float91 = calculadora72.calcularMedia(intArray82, 0, 100);
        float float94 = calculadora51.calcularMedia(intArray82, (int) (short) 10, (int) (byte) -1);
        float float97 = calculadora0.calcularMedia(intArray82, (int) (byte) 1, (int) '4');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 36.0f + "'", float40 == 36.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 10.0f + "'", float64 == 10.0f);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 36.0f + "'", float70 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + 10.0f + "'", float85 == 10.0f);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + 36.0f + "'", float91 == 36.0f);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + 5.5f + "'", float97 == 5.5f);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora21.calcularMedia(intArray31, 0, 100);
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 10, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float52 = calculadora44.calcularMedia(intArray49, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass53 = calculadora44.getClass();
        int[] intArray54 = null;
        float float57 = calculadora44.calcularMedia(intArray54, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        float float70 = calculadora58.calcularMedia(intArray64, 10, 0);
        float float73 = calculadora44.calcularMedia(intArray64, 100, (int) '#');
        float float76 = calculadora0.calcularMedia(intArray64, (int) (byte) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass78 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 36.0f + "'", float40 == 36.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 0.0f + "'", float52 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray14 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float17 = calculadora9.calcularMedia(intArray14, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass18 = intArray14.getClass();
        java.lang.Class<?> wildcardClass19 = intArray14.getClass();
        float float22 = calculadora0.calcularMedia(intArray14, (int) (short) -1, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora23.calcularMedia(intArray31, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray44 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float47 = calculadora39.calcularMedia(intArray44, 0, (int) (short) 1);
        float float50 = calculadora23.calcularMedia(intArray44, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass51 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray63 = new int[] {};
        float float66 = calculadora61.calcularMedia(intArray63, 100, 1);
        java.lang.Class<?> wildcardClass67 = intArray63.getClass();
        float float70 = calculadora52.calcularMedia(intArray63, 0, 10);
        float float73 = calculadora23.calcularMedia(intArray63, (int) (short) -1, 100);
        float float76 = calculadora0.calcularMedia(intArray63, (int) (short) -1, 100);
        java.lang.Class<?> wildcardClass77 = intArray63.getClass();
        java.lang.Class<?> wildcardClass78 = intArray63.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 0.0f + "'", float17 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 0.0f + "'", float47 == 0.0f);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + 55.0f + "'", float50 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        java.lang.Class<?> wildcardClass44 = intArray39.getClass();
        java.lang.Class<?> wildcardClass45 = intArray39.getClass();
        java.lang.Class<?> wildcardClass46 = intArray39.getClass();
        float float49 = calculadora0.calcularMedia(intArray39, (int) 'a', (int) (short) 100);
        java.lang.Class<?> wildcardClass50 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass60 = intArray56.getClass();
        java.lang.Class<?> wildcardClass61 = intArray56.getClass();
        java.lang.Class<?> wildcardClass62 = intArray56.getClass();
        java.lang.Class<?> wildcardClass63 = intArray56.getClass();
        float float66 = calculadora0.calcularMedia(intArray56, 0, (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray72 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float75 = calculadora67.calcularMedia(intArray72, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass77 = calculadora76.getClass();
        int[] intArray78 = new int[] {};
        float float81 = calculadora76.calcularMedia(intArray78, 100, 1);
        java.lang.Class<?> wildcardClass82 = intArray78.getClass();
        java.lang.Class<?> wildcardClass83 = intArray78.getClass();
        float float86 = calculadora67.calcularMedia(intArray78, (int) ' ', (int) (byte) -1);
        int[] intArray89 = new int[] { 1, (short) 100 };
        float float92 = calculadora67.calcularMedia(intArray89, (int) (byte) 100, (int) (short) 100);
        float float95 = calculadora0.calcularMedia(intArray89, (int) (short) 0, (int) (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 97.0f + "'", float49 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 5.5f + "'", float66 == 5.5f);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + 10.0f + "'", float75 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + 50.5f + "'", float95 == 50.5f);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora21.calcularMedia(intArray31, 0, 100);
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 10, (int) (byte) -1);
        java.lang.Class<?> wildcardClass44 = calculadora0.getClass();
        int[] intArray45 = null;
        float float48 = calculadora0.calcularMedia(intArray45, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray55 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float58 = calculadora50.calcularMedia(intArray55, (int) (byte) 10, (int) '4');
        float float61 = calculadora49.calcularMedia(intArray55, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray64 = new int[] {};
        float float67 = calculadora62.calcularMedia(intArray64, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray70 = new int[] {};
        float float73 = calculadora68.calcularMedia(intArray70, 100, 1);
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        float float77 = calculadora62.calcularMedia(intArray70, 10, (int) 'a');
        java.lang.Class<?> wildcardClass78 = intArray70.getClass();
        float float81 = calculadora49.calcularMedia(intArray70, (int) (short) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass82 = intArray70.getClass();
        float float85 = calculadora0.calcularMedia(intArray70, 100, 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 36.0f + "'", float40 == 36.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 10.0f + "'", float58 == 10.0f);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals((float) float81, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float40 = calculadora32.calcularMedia(intArray37, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray46 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float49 = calculadora41.calcularMedia(intArray46, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora41.calcularMedia(intArray52, 0, 10);
        float float62 = calculadora32.calcularMedia(intArray52, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass63 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        java.lang.Class<?> wildcardClass71 = intArray66.getClass();
        float float74 = calculadora32.calcularMedia(intArray66, (int) (short) -1, (int) (short) 1);
        float float77 = calculadora0.calcularMedia(intArray66, (int) (byte) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass78 = intArray66.getClass();
        java.lang.Class<?> wildcardClass79 = intArray66.getClass();
        java.lang.Class<?> wildcardClass80 = intArray66.getClass();
        java.lang.Class<?> wildcardClass81 = intArray66.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 0.0f + "'", float40 == 0.0f);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 10.0f + "'", float49 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        float float23 = calculadora5.calcularMedia(intArray16, 0, 10);
        float float26 = calculadora0.calcularMedia(intArray16, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass27 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora37.calcularMedia(intArray48, 0, 10);
        float float58 = calculadora28.calcularMedia(intArray48, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        float float71 = calculadora59.calcularMedia(intArray65, 10, 0);
        float float74 = calculadora28.calcularMedia(intArray65, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray80 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float83 = calculadora75.calcularMedia(intArray80, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass84 = intArray80.getClass();
        java.lang.Class<?> wildcardClass85 = intArray80.getClass();
        float float88 = calculadora28.calcularMedia(intArray80, 10, (int) 'a');
        float float91 = calculadora0.calcularMedia(intArray80, (int) ' ', (int) (byte) 100);
        java.lang.Class<?> wildcardClass92 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass93 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals((float) float23, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 10.0f + "'", float83 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + 53.5f + "'", float88 == 53.5f);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + 97.0f + "'", float91 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray32 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float35 = calculadora27.calcularMedia(intArray32, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass37 = calculadora36.getClass();
        int[] intArray38 = new int[] {};
        float float41 = calculadora36.calcularMedia(intArray38, 100, 1);
        java.lang.Class<?> wildcardClass42 = intArray38.getClass();
        java.lang.Class<?> wildcardClass43 = intArray38.getClass();
        float float46 = calculadora27.calcularMedia(intArray38, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass47 = calculadora27.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        float float60 = calculadora48.calcularMedia(intArray54, 10, 0);
        float float63 = calculadora27.calcularMedia(intArray54, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        java.lang.Class<?> wildcardClass71 = intArray66.getClass();
        float float74 = calculadora27.calcularMedia(intArray66, 0, (int) '#');
        float float77 = calculadora21.calcularMedia(intArray66, (int) '#', (int) (byte) 0);
        float float80 = calculadora0.calcularMedia(intArray66, (int) (short) -1, (int) (short) -1);
        java.lang.Class<?> wildcardClass81 = intArray66.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + 10.0f + "'", float35 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + (-1.0f) + "'", float41 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        java.lang.Class<?> wildcardClass40 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray16 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float19 = calculadora11.calcularMedia(intArray16, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray22 = new int[] {};
        float float25 = calculadora20.calcularMedia(intArray22, 100, 1);
        java.lang.Class<?> wildcardClass26 = intArray22.getClass();
        java.lang.Class<?> wildcardClass27 = intArray22.getClass();
        float float30 = calculadora11.calcularMedia(intArray22, (int) ' ', (int) (byte) -1);
        int[] intArray33 = new int[] { 1, (short) 100 };
        float float36 = calculadora11.calcularMedia(intArray33, (int) (byte) 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora0.calcularMedia(intArray33, (int) (byte) -1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass41 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 10.0f + "'", float19 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + (-1.0f) + "'", float25 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        int[] intArray22 = new int[] { 1, (short) 100 };
        float float25 = calculadora0.calcularMedia(intArray22, (int) (byte) 100, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray32 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float35 = calculadora27.calcularMedia(intArray32, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass37 = calculadora36.getClass();
        int[] intArray38 = new int[] {};
        float float41 = calculadora36.calcularMedia(intArray38, 100, 1);
        java.lang.Class<?> wildcardClass42 = intArray38.getClass();
        float float45 = calculadora27.calcularMedia(intArray38, 0, 10);
        float float48 = calculadora26.calcularMedia(intArray38, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray55 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float58 = calculadora50.calcularMedia(intArray55, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass60 = calculadora59.getClass();
        int[] intArray61 = new int[] {};
        float float64 = calculadora59.calcularMedia(intArray61, 100, 1);
        java.lang.Class<?> wildcardClass65 = intArray61.getClass();
        float float68 = calculadora50.calcularMedia(intArray61, 0, 10);
        float float71 = calculadora49.calcularMedia(intArray61, (int) (short) -1, (-1));
        float float74 = calculadora26.calcularMedia(intArray61, (int) (byte) -1, (int) 'a');
        int[] intArray75 = null;
        float float78 = calculadora26.calcularMedia(intArray75, (-1), (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray84 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float87 = calculadora79.calcularMedia(intArray84, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass88 = intArray84.getClass();
        float float91 = calculadora26.calcularMedia(intArray84, (int) (short) 1, (-1));
        float float94 = calculadora0.calcularMedia(intArray84, 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass95 = intArray84.getClass();
        java.lang.Class<?> wildcardClass96 = intArray84.getClass();
        java.lang.Class<?> wildcardClass97 = intArray84.getClass();
        java.lang.Class<?> wildcardClass98 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + (-1.0f) + "'", float25 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + 10.0f + "'", float35 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + (-1.0f) + "'", float41 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals((float) float45, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 10.0f + "'", float58 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals((float) float68, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + 10.0f + "'", float87 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + 5.5f + "'", float94 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray17 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float20 = calculadora12.calcularMedia(intArray17, (int) (byte) 10, (int) '4');
        float float23 = calculadora11.calcularMedia(intArray17, 10, 0);
        java.lang.Class<?> wildcardClass24 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass36 = calculadora35.getClass();
        int[] intArray37 = new int[] {};
        float float40 = calculadora35.calcularMedia(intArray37, 100, 1);
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora26.calcularMedia(intArray37, 0, 10);
        float float47 = calculadora25.calcularMedia(intArray37, (int) (short) -1, (-1));
        float float50 = calculadora11.calcularMedia(intArray37, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass60 = intArray56.getClass();
        java.lang.Class<?> wildcardClass61 = intArray56.getClass();
        java.lang.Class<?> wildcardClass62 = intArray56.getClass();
        float float65 = calculadora11.calcularMedia(intArray56, (int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass66 = intArray56.getClass();
        float float69 = calculadora0.calcularMedia(intArray56, (int) (short) 10, (int) (short) 1);
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 10.0f + "'", float20 == 10.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals((float) float44, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 97.0f + "'", float65 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass30 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray36 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float39 = calculadora31.calcularMedia(intArray36, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora31.calcularMedia(intArray42, 0, 10);
        float float52 = calculadora21.calcularMedia(intArray42, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass62 = intArray58.getClass();
        float float65 = calculadora21.calcularMedia(intArray58, (int) '#', 10);
        float float68 = calculadora0.calcularMedia(intArray58, (int) (short) 100, 1);
        java.lang.Class<?> wildcardClass69 = intArray58.getClass();
        java.lang.Class<?> wildcardClass70 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 10.0f + "'", float39 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals((float) float49, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora24.getClass();
        java.lang.Class<?> wildcardClass27 = calculadora24.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        float float40 = calculadora28.calcularMedia(intArray34, 10, 0);
        float float43 = calculadora24.calcularMedia(intArray34, 0, 100);
        java.lang.Class<?> wildcardClass44 = intArray34.getClass();
        java.lang.Class<?> wildcardClass45 = intArray34.getClass();
        float float48 = calculadora0.calcularMedia(intArray34, 100, (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray54 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float57 = calculadora49.calcularMedia(intArray54, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass58 = calculadora49.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray70 = new int[] {};
        float float73 = calculadora68.calcularMedia(intArray70, 100, 1);
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        float float77 = calculadora59.calcularMedia(intArray70, 0, 10);
        float float80 = calculadora49.calcularMedia(intArray70, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora81 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray86 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float89 = calculadora81.calcularMedia(intArray86, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass90 = intArray86.getClass();
        float float93 = calculadora49.calcularMedia(intArray86, (int) '#', 10);
        java.lang.Class<?> wildcardClass94 = intArray86.getClass();
        java.lang.Class<?> wildcardClass95 = intArray86.getClass();
        float float98 = calculadora0.calcularMedia(intArray86, (int) ' ', (int) '#');
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 36.0f + "'", float43 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 0.0f + "'", float57 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + 10.0f + "'", float89 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertEquals((float) float98, Float.NaN, 0);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray11 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float14 = calculadora6.calcularMedia(intArray11, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, (int) '#', 100);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        float float31 = calculadora0.calcularMedia(intArray25, (int) '4', 100);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float41 = calculadora33.calcularMedia(intArray38, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass42 = calculadora33.getClass();
        java.lang.Class<?> wildcardClass43 = calculadora33.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float52 = calculadora44.calcularMedia(intArray49, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass53 = calculadora44.getClass();
        int[] intArray54 = null;
        float float57 = calculadora44.calcularMedia(intArray54, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        float float70 = calculadora58.calcularMedia(intArray64, 10, 0);
        float float73 = calculadora44.calcularMedia(intArray64, 100, (int) '#');
        float float76 = calculadora33.calcularMedia(intArray64, (int) (short) 100, (int) (short) 0);
        java.lang.Class<?> wildcardClass77 = intArray64.getClass();
        java.lang.Class<?> wildcardClass78 = intArray64.getClass();
        java.lang.Class<?> wildcardClass79 = intArray64.getClass();
        float float82 = calculadora0.calcularMedia(intArray64, 0, (int) '4');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 100.0f + "'", float18 == 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 97.0f + "'", float31 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 0.0f + "'", float41 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 0.0f + "'", float52 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + 5.5f + "'", float82 == 5.5f);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        int[] intArray21 = null;
        float float24 = calculadora11.calcularMedia(intArray21, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora11.calcularMedia(intArray31, 100, (int) '#');
        float float43 = calculadora0.calcularMedia(intArray31, (-1), (int) (short) 100);
        java.lang.Class<?> wildcardClass44 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass54 = calculadora45.getClass();
        java.lang.Class<?> wildcardClass55 = calculadora45.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray61 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float64 = calculadora56.calcularMedia(intArray61, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass66 = calculadora65.getClass();
        int[] intArray67 = new int[] {};
        float float70 = calculadora65.calcularMedia(intArray67, 100, 1);
        java.lang.Class<?> wildcardClass71 = intArray67.getClass();
        java.lang.Class<?> wildcardClass72 = intArray67.getClass();
        float float75 = calculadora56.calcularMedia(intArray67, (int) ' ', (int) (byte) -1);
        int[] intArray78 = new int[] { 1, (short) 100 };
        float float81 = calculadora56.calcularMedia(intArray78, (int) (byte) 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass82 = intArray78.getClass();
        float float85 = calculadora45.calcularMedia(intArray78, (int) (byte) -1, (int) (byte) 0);
        float float88 = calculadora0.calcularMedia(intArray78, (int) (byte) 100, (int) (short) -1);
        java.lang.Class<?> wildcardClass89 = intArray78.getClass();
        java.lang.Class<?> wildcardClass90 = intArray78.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 10.0f + "'", float64 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass31 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass34 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass35 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass36 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        java.lang.Class<?> wildcardClass39 = calculadora37.getClass();
        java.lang.Class<?> wildcardClass40 = calculadora37.getClass();
        java.lang.Class<?> wildcardClass41 = calculadora37.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray47 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float50 = calculadora42.calcularMedia(intArray47, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray53 = new int[] {};
        float float56 = calculadora51.calcularMedia(intArray53, 100, 1);
        java.lang.Class<?> wildcardClass57 = intArray53.getClass();
        float float60 = calculadora42.calcularMedia(intArray53, 0, 10);
        float float63 = calculadora37.calcularMedia(intArray53, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass64 = intArray53.getClass();
        float float67 = calculadora0.calcularMedia(intArray53, 1, (int) (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + 10.0f + "'", float50 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals((float) float60, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass5 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray14 = new int[] {};
        float float17 = calculadora12.calcularMedia(intArray14, 100, 1);
        java.lang.Class<?> wildcardClass18 = intArray14.getClass();
        float float21 = calculadora6.calcularMedia(intArray14, 10, (int) 'a');
        float float24 = calculadora0.calcularMedia(intArray14, (int) (byte) 0, (int) 'a');
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray32 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float35 = calculadora27.calcularMedia(intArray32, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass37 = calculadora36.getClass();
        int[] intArray38 = new int[] {};
        float float41 = calculadora36.calcularMedia(intArray38, 100, 1);
        java.lang.Class<?> wildcardClass42 = intArray38.getClass();
        java.lang.Class<?> wildcardClass43 = intArray38.getClass();
        float float46 = calculadora27.calcularMedia(intArray38, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass47 = calculadora27.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass55 = calculadora54.getClass();
        int[] intArray56 = new int[] {};
        float float59 = calculadora54.calcularMedia(intArray56, 100, 1);
        java.lang.Class<?> wildcardClass60 = intArray56.getClass();
        float float63 = calculadora48.calcularMedia(intArray56, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float72 = calculadora64.calcularMedia(intArray69, 0, (int) (short) 1);
        float float75 = calculadora48.calcularMedia(intArray69, 10, (int) (short) 100);
        float float78 = calculadora27.calcularMedia(intArray69, (int) ' ', (int) (byte) 10);
        java.lang.Class<?> wildcardClass79 = intArray69.getClass();
        float float82 = calculadora0.calcularMedia(intArray69, (int) 'a', 1);
        java.lang.Class<?> wildcardClass83 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + (-1.0f) + "'", float17 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals((float) float21, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float24, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + 10.0f + "'", float35 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + (-1.0f) + "'", float41 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 0.0f + "'", float72 == 0.0f);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + 55.0f + "'", float75 == 55.0f);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray29 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float32 = calculadora24.calcularMedia(intArray29, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora24.calcularMedia(intArray35, 0, 10);
        float float45 = calculadora23.calcularMedia(intArray35, (int) (short) -1, (-1));
        float float48 = calculadora0.calcularMedia(intArray35, (int) (byte) -1, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        java.lang.Class<?> wildcardClass51 = calculadora49.getClass();
        java.lang.Class<?> wildcardClass52 = calculadora49.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora49.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray59 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float62 = calculadora54.calcularMedia(intArray59, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass64 = calculadora63.getClass();
        int[] intArray65 = new int[] {};
        float float68 = calculadora63.calcularMedia(intArray65, 100, 1);
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        float float72 = calculadora54.calcularMedia(intArray65, 0, 10);
        float float75 = calculadora49.calcularMedia(intArray65, (int) 'a', (int) ' ');
        float float78 = calculadora0.calcularMedia(intArray65, (int) (short) 10, 100);
        java.lang.Class<?> wildcardClass79 = intArray65.getClass();
        java.lang.Class<?> wildcardClass80 = intArray65.getClass();
        java.lang.Class<?> wildcardClass81 = intArray65.getClass();
        java.lang.Class<?> wildcardClass82 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 10.0f + "'", float32 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals((float) float42, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 10.0f + "'", float62 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals((float) float72, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertEquals((float) float78, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass32 = calculadora23.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray39 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float42 = calculadora34.calcularMedia(intArray39, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass43 = calculadora34.getClass();
        int[] intArray44 = null;
        float float47 = calculadora34.calcularMedia(intArray44, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        float float60 = calculadora48.calcularMedia(intArray54, 10, 0);
        float float63 = calculadora34.calcularMedia(intArray54, 100, (int) '#');
        float float66 = calculadora23.calcularMedia(intArray54, (-1), (int) (short) 100);
        float float69 = calculadora0.calcularMedia(intArray54, (int) (short) 0, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray76 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float79 = calculadora71.calcularMedia(intArray76, (int) (byte) 10, (int) '4');
        float float82 = calculadora70.calcularMedia(intArray76, 10, 0);
        java.lang.Class<?> wildcardClass83 = intArray76.getClass();
        float float86 = calculadora0.calcularMedia(intArray76, (int) (byte) 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass87 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass88 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 0.0f + "'", float42 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 10.0f + "'", float79 == 10.0f);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass16 = calculadora15.getClass();
        int[] intArray17 = new int[] {};
        float float20 = calculadora15.calcularMedia(intArray17, 100, 1);
        java.lang.Class<?> wildcardClass21 = intArray17.getClass();
        float float24 = calculadora9.calcularMedia(intArray17, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass26 = calculadora25.getClass();
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float33 = calculadora25.calcularMedia(intArray30, 0, (int) (short) 1);
        float float36 = calculadora9.calcularMedia(intArray30, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        java.lang.Class<?> wildcardClass44 = intArray39.getClass();
        float float47 = calculadora9.calcularMedia(intArray39, (int) (byte) -1, (int) (byte) -1);
        float float50 = calculadora0.calcularMedia(intArray39, (int) (short) 1, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float59 = calculadora51.calcularMedia(intArray56, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass60 = calculadora51.getClass();
        java.lang.Class<?> wildcardClass61 = calculadora51.getClass();
        java.lang.Class<?> wildcardClass62 = calculadora51.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray69 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float72 = calculadora64.calcularMedia(intArray69, (int) (byte) 10, (int) '4');
        float float75 = calculadora63.calcularMedia(intArray69, 10, 0);
        java.lang.Class<?> wildcardClass76 = intArray69.getClass();
        java.lang.Class<?> wildcardClass77 = intArray69.getClass();
        float float80 = calculadora51.calcularMedia(intArray69, 1, (int) (short) 0);
        java.lang.Class<?> wildcardClass81 = intArray69.getClass();
        java.lang.Class<?> wildcardClass82 = intArray69.getClass();
        float float85 = calculadora0.calcularMedia(intArray69, (int) (short) 10, (int) (short) 1);
        java.lang.Class<?> wildcardClass86 = intArray69.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + (-1.0f) + "'", float20 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals((float) float24, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + 0.0f + "'", float33 == 0.0f);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 55.0f + "'", float36 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 0.0f + "'", float59 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 10.0f + "'", float72 == 10.0f);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float18 = calculadora10.calcularMedia(intArray15, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass19 = calculadora10.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora10.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass30 = calculadora21.getClass();
        int[] intArray31 = null;
        float float34 = calculadora21.calcularMedia(intArray31, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray41 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float44 = calculadora36.calcularMedia(intArray41, (int) (byte) 10, (int) '4');
        float float47 = calculadora35.calcularMedia(intArray41, 10, 0);
        float float50 = calculadora21.calcularMedia(intArray41, 100, (int) '#');
        float float53 = calculadora10.calcularMedia(intArray41, (int) (short) 100, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass55 = calculadora54.getClass();
        int[] intArray56 = new int[] {};
        float float59 = calculadora54.calcularMedia(intArray56, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass61 = calculadora60.getClass();
        int[] intArray62 = new int[] {};
        float float65 = calculadora60.calcularMedia(intArray62, 100, 1);
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        float float69 = calculadora54.calcularMedia(intArray62, 10, (int) 'a');
        java.lang.Class<?> wildcardClass70 = intArray62.getClass();
        float float73 = calculadora10.calcularMedia(intArray62, (int) (byte) -1, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass75 = calculadora74.getClass();
        int[] intArray76 = new int[] {};
        float float79 = calculadora74.calcularMedia(intArray76, 100, 1);
        java.lang.Class<?> wildcardClass80 = intArray76.getClass();
        java.lang.Class<?> wildcardClass81 = intArray76.getClass();
        float float84 = calculadora10.calcularMedia(intArray76, (int) (short) 1, (int) ' ');
        java.lang.Class<?> wildcardClass85 = intArray76.getClass();
        java.lang.Class<?> wildcardClass86 = intArray76.getClass();
        float float89 = calculadora0.calcularMedia(intArray76, (int) (short) 100, 1);
        java.lang.Class<?> wildcardClass90 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass91 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 0.0f + "'", float18 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 10.0f + "'", float44 == 10.0f);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals((float) float69, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertEquals((float) float84, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray29 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float32 = calculadora24.calcularMedia(intArray29, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora24.calcularMedia(intArray35, 0, 10);
        float float45 = calculadora23.calcularMedia(intArray35, (int) (short) -1, (-1));
        float float48 = calculadora0.calcularMedia(intArray35, (int) (byte) -1, (int) 'a');
        int[] intArray49 = null;
        float float52 = calculadora0.calcularMedia(intArray49, (int) (short) 100, (int) (byte) -1);
        int[] intArray58 = new int[] { '#', (byte) 100, 100, (byte) 0, (byte) 0 };
        float float61 = calculadora0.calcularMedia(intArray58, 1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass63 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 10.0f + "'", float32 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals((float) float42, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray26 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float29 = calculadora21.calcularMedia(intArray26, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass31 = calculadora30.getClass();
        int[] intArray32 = new int[] {};
        float float35 = calculadora30.calcularMedia(intArray32, 100, 1);
        java.lang.Class<?> wildcardClass36 = intArray32.getClass();
        float float39 = calculadora21.calcularMedia(intArray32, 0, 10);
        java.lang.Class<?> wildcardClass40 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray46 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float49 = calculadora41.calcularMedia(intArray46, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora41.calcularMedia(intArray52, 0, 10);
        float float62 = calculadora21.calcularMedia(intArray52, 0, (int) ' ');
        java.lang.Class<?> wildcardClass63 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float72 = calculadora64.calcularMedia(intArray69, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        java.lang.Class<?> wildcardClass74 = intArray69.getClass();
        java.lang.Class<?> wildcardClass75 = intArray69.getClass();
        float float78 = calculadora21.calcularMedia(intArray69, 0, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray84 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float87 = calculadora79.calcularMedia(intArray84, 0, (int) (short) 1);
        float float90 = calculadora21.calcularMedia(intArray84, (int) (byte) 100, (int) (byte) 0);
        float float93 = calculadora0.calcularMedia(intArray84, (int) (byte) 10, (int) 'a');
        java.lang.Class<?> wildcardClass94 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 10.0f + "'", float29 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + (-1.0f) + "'", float35 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals((float) float39, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 10.0f + "'", float49 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float62, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 0.0f + "'", float72 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + 0.0f + "'", float87 == 0.0f);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + 10.0f + "'", float93 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        float float23 = calculadora5.calcularMedia(intArray16, 0, 10);
        float float26 = calculadora0.calcularMedia(intArray16, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass27 = calculadora0.getClass();
        int[] intArray28 = null;
        float float31 = calculadora0.calcularMedia(intArray28, (int) (byte) 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray44 = new int[] {};
        float float47 = calculadora42.calcularMedia(intArray44, 100, 1);
        java.lang.Class<?> wildcardClass48 = intArray44.getClass();
        java.lang.Class<?> wildcardClass49 = intArray44.getClass();
        float float52 = calculadora33.calcularMedia(intArray44, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass53 = calculadora33.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        float float66 = calculadora54.calcularMedia(intArray60, 10, 0);
        float float69 = calculadora33.calcularMedia(intArray60, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass71 = calculadora70.getClass();
        int[] intArray72 = new int[] {};
        float float75 = calculadora70.calcularMedia(intArray72, 100, 1);
        java.lang.Class<?> wildcardClass76 = intArray72.getClass();
        java.lang.Class<?> wildcardClass77 = intArray72.getClass();
        float float80 = calculadora33.calcularMedia(intArray72, 0, (int) '#');
        java.lang.Class<?> wildcardClass81 = intArray72.getClass();
        float float84 = calculadora0.calcularMedia(intArray72, (int) (short) 100, 10);
        java.lang.Class<?> wildcardClass85 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals((float) float23, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals((float) float80, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float22 = calculadora14.calcularMedia(intArray19, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray28 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float31 = calculadora23.calcularMedia(intArray28, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray34 = new int[] {};
        float float37 = calculadora32.calcularMedia(intArray34, 100, 1);
        java.lang.Class<?> wildcardClass38 = intArray34.getClass();
        float float41 = calculadora23.calcularMedia(intArray34, 0, 10);
        float float44 = calculadora14.calcularMedia(intArray34, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray51 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float54 = calculadora46.calcularMedia(intArray51, (int) (byte) 10, (int) '4');
        float float57 = calculadora45.calcularMedia(intArray51, 10, 0);
        float float60 = calculadora14.calcularMedia(intArray51, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass61 = intArray51.getClass();
        float float64 = calculadora0.calcularMedia(intArray51, (int) (short) 10, (int) (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 0.0f + "'", float22 == 0.0f);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 10.0f + "'", float31 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 10.0f + "'", float54 == 10.0f);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray36 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float39 = calculadora31.calcularMedia(intArray36, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora31.calcularMedia(intArray42, 0, 10);
        java.lang.Class<?> wildcardClass50 = calculadora31.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass61 = calculadora60.getClass();
        int[] intArray62 = new int[] {};
        float float65 = calculadora60.calcularMedia(intArray62, 100, 1);
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        float float69 = calculadora51.calcularMedia(intArray62, 0, 10);
        float float72 = calculadora31.calcularMedia(intArray62, 0, (int) ' ');
        java.lang.Class<?> wildcardClass73 = calculadora31.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass75 = calculadora74.getClass();
        int[] intArray79 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float82 = calculadora74.calcularMedia(intArray79, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass83 = intArray79.getClass();
        java.lang.Class<?> wildcardClass84 = intArray79.getClass();
        java.lang.Class<?> wildcardClass85 = intArray79.getClass();
        float float88 = calculadora31.calcularMedia(intArray79, 0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass89 = intArray79.getClass();
        float float92 = calculadora0.calcularMedia(intArray79, (int) ' ', (int) (short) 1);
        java.lang.Class<?> wildcardClass93 = intArray79.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 10.0f + "'", float39 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals((float) float49, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals((float) float69, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float72, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + 0.0f + "'", float82 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass31 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass34 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass35 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass36 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora37.calcularMedia(intArray48, 0, 10);
        float float58 = calculadora32.calcularMedia(intArray48, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass59 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass60 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray66 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float69 = calculadora61.calcularMedia(intArray66, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray75 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float78 = calculadora70.calcularMedia(intArray75, (int) (byte) 10, (int) '4');
        float float81 = calculadora61.calcularMedia(intArray75, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora82 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray87 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float90 = calculadora82.calcularMedia(intArray87, (int) (byte) 10, (int) '4');
        float float93 = calculadora61.calcularMedia(intArray87, 1, 0);
        float float96 = calculadora32.calcularMedia(intArray87, 0, 10);
        float float99 = calculadora0.calcularMedia(intArray87, (int) ' ', 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 0.0f + "'", float69 == 0.0f);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + 10.0f + "'", float78 == 10.0f);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + 5.5f + "'", float81 == 5.5f);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + 10.0f + "'", float90 == 10.0f);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + 5.5f + "'", float96 == 5.5f);
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + (-1.0f) + "'", float99 == (-1.0f));
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        float float61 = calculadora46.calcularMedia(intArray54, 10, (int) 'a');
        java.lang.Class<?> wildcardClass62 = intArray54.getClass();
        java.lang.Class<?> wildcardClass63 = intArray54.getClass();
        float float66 = calculadora0.calcularMedia(intArray54, 100, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass68 = calculadora67.getClass();
        int[] intArray69 = new int[] {};
        float float72 = calculadora67.calcularMedia(intArray69, 100, 1);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        float float76 = calculadora0.calcularMedia(intArray69, 0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        int[] intArray16 = null;
        float float19 = calculadora0.calcularMedia(intArray16, 1, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray22 = new int[] {};
        float float25 = calculadora20.calcularMedia(intArray22, 100, 1);
        int[] intArray26 = null;
        float float29 = calculadora20.calcularMedia(intArray26, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass30 = calculadora20.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora31.calcularMedia(intArray39, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        float float58 = calculadora31.calcularMedia(intArray52, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray70 = new int[] {};
        float float73 = calculadora68.calcularMedia(intArray70, 100, 1);
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        float float77 = calculadora59.calcularMedia(intArray70, 0, 10);
        java.lang.Class<?> wildcardClass78 = intArray70.getClass();
        float float81 = calculadora31.calcularMedia(intArray70, 100, (int) '4');
        java.lang.Class<?> wildcardClass82 = intArray70.getClass();
        float float85 = calculadora20.calcularMedia(intArray70, 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass86 = calculadora20.getClass();
        int[] intArray88 = new int[] { (short) 10 };
        float float91 = calculadora20.calcularMedia(intArray88, (int) ' ', (int) ' ');
        float float94 = calculadora0.calcularMedia(intArray88, (int) 'a', 100);
        java.lang.Class<?> wildcardClass95 = intArray88.getClass();
        java.lang.Class<?> wildcardClass96 = intArray88.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + (-1.0f) + "'", float25 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 55.0f + "'", float58 == 55.0f);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertEquals((float) float94, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, (int) '#', 100);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora33.calcularMedia(intArray41, 10, (int) 'a');
        java.lang.Class<?> wildcardClass49 = intArray41.getClass();
        float float52 = calculadora0.calcularMedia(intArray41, (int) (byte) -1, (int) (byte) -1);
        int[] intArray53 = null;
        float float56 = calculadora0.calcularMedia(intArray53, (int) (byte) 100, (int) (short) -1);
        java.lang.Class<?> wildcardClass57 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 100.0f + "'", float28 == 100.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 55.0f + "'", float31 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        java.lang.Class<?> wildcardClass55 = intArray50.getClass();
        java.lang.Class<?> wildcardClass56 = intArray50.getClass();
        java.lang.Class<?> wildcardClass57 = intArray50.getClass();
        float float60 = calculadora0.calcularMedia(intArray50, (int) (short) 1, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray63 = new int[] {};
        float float66 = calculadora61.calcularMedia(intArray63, 100, 1);
        java.lang.Class<?> wildcardClass67 = intArray63.getClass();
        float float70 = calculadora0.calcularMedia(intArray63, (int) (byte) -1, (int) (short) 0);
        java.lang.Class<?> wildcardClass71 = intArray63.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray11 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float14 = calculadora6.calcularMedia(intArray11, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, (int) '#', 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray24 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float27 = calculadora19.calcularMedia(intArray24, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        float float37 = calculadora19.calcularMedia(intArray30, 0, 10);
        java.lang.Class<?> wildcardClass38 = calculadora19.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray44 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float47 = calculadora39.calcularMedia(intArray44, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        float float57 = calculadora39.calcularMedia(intArray50, 0, 10);
        float float60 = calculadora19.calcularMedia(intArray50, 0, (int) ' ');
        java.lang.Class<?> wildcardClass61 = calculadora19.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray64 = new int[] {};
        float float67 = calculadora62.calcularMedia(intArray64, 100, 1);
        java.lang.Class<?> wildcardClass68 = intArray64.getClass();
        float float71 = calculadora19.calcularMedia(intArray64, (int) (byte) 100, (int) (short) -1);
        java.lang.Class<?> wildcardClass72 = intArray64.getClass();
        float float75 = calculadora0.calcularMedia(intArray64, (-1), (int) 'a');
        int[] intArray76 = null;
        float float79 = calculadora0.calcularMedia(intArray76, 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass80 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 100.0f + "'", float18 == 100.0f);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 10.0f + "'", float27 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals((float) float37, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 10.0f + "'", float47 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals((float) float57, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float60, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora2 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass3 = calculadora2.getClass();
        int[] intArray7 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float10 = calculadora2.calcularMedia(intArray7, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass11 = calculadora2.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray17 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float20 = calculadora12.calcularMedia(intArray17, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        java.lang.Class<?> wildcardClass27 = intArray23.getClass();
        float float30 = calculadora12.calcularMedia(intArray23, 0, 10);
        float float33 = calculadora2.calcularMedia(intArray23, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass34 = calculadora2.getClass();
        java.lang.Class<?> wildcardClass35 = calculadora2.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        float float48 = calculadora36.calcularMedia(intArray42, 10, 0);
        java.lang.Class<?> wildcardClass49 = calculadora36.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass61 = calculadora60.getClass();
        int[] intArray62 = new int[] {};
        float float65 = calculadora60.calcularMedia(intArray62, 100, 1);
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        float float69 = calculadora51.calcularMedia(intArray62, 0, 10);
        float float72 = calculadora50.calcularMedia(intArray62, (int) (short) -1, (-1));
        float float75 = calculadora36.calcularMedia(intArray62, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray81 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float84 = calculadora76.calcularMedia(intArray81, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        java.lang.Class<?> wildcardClass86 = intArray81.getClass();
        java.lang.Class<?> wildcardClass87 = intArray81.getClass();
        float float90 = calculadora36.calcularMedia(intArray81, (int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = intArray81.getClass();
        float float94 = calculadora2.calcularMedia(intArray81, (int) ' ', 100);
        float float97 = calculadora0.calcularMedia(intArray81, 100, 0);
        java.lang.Class<?> wildcardClass98 = intArray81.getClass();
        java.lang.Class<?> wildcardClass99 = intArray81.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 0.0f + "'", float10 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 10.0f + "'", float20 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals((float) float30, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals((float) float69, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + 10.0f + "'", float84 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + 97.0f + "'", float90 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + 97.0f + "'", float94 == 97.0f);
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float28 = calculadora20.calcularMedia(intArray25, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        float float50 = calculadora20.calcularMedia(intArray40, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora51.calcularMedia(intArray57, 10, 0);
        float float66 = calculadora20.calcularMedia(intArray57, (int) (short) 0, 0);
        float float69 = calculadora0.calcularMedia(intArray57, (-1), (int) '4');
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass72 = calculadora71.getClass();
        int[] intArray76 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float79 = calculadora71.calcularMedia(intArray76, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass81 = calculadora80.getClass();
        int[] intArray85 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float88 = calculadora80.calcularMedia(intArray85, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass89 = intArray85.getClass();
        java.lang.Class<?> wildcardClass90 = intArray85.getClass();
        float float93 = calculadora71.calcularMedia(intArray85, (int) (short) -1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass94 = intArray85.getClass();
        float float97 = calculadora0.calcularMedia(intArray85, (int) 'a', 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.0f + "'", float28 == 0.0f);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 0.0f + "'", float79 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + 0.0f + "'", float88 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        java.lang.Class<?> wildcardClass8 = calculadora6.getClass();
        java.lang.Class<?> wildcardClass9 = calculadora6.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray16 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float19 = calculadora11.calcularMedia(intArray16, (int) (byte) 10, (int) '4');
        float float22 = calculadora10.calcularMedia(intArray16, 10, 0);
        float float25 = calculadora6.calcularMedia(intArray16, 0, 100);
        java.lang.Class<?> wildcardClass26 = calculadora6.getClass();
        java.lang.Class<?> wildcardClass27 = calculadora6.getClass();
        java.lang.Class<?> wildcardClass28 = calculadora6.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray34 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float37 = calculadora29.calcularMedia(intArray34, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass38 = calculadora29.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray44 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float47 = calculadora39.calcularMedia(intArray44, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        float float57 = calculadora39.calcularMedia(intArray50, 0, 10);
        float float60 = calculadora29.calcularMedia(intArray50, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass61 = calculadora29.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray68 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float71 = calculadora63.calcularMedia(intArray68, (int) (byte) 10, (int) '4');
        float float74 = calculadora62.calcularMedia(intArray68, 10, 0);
        java.lang.Class<?> wildcardClass75 = intArray68.getClass();
        float float78 = calculadora29.calcularMedia(intArray68, (int) (byte) 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass79 = intArray68.getClass();
        float float82 = calculadora6.calcularMedia(intArray68, 0, (int) (byte) 10);
        float float85 = calculadora0.calcularMedia(intArray68, (int) (byte) -1, (int) (byte) 10);
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass87 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 10.0f + "'", float19 == 10.0f);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 36.0f + "'", float25 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 0.0f + "'", float37 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 10.0f + "'", float47 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals((float) float57, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 10.0f + "'", float71 == 10.0f);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + 5.5f + "'", float82 == 5.5f);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        java.lang.Class<?> wildcardClass16 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass17 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float26 = calculadora18.calcularMedia(intArray23, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass27 = calculadora18.getClass();
        int[] intArray28 = null;
        float float31 = calculadora18.calcularMedia(intArray28, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        java.lang.Class<?> wildcardClass51 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray63 = new int[] {};
        float float66 = calculadora61.calcularMedia(intArray63, 100, 1);
        java.lang.Class<?> wildcardClass67 = intArray63.getClass();
        float float70 = calculadora52.calcularMedia(intArray63, 0, 10);
        float float73 = calculadora32.calcularMedia(intArray63, 0, (int) ' ');
        java.lang.Class<?> wildcardClass74 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass76 = calculadora75.getClass();
        int[] intArray80 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float83 = calculadora75.calcularMedia(intArray80, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass84 = intArray80.getClass();
        java.lang.Class<?> wildcardClass85 = intArray80.getClass();
        java.lang.Class<?> wildcardClass86 = intArray80.getClass();
        float float89 = calculadora32.calcularMedia(intArray80, 0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass90 = intArray80.getClass();
        float float93 = calculadora18.calcularMedia(intArray80, (int) (short) 0, 100);
        java.lang.Class<?> wildcardClass94 = intArray80.getClass();
        float float97 = calculadora0.calcularMedia(intArray80, (int) (short) 1, (int) 'a');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + 0.0f + "'", float26 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 0.0f + "'", float83 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + 36.666668f + "'", float93 == 36.666668f);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + 10.0f + "'", float97 == 10.0f);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora0.calcularMedia(intArray51, (int) 'a', 10);
        java.lang.Class<?> wildcardClass62 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass63 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray17 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float20 = calculadora12.calcularMedia(intArray17, (int) (byte) 10, (int) '4');
        float float23 = calculadora11.calcularMedia(intArray17, 10, 0);
        float float26 = calculadora0.calcularMedia(intArray17, (-1), (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        java.lang.Class<?> wildcardClass29 = calculadora27.getClass();
        java.lang.Class<?> wildcardClass30 = calculadora27.getClass();
        java.lang.Class<?> wildcardClass31 = calculadora27.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        float float53 = calculadora27.calcularMedia(intArray43, (int) 'a', (int) ' ');
        float float56 = calculadora0.calcularMedia(intArray43, 0, 10);
        java.lang.Class<?> wildcardClass57 = intArray43.getClass();
        java.lang.Class<?> wildcardClass58 = intArray43.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 10.0f + "'", float20 == 10.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertEquals((float) float56, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray26 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float29 = calculadora21.calcularMedia(intArray26, (int) (byte) 10, (int) '4');
        float float32 = calculadora0.calcularMedia(intArray26, 1, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float41 = calculadora33.calcularMedia(intArray38, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray47 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float50 = calculadora42.calcularMedia(intArray47, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray53 = new int[] {};
        float float56 = calculadora51.calcularMedia(intArray53, 100, 1);
        java.lang.Class<?> wildcardClass57 = intArray53.getClass();
        float float60 = calculadora42.calcularMedia(intArray53, 0, 10);
        float float63 = calculadora33.calcularMedia(intArray53, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray70 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float73 = calculadora65.calcularMedia(intArray70, (int) (byte) 10, (int) '4');
        float float76 = calculadora64.calcularMedia(intArray70, 10, 0);
        float float79 = calculadora33.calcularMedia(intArray70, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray85 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float88 = calculadora80.calcularMedia(intArray85, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass89 = intArray85.getClass();
        java.lang.Class<?> wildcardClass90 = intArray85.getClass();
        float float93 = calculadora33.calcularMedia(intArray85, 10, (int) 'a');
        java.lang.Class<?> wildcardClass94 = intArray85.getClass();
        float float97 = calculadora0.calcularMedia(intArray85, 10, (int) ' ');
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass99 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 10.0f + "'", float29 == 10.0f);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 0.0f + "'", float41 == 0.0f);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + 10.0f + "'", float50 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals((float) float60, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 10.0f + "'", float73 == 10.0f);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + 10.0f + "'", float88 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + 53.5f + "'", float93 == 53.5f);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + 10.0f + "'", float97 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        java.lang.Class<?> wildcardClass13 = calculadora11.getClass();
        java.lang.Class<?> wildcardClass14 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray21 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float24 = calculadora16.calcularMedia(intArray21, (int) (byte) 10, (int) '4');
        float float27 = calculadora15.calcularMedia(intArray21, 10, 0);
        float float30 = calculadora11.calcularMedia(intArray21, 0, 100);
        java.lang.Class<?> wildcardClass31 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass34 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass35 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        float float48 = calculadora36.calcularMedia(intArray42, 10, 0);
        float float51 = calculadora32.calcularMedia(intArray42, 0, 100);
        float float54 = calculadora11.calcularMedia(intArray42, (int) (short) 10, (int) (byte) -1);
        float float57 = calculadora0.calcularMedia(intArray42, (int) (byte) 100, (int) '#');
        java.lang.Class<?> wildcardClass58 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass59 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass60 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass61 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 10.0f + "'", float24 == 10.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 36.0f + "'", float30 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 36.0f + "'", float51 == 36.0f);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        int[] intArray13 = null;
        float float16 = calculadora0.calcularMedia(intArray13, (int) ' ', (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        java.lang.Class<?> wildcardClass19 = calculadora17.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora17.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        float float33 = calculadora21.calcularMedia(intArray27, 10, 0);
        float float36 = calculadora17.calcularMedia(intArray27, 0, 100);
        java.lang.Class<?> wildcardClass37 = calculadora17.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        java.lang.Class<?> wildcardClass40 = calculadora38.getClass();
        java.lang.Class<?> wildcardClass41 = calculadora38.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        float float54 = calculadora42.calcularMedia(intArray48, 10, 0);
        float float57 = calculadora38.calcularMedia(intArray48, 0, 100);
        float float60 = calculadora17.calcularMedia(intArray48, (int) (short) 10, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        java.lang.Class<?> wildcardClass63 = calculadora61.getClass();
        java.lang.Class<?> wildcardClass64 = calculadora61.getClass();
        java.lang.Class<?> wildcardClass65 = calculadora61.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray71 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float74 = calculadora66.calcularMedia(intArray71, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass76 = calculadora75.getClass();
        int[] intArray77 = new int[] {};
        float float80 = calculadora75.calcularMedia(intArray77, 100, 1);
        java.lang.Class<?> wildcardClass81 = intArray77.getClass();
        float float84 = calculadora66.calcularMedia(intArray77, 0, 10);
        float float87 = calculadora61.calcularMedia(intArray77, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass88 = intArray77.getClass();
        float float91 = calculadora17.calcularMedia(intArray77, (int) (short) -1, (int) '#');
        float float94 = calculadora0.calcularMedia(intArray77, 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass95 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass96 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 36.0f + "'", float36 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 36.0f + "'", float57 == 36.0f);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 10.0f + "'", float74 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertEquals((float) float84, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertEquals((float) float94, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        float float23 = calculadora5.calcularMedia(intArray16, 0, 10);
        float float26 = calculadora0.calcularMedia(intArray16, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass27 = calculadora0.getClass();
        int[] intArray28 = null;
        float float31 = calculadora0.calcularMedia(intArray28, (int) (byte) 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        java.lang.Class<?> wildcardClass35 = calculadora33.getClass();
        java.lang.Class<?> wildcardClass36 = calculadora33.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray43 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float46 = calculadora38.calcularMedia(intArray43, (int) (byte) 10, (int) '4');
        float float49 = calculadora37.calcularMedia(intArray43, 10, 0);
        float float52 = calculadora33.calcularMedia(intArray43, 0, 100);
        float float55 = calculadora0.calcularMedia(intArray43, (int) '#', 0);
        java.lang.Class<?> wildcardClass56 = intArray43.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals((float) float23, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + 10.0f + "'", float46 == 10.0f);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 36.0f + "'", float52 == 36.0f);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray26 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float29 = calculadora21.calcularMedia(intArray26, (int) (byte) 10, (int) '4');
        float float32 = calculadora0.calcularMedia(intArray26, 1, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora0.calcularMedia(intArray35, (int) '4', 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float51 = calculadora43.calcularMedia(intArray48, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass52 = calculadora43.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray59 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float62 = calculadora54.calcularMedia(intArray59, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass64 = calculadora63.getClass();
        int[] intArray65 = new int[] {};
        float float68 = calculadora63.calcularMedia(intArray65, 100, 1);
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        java.lang.Class<?> wildcardClass70 = intArray65.getClass();
        float float73 = calculadora54.calcularMedia(intArray65, (int) ' ', (int) (byte) -1);
        int[] intArray76 = new int[] { 1, (short) 100 };
        float float79 = calculadora54.calcularMedia(intArray76, (int) (byte) 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass80 = intArray76.getClass();
        float float83 = calculadora43.calcularMedia(intArray76, (int) (byte) -1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass84 = intArray76.getClass();
        float float87 = calculadora0.calcularMedia(intArray76, 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass88 = intArray76.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 10.0f + "'", float29 == 10.0f);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 10.0f + "'", float62 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray26 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float29 = calculadora21.calcularMedia(intArray26, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass31 = calculadora30.getClass();
        int[] intArray32 = new int[] {};
        float float35 = calculadora30.calcularMedia(intArray32, 100, 1);
        java.lang.Class<?> wildcardClass36 = intArray32.getClass();
        float float39 = calculadora21.calcularMedia(intArray32, 0, 10);
        java.lang.Class<?> wildcardClass40 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray46 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float49 = calculadora41.calcularMedia(intArray46, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora41.calcularMedia(intArray52, 0, 10);
        float float62 = calculadora21.calcularMedia(intArray52, 0, (int) ' ');
        java.lang.Class<?> wildcardClass63 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float72 = calculadora64.calcularMedia(intArray69, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        java.lang.Class<?> wildcardClass74 = intArray69.getClass();
        java.lang.Class<?> wildcardClass75 = intArray69.getClass();
        float float78 = calculadora21.calcularMedia(intArray69, 0, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray84 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float87 = calculadora79.calcularMedia(intArray84, 0, (int) (short) 1);
        float float90 = calculadora21.calcularMedia(intArray84, (int) (byte) 100, (int) (byte) 0);
        float float93 = calculadora0.calcularMedia(intArray84, (int) (byte) 10, (int) 'a');
        java.lang.Class<?> wildcardClass94 = intArray84.getClass();
        java.lang.Class<?> wildcardClass95 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 10.0f + "'", float29 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + (-1.0f) + "'", float35 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals((float) float39, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 10.0f + "'", float49 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float62, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 0.0f + "'", float72 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + 0.0f + "'", float87 == 0.0f);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + 10.0f + "'", float93 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        java.lang.Class<?> wildcardClass30 = calculadora28.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray36 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float39 = calculadora31.calcularMedia(intArray36, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora31.calcularMedia(intArray42, 0, 10);
        java.lang.Class<?> wildcardClass50 = calculadora31.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass61 = calculadora60.getClass();
        int[] intArray62 = new int[] {};
        float float65 = calculadora60.calcularMedia(intArray62, 100, 1);
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        float float69 = calculadora51.calcularMedia(intArray62, 0, 10);
        float float72 = calculadora31.calcularMedia(intArray62, 0, (int) ' ');
        float float75 = calculadora28.calcularMedia(intArray62, (int) 'a', (int) (byte) 0);
        float float78 = calculadora0.calcularMedia(intArray62, (-1), (int) (short) 10);
        java.lang.Class<?> wildcardClass79 = intArray62.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 10.0f + "'", float39 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals((float) float49, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals((float) float69, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float72, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass36 = calculadora35.getClass();
        int[] intArray37 = new int[] {};
        float float40 = calculadora35.calcularMedia(intArray37, 100, 1);
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora26.calcularMedia(intArray37, 0, 10);
        float float47 = calculadora25.calcularMedia(intArray37, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass55 = calculadora54.getClass();
        int[] intArray56 = new int[] {};
        float float59 = calculadora54.calcularMedia(intArray56, 100, 1);
        java.lang.Class<?> wildcardClass60 = intArray56.getClass();
        float float63 = calculadora48.calcularMedia(intArray56, 10, (int) 'a');
        java.lang.Class<?> wildcardClass64 = intArray56.getClass();
        float float67 = calculadora25.calcularMedia(intArray56, (int) (short) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass68 = intArray56.getClass();
        java.lang.Class<?> wildcardClass69 = intArray56.getClass();
        java.lang.Class<?> wildcardClass70 = intArray56.getClass();
        java.lang.Class<?> wildcardClass71 = intArray56.getClass();
        float float74 = calculadora0.calcularMedia(intArray56, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass75 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals((float) float44, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        float float38 = calculadora0.calcularMedia(intArray30, (int) (byte) -1, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        float float51 = calculadora39.calcularMedia(intArray45, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray57 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float60 = calculadora52.calcularMedia(intArray57, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray66 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float69 = calculadora61.calcularMedia(intArray66, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass71 = calculadora70.getClass();
        int[] intArray72 = new int[] {};
        float float75 = calculadora70.calcularMedia(intArray72, 100, 1);
        java.lang.Class<?> wildcardClass76 = intArray72.getClass();
        float float79 = calculadora61.calcularMedia(intArray72, 0, 10);
        float float82 = calculadora52.calcularMedia(intArray72, 10, (int) (short) 0);
        float float85 = calculadora39.calcularMedia(intArray72, (int) (short) 0, 10);
        java.lang.Class<?> wildcardClass86 = intArray72.getClass();
        java.lang.Class<?> wildcardClass87 = intArray72.getClass();
        float float90 = calculadora0.calcularMedia(intArray72, 100, 0);
        java.lang.Class<?> wildcardClass91 = intArray72.getClass();
        java.lang.Class<?> wildcardClass92 = intArray72.getClass();
        java.lang.Class<?> wildcardClass93 = intArray72.getClass();
        java.lang.Class<?> wildcardClass94 = intArray72.getClass();
        java.lang.Class<?> wildcardClass95 = intArray72.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 0.0f + "'", float60 == 0.0f);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 10.0f + "'", float69 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals((float) float79, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertEquals((float) float85, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray11 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float14 = calculadora6.calcularMedia(intArray11, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, (int) '#', 100);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora20.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora20.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora20.getClass();
        java.lang.Class<?> wildcardClass25 = calculadora20.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass27 = calculadora26.getClass();
        int[] intArray28 = new int[] {};
        float float31 = calculadora26.calcularMedia(intArray28, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray34 = new int[] {};
        float float37 = calculadora32.calcularMedia(intArray34, 100, 1);
        java.lang.Class<?> wildcardClass38 = intArray34.getClass();
        float float41 = calculadora26.calcularMedia(intArray34, 10, (int) 'a');
        float float44 = calculadora20.calcularMedia(intArray34, (int) (byte) 0, (int) 'a');
        java.lang.Class<?> wildcardClass45 = intArray34.getClass();
        float float48 = calculadora0.calcularMedia(intArray34, (int) (short) 0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass49 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass50 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 100.0f + "'", float18 == 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float44, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float54 = calculadora46.calcularMedia(intArray51, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        float float73 = calculadora55.calcularMedia(intArray66, 0, 10);
        float float76 = calculadora46.calcularMedia(intArray66, 10, (int) (short) 0);
        float float79 = calculadora0.calcularMedia(intArray66, (int) (short) -1, (int) (byte) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass81 = calculadora80.getClass();
        int[] intArray85 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float88 = calculadora80.calcularMedia(intArray85, 0, (int) (short) 1);
        float float91 = calculadora0.calcularMedia(intArray85, (int) (byte) 10, (int) ' ');
        java.lang.Class<?> wildcardClass92 = intArray85.getClass();
        java.lang.Class<?> wildcardClass93 = intArray85.getClass();
        java.lang.Class<?> wildcardClass94 = intArray85.getClass();
        java.lang.Class<?> wildcardClass95 = intArray85.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 0.0f + "'", float54 == 0.0f);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + 0.0f + "'", float88 == 0.0f);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + 10.0f + "'", float91 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora40.calcularMedia(intArray48, 10, (int) 'a');
        java.lang.Class<?> wildcardClass56 = intArray48.getClass();
        java.lang.Class<?> wildcardClass57 = intArray48.getClass();
        float float60 = calculadora0.calcularMedia(intArray48, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass61 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray67 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float70 = calculadora62.calcularMedia(intArray67, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass71 = intArray67.getClass();
        java.lang.Class<?> wildcardClass72 = intArray67.getClass();
        java.lang.Class<?> wildcardClass73 = intArray67.getClass();
        java.lang.Class<?> wildcardClass74 = intArray67.getClass();
        float float77 = calculadora0.calcularMedia(intArray67, 100, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora78 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass79 = calculadora78.getClass();
        int[] intArray80 = new int[] {};
        float float83 = calculadora78.calcularMedia(intArray80, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora84 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass85 = calculadora84.getClass();
        int[] intArray89 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float92 = calculadora84.calcularMedia(intArray89, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass93 = intArray89.getClass();
        float float96 = calculadora78.calcularMedia(intArray89, (int) '#', 100);
        float float99 = calculadora0.calcularMedia(intArray89, 10, (int) (byte) 1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 10.0f + "'", float70 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + 0.0f + "'", float92 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + 100.0f + "'", float96 == 100.0f);
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + (-1.0f) + "'", float99 == (-1.0f));
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        java.lang.Class<?> wildcardClass37 = intArray26.getClass();
        float float40 = calculadora0.calcularMedia(intArray26, (int) (byte) 1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray46 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float49 = calculadora41.calcularMedia(intArray46, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass50 = intArray46.getClass();
        java.lang.Class<?> wildcardClass51 = intArray46.getClass();
        float float54 = calculadora0.calcularMedia(intArray46, (int) (byte) 100, 10);
        int[] intArray55 = null;
        float float58 = calculadora0.calcularMedia(intArray55, (int) 'a', 0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 10.0f + "'", float49 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray11 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float14 = calculadora6.calcularMedia(intArray11, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass16 = calculadora15.getClass();
        int[] intArray17 = new int[] {};
        float float20 = calculadora15.calcularMedia(intArray17, 100, 1);
        java.lang.Class<?> wildcardClass21 = intArray17.getClass();
        float float24 = calculadora6.calcularMedia(intArray17, 0, 10);
        float float27 = calculadora5.calcularMedia(intArray17, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        float float47 = calculadora29.calcularMedia(intArray40, 0, 10);
        float float50 = calculadora28.calcularMedia(intArray40, (int) (short) -1, (-1));
        float float53 = calculadora5.calcularMedia(intArray40, (int) (byte) -1, (int) 'a');
        int[] intArray54 = null;
        float float57 = calculadora5.calcularMedia(intArray54, (-1), (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray63 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float66 = calculadora58.calcularMedia(intArray63, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass67 = intArray63.getClass();
        float float70 = calculadora5.calcularMedia(intArray63, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass71 = intArray63.getClass();
        java.lang.Class<?> wildcardClass72 = intArray63.getClass();
        float float75 = calculadora0.calcularMedia(intArray63, (int) (byte) -1, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        int[] intArray77 = null;
        float float80 = calculadora0.calcularMedia(intArray77, 100, (int) ' ');
        java.lang.Class<?> wildcardClass81 = calculadora0.getClass();
        int[] intArray82 = null;
        float float85 = calculadora0.calcularMedia(intArray82, (-1), (int) '#');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 10.0f + "'", float14 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + (-1.0f) + "'", float20 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals((float) float24, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals((float) float47, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 10.0f + "'", float66 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass5 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray11 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float14 = calculadora6.calcularMedia(intArray11, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        float float26 = calculadora6.calcularMedia(intArray20, (int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass27 = calculadora6.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora37.calcularMedia(intArray48, 0, 10);
        float float58 = calculadora28.calcularMedia(intArray48, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        float float71 = calculadora59.calcularMedia(intArray65, 10, 0);
        float float74 = calculadora28.calcularMedia(intArray65, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass75 = intArray65.getClass();
        float float78 = calculadora6.calcularMedia(intArray65, 100, (int) (byte) 0);
        java.lang.Class<?> wildcardClass79 = intArray65.getClass();
        java.lang.Class<?> wildcardClass80 = intArray65.getClass();
        float float83 = calculadora0.calcularMedia(intArray65, (int) (short) -1, 10);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + 5.5f + "'", float26 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        java.lang.Class<?> wildcardClass44 = intArray39.getClass();
        java.lang.Class<?> wildcardClass45 = intArray39.getClass();
        java.lang.Class<?> wildcardClass46 = intArray39.getClass();
        float float49 = calculadora0.calcularMedia(intArray39, (int) 'a', (int) (short) 100);
        java.lang.Class<?> wildcardClass50 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass60 = intArray56.getClass();
        java.lang.Class<?> wildcardClass61 = intArray56.getClass();
        java.lang.Class<?> wildcardClass62 = intArray56.getClass();
        java.lang.Class<?> wildcardClass63 = intArray56.getClass();
        float float66 = calculadora0.calcularMedia(intArray56, 0, (int) ' ');
        java.lang.Class<?> wildcardClass67 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 97.0f + "'", float49 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 5.5f + "'", float66 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        int[] intArray29 = new int[] {};
        float float32 = calculadora27.calcularMedia(intArray29, 100, 1);
        java.lang.Class<?> wildcardClass33 = intArray29.getClass();
        float float36 = calculadora21.calcularMedia(intArray29, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray42 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float45 = calculadora37.calcularMedia(intArray42, 0, (int) (short) 1);
        float float48 = calculadora21.calcularMedia(intArray42, 10, (int) (short) 100);
        float float51 = calculadora0.calcularMedia(intArray42, (int) ' ', (int) (byte) 10);
        java.lang.Class<?> wildcardClass52 = intArray42.getClass();
        java.lang.Class<?> wildcardClass53 = intArray42.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals((float) float36, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 0.0f + "'", float45 == 0.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 55.0f + "'", float48 == 55.0f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        float float53 = calculadora23.calcularMedia(intArray43, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        float float66 = calculadora54.calcularMedia(intArray60, 10, 0);
        float float69 = calculadora23.calcularMedia(intArray60, (int) (short) 0, 0);
        float float72 = calculadora0.calcularMedia(intArray60, 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray81 = new int[] {};
        float float84 = calculadora79.calcularMedia(intArray81, 100, 1);
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        float float88 = calculadora73.calcularMedia(intArray81, 10, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intArray81.getClass();
        java.lang.Class<?> wildcardClass90 = intArray81.getClass();
        float float93 = calculadora0.calcularMedia(intArray81, (int) (byte) -1, 0);
        java.lang.Class<?> wildcardClass94 = intArray81.getClass();
        java.lang.Class<?> wildcardClass95 = intArray81.getClass();
        java.lang.Class<?> wildcardClass96 = intArray81.getClass();
        java.lang.Class<?> wildcardClass97 = intArray81.getClass();
        java.lang.Class<?> wildcardClass98 = intArray81.getClass();
        java.lang.Class<?> wildcardClass99 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        int[] intArray20 = null;
        float float23 = calculadora0.calcularMedia(intArray20, (int) '#', (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        int[] intArray29 = new int[] {};
        float float32 = calculadora27.calcularMedia(intArray29, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora27.calcularMedia(intArray35, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float51 = calculadora43.calcularMedia(intArray48, 0, (int) (short) 1);
        float float54 = calculadora27.calcularMedia(intArray48, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        java.lang.Class<?> wildcardClass61 = intArray57.getClass();
        java.lang.Class<?> wildcardClass62 = intArray57.getClass();
        float float65 = calculadora27.calcularMedia(intArray57, (int) (byte) -1, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass67 = calculadora66.getClass();
        int[] intArray68 = new int[] {};
        float float71 = calculadora66.calcularMedia(intArray68, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass73 = calculadora72.getClass();
        int[] intArray74 = new int[] {};
        float float77 = calculadora72.calcularMedia(intArray74, 100, 1);
        java.lang.Class<?> wildcardClass78 = intArray74.getClass();
        float float81 = calculadora66.calcularMedia(intArray74, 10, (int) 'a');
        java.lang.Class<?> wildcardClass82 = intArray74.getClass();
        java.lang.Class<?> wildcardClass83 = intArray74.getClass();
        float float86 = calculadora27.calcularMedia(intArray74, 0, (int) '#');
        float float89 = calculadora0.calcularMedia(intArray74, (int) (byte) 10, 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals((float) float42, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 55.0f + "'", float54 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals((float) float81, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals((float) float86, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass5 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray14 = new int[] {};
        float float17 = calculadora12.calcularMedia(intArray14, 100, 1);
        java.lang.Class<?> wildcardClass18 = intArray14.getClass();
        float float21 = calculadora6.calcularMedia(intArray14, 10, (int) 'a');
        float float24 = calculadora0.calcularMedia(intArray14, (int) (byte) 0, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray30 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float33 = calculadora25.calcularMedia(intArray30, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray36 = new int[] {};
        float float39 = calculadora34.calcularMedia(intArray36, 100, 1);
        java.lang.Class<?> wildcardClass40 = intArray36.getClass();
        float float43 = calculadora25.calcularMedia(intArray36, 0, 10);
        java.lang.Class<?> wildcardClass44 = calculadora25.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass54 = calculadora45.getClass();
        int[] intArray55 = null;
        float float58 = calculadora45.calcularMedia(intArray55, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora69 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass70 = calculadora69.getClass();
        int[] intArray71 = new int[] {};
        float float74 = calculadora69.calcularMedia(intArray71, 100, 1);
        java.lang.Class<?> wildcardClass75 = intArray71.getClass();
        float float78 = calculadora60.calcularMedia(intArray71, 0, 10);
        float float81 = calculadora59.calcularMedia(intArray71, (int) (short) -1, (-1));
        float float84 = calculadora45.calcularMedia(intArray71, (int) (short) -1, (int) (short) 100);
        float float87 = calculadora25.calcularMedia(intArray71, (int) (byte) 1, (int) 'a');
        java.lang.Class<?> wildcardClass88 = intArray71.getClass();
        float float91 = calculadora0.calcularMedia(intArray71, 10, 1);
        java.lang.Class<?> wildcardClass92 = intArray71.getClass();
        java.lang.Class<?> wildcardClass93 = intArray71.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + (-1.0f) + "'", float17 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals((float) float21, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float24, Float.NaN, 0);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + 10.0f + "'", float33 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals((float) float43, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals((float) float78, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertEquals((float) float87, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray26 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float29 = calculadora21.calcularMedia(intArray26, (int) (byte) 10, (int) '4');
        float float32 = calculadora0.calcularMedia(intArray26, 1, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float41 = calculadora33.calcularMedia(intArray38, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass42 = calculadora33.getClass();
        java.lang.Class<?> wildcardClass43 = calculadora33.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        float float56 = calculadora44.calcularMedia(intArray50, 10, 0);
        float float59 = calculadora33.calcularMedia(intArray50, (-1), (int) (byte) 0);
        float float62 = calculadora0.calcularMedia(intArray50, (int) (byte) 0, (int) (short) -1);
        int[] intArray63 = null;
        try {
            float float66 = calculadora0.calcularMedia(intArray63, 0, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 10.0f + "'", float29 == 10.0f);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 0.0f + "'", float41 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        int[] intArray13 = null;
        float float16 = calculadora0.calcularMedia(intArray13, (int) ' ', (int) (short) -1);
        java.lang.Class<?> wildcardClass17 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = calculadora47.getClass();
        int[] intArray57 = null;
        float float60 = calculadora47.calcularMedia(intArray57, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray67 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float70 = calculadora62.calcularMedia(intArray67, (int) (byte) 10, (int) '4');
        float float73 = calculadora61.calcularMedia(intArray67, 10, 0);
        float float76 = calculadora47.calcularMedia(intArray67, 100, (int) '#');
        java.lang.Class<?> wildcardClass77 = intArray67.getClass();
        float float80 = calculadora0.calcularMedia(intArray67, (int) (byte) -1, (int) (short) 10);
        int[] intArray81 = null;
        float float84 = calculadora0.calcularMedia(intArray81, (-1), (int) ' ');
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 10.0f + "'", float70 == 10.0f);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray28 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float31 = calculadora23.calcularMedia(intArray28, (int) (byte) 10, (int) '4');
        float float34 = calculadora22.calcularMedia(intArray28, 10, 0);
        float float37 = calculadora11.calcularMedia(intArray28, (-1), (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        java.lang.Class<?> wildcardClass40 = calculadora38.getClass();
        java.lang.Class<?> wildcardClass41 = calculadora38.getClass();
        java.lang.Class<?> wildcardClass42 = calculadora38.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        float float61 = calculadora43.calcularMedia(intArray54, 0, 10);
        float float64 = calculadora38.calcularMedia(intArray54, (int) 'a', (int) ' ');
        float float67 = calculadora11.calcularMedia(intArray54, 0, 10);
        float float70 = calculadora0.calcularMedia(intArray54, (int) '4', 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 10.0f + "'", float31 == 10.0f);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertEquals((float) float67, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray18 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float21 = calculadora13.calcularMedia(intArray18, (int) (byte) 10, (int) '4');
        float float24 = calculadora12.calcularMedia(intArray18, 10, 0);
        java.lang.Class<?> wildcardClass25 = intArray18.getClass();
        java.lang.Class<?> wildcardClass26 = intArray18.getClass();
        float float29 = calculadora0.calcularMedia(intArray18, 1, (int) (short) 0);
        java.lang.Class<?> wildcardClass30 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass31 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 10.0f + "'", float21 == 10.0f);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass5 = calculadora4.getClass();
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float12 = calculadora4.calcularMedia(intArray9, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray18 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float21 = calculadora13.calcularMedia(intArray18, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass23 = calculadora22.getClass();
        int[] intArray24 = new int[] {};
        float float27 = calculadora22.calcularMedia(intArray24, 100, 1);
        java.lang.Class<?> wildcardClass28 = intArray24.getClass();
        float float31 = calculadora13.calcularMedia(intArray24, 0, 10);
        float float34 = calculadora4.calcularMedia(intArray24, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray41 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float44 = calculadora36.calcularMedia(intArray41, (int) (byte) 10, (int) '4');
        float float47 = calculadora35.calcularMedia(intArray41, 10, 0);
        float float50 = calculadora4.calcularMedia(intArray41, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass60 = intArray56.getClass();
        java.lang.Class<?> wildcardClass61 = intArray56.getClass();
        float float64 = calculadora4.calcularMedia(intArray56, 10, (int) 'a');
        java.lang.Class<?> wildcardClass65 = intArray56.getClass();
        java.lang.Class<?> wildcardClass66 = intArray56.getClass();
        float float69 = calculadora0.calcularMedia(intArray56, (int) (short) 1, (int) (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.0f + "'", float12 == 0.0f);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 10.0f + "'", float21 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals((float) float31, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 10.0f + "'", float44 == 10.0f);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 53.5f + "'", float64 == 53.5f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 36.0f + "'", float69 == 36.0f);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora40.calcularMedia(intArray48, 10, (int) 'a');
        java.lang.Class<?> wildcardClass56 = intArray48.getClass();
        java.lang.Class<?> wildcardClass57 = intArray48.getClass();
        float float60 = calculadora0.calcularMedia(intArray48, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass61 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass62 = calculadora0.getClass();
        int[] intArray63 = null;
        float float66 = calculadora0.calcularMedia(intArray63, (-1), (int) '4');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        float float61 = calculadora46.calcularMedia(intArray54, 10, (int) 'a');
        java.lang.Class<?> wildcardClass62 = intArray54.getClass();
        java.lang.Class<?> wildcardClass63 = intArray54.getClass();
        float float66 = calculadora0.calcularMedia(intArray54, 100, (int) (byte) 0);
        java.lang.Class<?> wildcardClass67 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass68 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass69 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray29 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float32 = calculadora24.calcularMedia(intArray29, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora24.calcularMedia(intArray35, 0, 10);
        float float45 = calculadora23.calcularMedia(intArray35, (int) (short) -1, (-1));
        float float48 = calculadora0.calcularMedia(intArray35, (int) (byte) -1, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray54 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float57 = calculadora49.calcularMedia(intArray54, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass58 = calculadora49.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray70 = new int[] {};
        float float73 = calculadora68.calcularMedia(intArray70, 100, 1);
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        float float77 = calculadora59.calcularMedia(intArray70, 0, 10);
        float float80 = calculadora49.calcularMedia(intArray70, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass81 = intArray70.getClass();
        float float84 = calculadora0.calcularMedia(intArray70, (int) '4', (-1));
        java.lang.Class<?> wildcardClass85 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass87 = calculadora0.getClass();
        int[] intArray88 = null;
        float float91 = calculadora0.calcularMedia(intArray88, 1, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 10.0f + "'", float32 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals((float) float42, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 0.0f + "'", float57 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora21.calcularMedia(intArray33, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass55 = calculadora54.getClass();
        int[] intArray56 = new int[] {};
        float float59 = calculadora54.calcularMedia(intArray56, 100, 1);
        java.lang.Class<?> wildcardClass60 = intArray56.getClass();
        float float63 = calculadora45.calcularMedia(intArray56, 0, 10);
        float float66 = calculadora44.calcularMedia(intArray56, (int) (short) -1, (-1));
        float float69 = calculadora21.calcularMedia(intArray56, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass70 = intArray56.getClass();
        float float73 = calculadora0.calcularMedia(intArray56, (int) '4', (int) '#');
        java.lang.Class<?> wildcardClass74 = intArray56.getClass();
        java.lang.Class<?> wildcardClass75 = intArray56.getClass();
        java.lang.Class<?> wildcardClass76 = intArray56.getClass();
        java.lang.Class<?> wildcardClass77 = intArray56.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass32 = calculadora23.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray39 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float42 = calculadora34.calcularMedia(intArray39, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass43 = calculadora34.getClass();
        int[] intArray44 = null;
        float float47 = calculadora34.calcularMedia(intArray44, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        float float60 = calculadora48.calcularMedia(intArray54, 10, 0);
        float float63 = calculadora34.calcularMedia(intArray54, 100, (int) '#');
        float float66 = calculadora23.calcularMedia(intArray54, (-1), (int) (short) 100);
        float float69 = calculadora0.calcularMedia(intArray54, (int) (byte) 10, 1);
        java.lang.Class<?> wildcardClass70 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 0.0f + "'", float42 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass32 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray38 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float41 = calculadora33.calcularMedia(intArray38, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray44 = new int[] {};
        float float47 = calculadora42.calcularMedia(intArray44, 100, 1);
        java.lang.Class<?> wildcardClass48 = intArray44.getClass();
        float float51 = calculadora33.calcularMedia(intArray44, 0, 10);
        float float54 = calculadora23.calcularMedia(intArray44, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass55 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        float float68 = calculadora56.calcularMedia(intArray62, 10, 0);
        java.lang.Class<?> wildcardClass69 = intArray62.getClass();
        float float72 = calculadora23.calcularMedia(intArray62, (int) (byte) 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass73 = intArray62.getClass();
        float float76 = calculadora0.calcularMedia(intArray62, 0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass77 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 10.0f + "'", float41 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 5.5f + "'", float76 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float48 = calculadora40.calcularMedia(intArray45, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass59 = calculadora58.getClass();
        int[] intArray60 = new int[] {};
        float float63 = calculadora58.calcularMedia(intArray60, 100, 1);
        java.lang.Class<?> wildcardClass64 = intArray60.getClass();
        float float67 = calculadora49.calcularMedia(intArray60, 0, 10);
        float float70 = calculadora40.calcularMedia(intArray60, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass71 = intArray60.getClass();
        float float74 = calculadora0.calcularMedia(intArray60, (int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora78 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray83 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float86 = calculadora78.calcularMedia(intArray83, (int) (byte) 10, (int) '4');
        float float89 = calculadora77.calcularMedia(intArray83, 10, 0);
        java.lang.Class<?> wildcardClass90 = intArray83.getClass();
        java.lang.Class<?> wildcardClass91 = intArray83.getClass();
        java.lang.Class<?> wildcardClass92 = intArray83.getClass();
        float float95 = calculadora0.calcularMedia(intArray83, (int) (short) -1, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 0.0f + "'", float48 == 0.0f);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals((float) float67, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + 10.0f + "'", float86 == 10.0f);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, (int) '#', 100);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass34 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray40 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float43 = calculadora35.calcularMedia(intArray40, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray46 = new int[] {};
        float float49 = calculadora44.calcularMedia(intArray46, 100, 1);
        java.lang.Class<?> wildcardClass50 = intArray46.getClass();
        float float53 = calculadora35.calcularMedia(intArray46, 0, 10);
        java.lang.Class<?> wildcardClass54 = calculadora35.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        float float73 = calculadora55.calcularMedia(intArray66, 0, 10);
        float float76 = calculadora35.calcularMedia(intArray66, 0, (int) ' ');
        float float79 = calculadora32.calcularMedia(intArray66, (int) 'a', (int) (byte) 0);
        float float82 = calculadora0.calcularMedia(intArray66, (int) (short) 10, (int) (short) 1);
        java.lang.Class<?> wildcardClass83 = intArray66.getClass();
        java.lang.Class<?> wildcardClass84 = intArray66.getClass();
        java.lang.Class<?> wildcardClass85 = intArray66.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 100.0f + "'", float28 == 100.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 55.0f + "'", float31 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 10.0f + "'", float43 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals((float) float53, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        float float56 = calculadora0.calcularMedia(intArray50, (int) (byte) 1, (int) (short) 100);
        java.lang.Class<?> wildcardClass57 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass58 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass59 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 36.0f + "'", float56 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora40.calcularMedia(intArray48, 10, (int) 'a');
        java.lang.Class<?> wildcardClass56 = intArray48.getClass();
        java.lang.Class<?> wildcardClass57 = intArray48.getClass();
        float float60 = calculadora0.calcularMedia(intArray48, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass61 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray68 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float71 = calculadora63.calcularMedia(intArray68, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass73 = calculadora72.getClass();
        int[] intArray74 = new int[] {};
        float float77 = calculadora72.calcularMedia(intArray74, 100, 1);
        java.lang.Class<?> wildcardClass78 = intArray74.getClass();
        float float81 = calculadora63.calcularMedia(intArray74, 0, 10);
        float float84 = calculadora62.calcularMedia(intArray74, (int) (short) -1, (-1));
        float float87 = calculadora0.calcularMedia(intArray74, (int) (short) 10, 10);
        java.lang.Class<?> wildcardClass88 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass89 = calculadora0.getClass();
        int[] intArray90 = null;
        try {
            float float93 = calculadora0.calcularMedia(intArray90, (int) (short) 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 10.0f + "'", float71 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals((float) float81, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test407");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass14 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass15 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass16 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        java.lang.Class<?> wildcardClass19 = calculadora17.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora17.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora17.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray28 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float31 = calculadora23.calcularMedia(intArray28, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray34 = new int[] {};
        float float37 = calculadora32.calcularMedia(intArray34, 100, 1);
        java.lang.Class<?> wildcardClass38 = intArray34.getClass();
        float float41 = calculadora23.calcularMedia(intArray34, 0, 10);
        float float44 = calculadora22.calcularMedia(intArray34, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray51 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float54 = calculadora46.calcularMedia(intArray51, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        java.lang.Class<?> wildcardClass61 = intArray57.getClass();
        float float64 = calculadora46.calcularMedia(intArray57, 0, 10);
        float float67 = calculadora45.calcularMedia(intArray57, (int) (short) -1, (-1));
        float float70 = calculadora22.calcularMedia(intArray57, (int) (byte) -1, (int) 'a');
        int[] intArray71 = null;
        float float74 = calculadora22.calcularMedia(intArray71, (-1), (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray80 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float83 = calculadora75.calcularMedia(intArray80, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass84 = intArray80.getClass();
        float float87 = calculadora22.calcularMedia(intArray80, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass88 = intArray80.getClass();
        java.lang.Class<?> wildcardClass89 = intArray80.getClass();
        float float92 = calculadora17.calcularMedia(intArray80, (int) (byte) -1, (int) (byte) -1);
        float float95 = calculadora0.calcularMedia(intArray80, 10, (-1));
        java.lang.Class<?> wildcardClass96 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 10.0f + "'", float31 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 10.0f + "'", float54 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals((float) float64, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 10.0f + "'", float83 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test408");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test409");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        int[] intArray29 = new int[] {};
        float float32 = calculadora27.calcularMedia(intArray29, 100, 1);
        java.lang.Class<?> wildcardClass33 = intArray29.getClass();
        float float36 = calculadora21.calcularMedia(intArray29, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray42 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float45 = calculadora37.calcularMedia(intArray42, 0, (int) (short) 1);
        float float48 = calculadora21.calcularMedia(intArray42, 10, (int) (short) 100);
        float float51 = calculadora0.calcularMedia(intArray42, (int) ' ', (int) (byte) 10);
        java.lang.Class<?> wildcardClass52 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass55 = calculadora54.getClass();
        int[] intArray56 = new int[] {};
        float float59 = calculadora54.calcularMedia(intArray56, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass61 = calculadora60.getClass();
        int[] intArray62 = new int[] {};
        float float65 = calculadora60.calcularMedia(intArray62, 100, 1);
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        float float69 = calculadora54.calcularMedia(intArray62, 10, (int) 'a');
        float float72 = calculadora0.calcularMedia(intArray62, (int) (byte) -1, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        java.lang.Class<?> wildcardClass79 = intArray75.getClass();
        java.lang.Class<?> wildcardClass80 = intArray75.getClass();
        java.lang.Class<?> wildcardClass81 = intArray75.getClass();
        java.lang.Class<?> wildcardClass82 = intArray75.getClass();
        float float85 = calculadora0.calcularMedia(intArray75, (int) (short) 10, (int) (short) -1);
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals((float) float36, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 0.0f + "'", float45 == 0.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 55.0f + "'", float48 == 55.0f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals((float) float69, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test410");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora21.calcularMedia(intArray41, 10, (int) (short) 0);
        float float54 = calculadora0.calcularMedia(intArray41, (int) (short) 0, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray63 = new int[] {};
        float float66 = calculadora61.calcularMedia(intArray63, 100, 1);
        java.lang.Class<?> wildcardClass67 = intArray63.getClass();
        float float70 = calculadora55.calcularMedia(intArray63, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass72 = calculadora71.getClass();
        int[] intArray76 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float79 = calculadora71.calcularMedia(intArray76, 0, (int) (short) 1);
        float float82 = calculadora55.calcularMedia(intArray76, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora83 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass84 = calculadora83.getClass();
        int[] intArray85 = new int[] {};
        float float88 = calculadora83.calcularMedia(intArray85, 100, 1);
        java.lang.Class<?> wildcardClass89 = intArray85.getClass();
        java.lang.Class<?> wildcardClass90 = intArray85.getClass();
        float float93 = calculadora55.calcularMedia(intArray85, (int) (byte) -1, (int) (byte) -1);
        float float96 = calculadora0.calcularMedia(intArray85, (int) 'a', (int) 'a');
        java.lang.Class<?> wildcardClass97 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass99 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 0.0f + "'", float79 == 0.0f);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + 55.0f + "'", float82 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + (-1.0f) + "'", float96 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test411");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass12 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray18 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float21 = calculadora13.calcularMedia(intArray18, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass23 = calculadora22.getClass();
        int[] intArray24 = new int[] {};
        float float27 = calculadora22.calcularMedia(intArray24, 100, 1);
        java.lang.Class<?> wildcardClass28 = intArray24.getClass();
        float float31 = calculadora13.calcularMedia(intArray24, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float40 = calculadora32.calcularMedia(intArray37, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray46 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float49 = calculadora41.calcularMedia(intArray46, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora41.calcularMedia(intArray52, 0, 10);
        float float62 = calculadora32.calcularMedia(intArray52, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray69 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float72 = calculadora64.calcularMedia(intArray69, (int) (byte) 10, (int) '4');
        float float75 = calculadora63.calcularMedia(intArray69, 10, 0);
        float float78 = calculadora32.calcularMedia(intArray69, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass79 = intArray69.getClass();
        float float82 = calculadora13.calcularMedia(intArray69, (int) '4', (int) (short) -1);
        java.lang.Class<?> wildcardClass83 = intArray69.getClass();
        float float86 = calculadora0.calcularMedia(intArray69, 1, (int) ' ');
        java.lang.Class<?> wildcardClass87 = intArray69.getClass();
        java.lang.Class<?> wildcardClass88 = intArray69.getClass();
        java.lang.Class<?> wildcardClass89 = intArray69.getClass();
        java.lang.Class<?> wildcardClass90 = intArray69.getClass();
        java.lang.Class<?> wildcardClass91 = intArray69.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 10.0f + "'", float21 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals((float) float31, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 0.0f + "'", float40 == 0.0f);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 10.0f + "'", float49 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 10.0f + "'", float72 == 10.0f);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + 5.5f + "'", float86 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test412");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass22 = calculadora13.getClass();
        int[] intArray23 = null;
        float float26 = calculadora13.calcularMedia(intArray23, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        float float39 = calculadora27.calcularMedia(intArray33, 10, 0);
        float float42 = calculadora13.calcularMedia(intArray33, 100, (int) '#');
        float float45 = calculadora0.calcularMedia(intArray33, (int) (byte) 1, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray51 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float54 = calculadora46.calcularMedia(intArray51, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        java.lang.Class<?> wildcardClass61 = intArray57.getClass();
        java.lang.Class<?> wildcardClass62 = intArray57.getClass();
        float float65 = calculadora46.calcularMedia(intArray57, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray71 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float74 = calculadora66.calcularMedia(intArray71, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass76 = calculadora75.getClass();
        int[] intArray77 = new int[] {};
        float float80 = calculadora75.calcularMedia(intArray77, 100, 1);
        java.lang.Class<?> wildcardClass81 = intArray77.getClass();
        float float84 = calculadora66.calcularMedia(intArray77, 0, 10);
        float float87 = calculadora46.calcularMedia(intArray77, (int) (short) 0, (int) (short) 1);
        float float90 = calculadora0.calcularMedia(intArray77, (-1), (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 10.0f + "'", float54 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 10.0f + "'", float74 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertEquals((float) float84, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float87, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test413");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        int[] intArray16 = null;
        float float19 = calculadora10.calcularMedia(intArray16, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        java.lang.Class<?> wildcardClass36 = intArray31.getClass();
        float float39 = calculadora20.calcularMedia(intArray31, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora20.calcularMedia(intArray51, (int) (short) 0, (int) (short) 1);
        float float64 = calculadora10.calcularMedia(intArray51, (int) (short) 10, (int) (byte) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray70 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float73 = calculadora65.calcularMedia(intArray70, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        java.lang.Class<?> wildcardClass75 = intArray70.getClass();
        java.lang.Class<?> wildcardClass76 = intArray70.getClass();
        float float79 = calculadora10.calcularMedia(intArray70, 100, 0);
        float float82 = calculadora0.calcularMedia(intArray70, 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass83 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass84 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 10.0f + "'", float73 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test414");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float48 = calculadora40.calcularMedia(intArray45, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass59 = calculadora58.getClass();
        int[] intArray60 = new int[] {};
        float float63 = calculadora58.calcularMedia(intArray60, 100, 1);
        java.lang.Class<?> wildcardClass64 = intArray60.getClass();
        float float67 = calculadora49.calcularMedia(intArray60, 0, 10);
        float float70 = calculadora40.calcularMedia(intArray60, 10, (int) (short) 0);
        java.lang.Class<?> wildcardClass71 = intArray60.getClass();
        float float74 = calculadora0.calcularMedia(intArray60, (int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass77 = calculadora76.getClass();
        int[] intArray78 = new int[] {};
        float float81 = calculadora76.calcularMedia(intArray78, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora82 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass83 = calculadora82.getClass();
        int[] intArray84 = new int[] {};
        float float87 = calculadora82.calcularMedia(intArray84, 100, 1);
        java.lang.Class<?> wildcardClass88 = intArray84.getClass();
        float float91 = calculadora76.calcularMedia(intArray84, 10, (int) 'a');
        java.lang.Class<?> wildcardClass92 = intArray84.getClass();
        java.lang.Class<?> wildcardClass93 = intArray84.getClass();
        float float96 = calculadora0.calcularMedia(intArray84, (int) (short) 1, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass99 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 0.0f + "'", float48 == 0.0f);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals((float) float67, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertEquals((float) float91, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + (-1.0f) + "'", float96 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test415");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float27 = calculadora19.calcularMedia(intArray24, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        float float39 = calculadora19.calcularMedia(intArray33, (int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass40 = intArray33.getClass();
        java.lang.Class<?> wildcardClass41 = intArray33.getClass();
        float float44 = calculadora0.calcularMedia(intArray33, (int) (short) -1, (int) (byte) 10);
        java.lang.Class<?> wildcardClass45 = intArray33.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 5.5f + "'", float39 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test416");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        float float23 = calculadora5.calcularMedia(intArray16, 0, 10);
        float float26 = calculadora0.calcularMedia(intArray16, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass27 = calculadora0.getClass();
        int[] intArray28 = null;
        float float31 = calculadora0.calcularMedia(intArray28, (int) (byte) 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        java.lang.Class<?> wildcardClass35 = calculadora33.getClass();
        java.lang.Class<?> wildcardClass36 = calculadora33.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray43 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float46 = calculadora38.calcularMedia(intArray43, (int) (byte) 10, (int) '4');
        float float49 = calculadora37.calcularMedia(intArray43, 10, 0);
        float float52 = calculadora33.calcularMedia(intArray43, 0, 100);
        int[] intArray53 = null;
        float float56 = calculadora33.calcularMedia(intArray53, (int) '#', (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray63 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float66 = calculadora58.calcularMedia(intArray63, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass68 = calculadora67.getClass();
        int[] intArray69 = new int[] {};
        float float72 = calculadora67.calcularMedia(intArray69, 100, 1);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        float float76 = calculadora58.calcularMedia(intArray69, 0, 10);
        float float79 = calculadora57.calcularMedia(intArray69, (int) (short) -1, (-1));
        float float82 = calculadora33.calcularMedia(intArray69, (int) (byte) -1, (int) (short) 0);
        float float85 = calculadora0.calcularMedia(intArray69, (int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass87 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals((float) float23, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + 10.0f + "'", float46 == 10.0f);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 36.0f + "'", float52 == 36.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 10.0f + "'", float66 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test417");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora40.calcularMedia(intArray48, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float64 = calculadora56.calcularMedia(intArray61, 0, (int) (short) 1);
        float float67 = calculadora40.calcularMedia(intArray61, 10, (int) (short) 100);
        float float70 = calculadora0.calcularMedia(intArray61, (int) (byte) -1, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray77 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float80 = calculadora72.calcularMedia(intArray77, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora81 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass82 = calculadora81.getClass();
        int[] intArray83 = new int[] {};
        float float86 = calculadora81.calcularMedia(intArray83, 100, 1);
        java.lang.Class<?> wildcardClass87 = intArray83.getClass();
        float float90 = calculadora72.calcularMedia(intArray83, 0, 10);
        java.lang.Class<?> wildcardClass91 = intArray83.getClass();
        float float94 = calculadora0.calcularMedia(intArray83, (int) (short) 100, (int) '4');
        java.lang.Class<?> wildcardClass95 = intArray83.getClass();
        java.lang.Class<?> wildcardClass96 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 55.0f + "'", float67 == 55.0f);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 10.0f + "'", float80 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals((float) float90, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test418");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass14 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray21 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float24 = calculadora16.calcularMedia(intArray21, (int) (byte) 10, (int) '4');
        float float27 = calculadora15.calcularMedia(intArray21, 10, 0);
        java.lang.Class<?> wildcardClass28 = calculadora15.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora29.calcularMedia(intArray41, (int) (short) -1, (-1));
        float float54 = calculadora15.calcularMedia(intArray41, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass64 = intArray60.getClass();
        java.lang.Class<?> wildcardClass65 = intArray60.getClass();
        java.lang.Class<?> wildcardClass66 = intArray60.getClass();
        float float69 = calculadora15.calcularMedia(intArray60, (int) '#', (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass71 = calculadora70.getClass();
        int[] intArray72 = new int[] {};
        float float75 = calculadora70.calcularMedia(intArray72, 100, 1);
        float float78 = calculadora15.calcularMedia(intArray72, 0, (int) (short) 10);
        float float81 = calculadora0.calcularMedia(intArray72, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass82 = intArray72.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 10.0f + "'", float24 == 10.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 97.0f + "'", float69 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertEquals((float) float78, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test419");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass5 = calculadora4.getClass();
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float12 = calculadora4.calcularMedia(intArray9, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray18 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float21 = calculadora13.calcularMedia(intArray18, (int) (byte) 10, (int) '4');
        float float24 = calculadora4.calcularMedia(intArray18, (int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass25 = intArray18.getClass();
        float float28 = calculadora0.calcularMedia(intArray18, (int) (short) 0, (int) (short) -1);
        java.lang.Class<?> wildcardClass29 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass30 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.0f + "'", float12 == 0.0f);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 10.0f + "'", float21 == 10.0f);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 5.5f + "'", float24 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test420");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        float float43 = calculadora31.calcularMedia(intArray37, 10, 0);
        float float46 = calculadora0.calcularMedia(intArray37, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        java.lang.Class<?> wildcardClass57 = intArray52.getClass();
        float float60 = calculadora0.calcularMedia(intArray52, 1, 0);
        java.lang.Class<?> wildcardClass61 = intArray52.getClass();
        java.lang.Class<?> wildcardClass62 = intArray52.getClass();
        java.lang.Class<?> wildcardClass63 = intArray52.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test421");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        float float56 = calculadora44.calcularMedia(intArray50, 10, 0);
        float float59 = calculadora13.calcularMedia(intArray50, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        java.lang.Class<?> wildcardClass70 = intArray65.getClass();
        float float73 = calculadora13.calcularMedia(intArray65, 10, (int) 'a');
        java.lang.Class<?> wildcardClass74 = intArray65.getClass();
        float float77 = calculadora0.calcularMedia(intArray65, (int) (short) -1, 1);
        java.lang.Class<?> wildcardClass78 = intArray65.getClass();
        java.lang.Class<?> wildcardClass79 = intArray65.getClass();
        java.lang.Class<?> wildcardClass80 = intArray65.getClass();
        java.lang.Class<?> wildcardClass81 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 53.5f + "'", float73 == 53.5f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test422");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        java.lang.Class<?> wildcardClass37 = intArray26.getClass();
        float float40 = calculadora0.calcularMedia(intArray26, (int) (byte) 1, (-1));
        java.lang.Class<?> wildcardClass41 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass42 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        java.lang.Class<?> wildcardClass59 = intArray54.getClass();
        float float62 = calculadora43.calcularMedia(intArray54, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass63 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass71 = calculadora70.getClass();
        int[] intArray72 = new int[] {};
        float float75 = calculadora70.calcularMedia(intArray72, 100, 1);
        java.lang.Class<?> wildcardClass76 = intArray72.getClass();
        float float79 = calculadora64.calcularMedia(intArray72, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass81 = calculadora80.getClass();
        int[] intArray85 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float88 = calculadora80.calcularMedia(intArray85, 0, (int) (short) 1);
        float float91 = calculadora64.calcularMedia(intArray85, 10, (int) (short) 100);
        float float94 = calculadora43.calcularMedia(intArray85, (int) ' ', (int) (byte) 10);
        float float97 = calculadora0.calcularMedia(intArray85, (int) (short) -1, (int) (short) 100);
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass99 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals((float) float79, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + 0.0f + "'", float88 == 0.0f);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + 55.0f + "'", float91 == 55.0f);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test423");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray17 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float20 = calculadora12.calcularMedia(intArray17, (int) (byte) 10, (int) '4');
        float float23 = calculadora11.calcularMedia(intArray17, 10, 0);
        float float26 = calculadora0.calcularMedia(intArray17, (-1), (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        java.lang.Class<?> wildcardClass29 = calculadora27.getClass();
        java.lang.Class<?> wildcardClass30 = calculadora27.getClass();
        java.lang.Class<?> wildcardClass31 = calculadora27.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        float float53 = calculadora27.calcularMedia(intArray43, (int) 'a', (int) ' ');
        float float56 = calculadora0.calcularMedia(intArray43, 0, 10);
        java.lang.Class<?> wildcardClass57 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 10.0f + "'", float20 == 10.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertEquals((float) float56, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test424");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass32 = calculadora23.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora23.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray39 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float42 = calculadora34.calcularMedia(intArray39, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass43 = calculadora34.getClass();
        int[] intArray44 = null;
        float float47 = calculadora34.calcularMedia(intArray44, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        float float60 = calculadora48.calcularMedia(intArray54, 10, 0);
        float float63 = calculadora34.calcularMedia(intArray54, 100, (int) '#');
        float float66 = calculadora23.calcularMedia(intArray54, (-1), (int) (short) 100);
        float float69 = calculadora0.calcularMedia(intArray54, (int) (byte) 10, 1);
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 0.0f + "'", float42 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test425");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray13 = new int[] {};
        float float16 = calculadora11.calcularMedia(intArray13, 100, 1);
        java.lang.Class<?> wildcardClass17 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray24 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float27 = calculadora19.calcularMedia(intArray24, (int) (byte) 10, (int) '4');
        float float30 = calculadora18.calcularMedia(intArray24, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float39 = calculadora31.calcularMedia(intArray36, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora31.calcularMedia(intArray51, 10, (int) (short) 0);
        float float64 = calculadora18.calcularMedia(intArray51, (int) (short) 0, 10);
        java.lang.Class<?> wildcardClass65 = intArray51.getClass();
        float float68 = calculadora11.calcularMedia(intArray51, (int) (short) 1, (int) (byte) 10);
        float float71 = calculadora0.calcularMedia(intArray51, (int) (short) -1, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray77 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float80 = calculadora72.calcularMedia(intArray77, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass81 = intArray77.getClass();
        java.lang.Class<?> wildcardClass82 = intArray77.getClass();
        java.lang.Class<?> wildcardClass83 = intArray77.getClass();
        java.lang.Class<?> wildcardClass84 = intArray77.getClass();
        java.lang.Class<?> wildcardClass85 = intArray77.getClass();
        float float88 = calculadora0.calcularMedia(intArray77, (int) (short) 100, 1);
        java.lang.Class<?> wildcardClass89 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 10.0f + "'", float27 == 10.0f);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 0.0f + "'", float39 == 0.0f);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertEquals((float) float64, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals((float) float68, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 10.0f + "'", float80 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test426");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        java.lang.Class<?> wildcardClass13 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        java.lang.Class<?> wildcardClass21 = intArray16.getClass();
        float float24 = calculadora0.calcularMedia(intArray16, (int) (byte) 1, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass26 = calculadora25.getClass();
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float33 = calculadora25.calcularMedia(intArray30, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray45 = new int[] {};
        float float48 = calculadora43.calcularMedia(intArray45, 100, 1);
        java.lang.Class<?> wildcardClass49 = intArray45.getClass();
        float float52 = calculadora34.calcularMedia(intArray45, 0, 10);
        float float55 = calculadora25.calcularMedia(intArray45, 10, (int) (short) 0);
        int[] intArray60 = new int[] { 0, 100, (byte) 0, 'a' };
        float float63 = calculadora25.calcularMedia(intArray60, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass64 = intArray60.getClass();
        float float67 = calculadora0.calcularMedia(intArray60, (int) (short) 100, (int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = intArray60.getClass();
        java.lang.Class<?> wildcardClass69 = intArray60.getClass();
        java.lang.Class<?> wildcardClass70 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + 0.0f + "'", float33 == 0.0f);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals((float) float52, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test427");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = intArray10.getClass();
        java.lang.Class<?> wildcardClass21 = intArray10.getClass();
        java.lang.Class<?> wildcardClass22 = intArray10.getClass();
        java.lang.Class<?> wildcardClass23 = intArray10.getClass();
        java.lang.Class<?> wildcardClass24 = intArray10.getClass();
        java.lang.Class<?> wildcardClass25 = intArray10.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test428");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray11 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float14 = calculadora6.calcularMedia(intArray11, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, (int) '#', 100);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora20.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora20.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray30 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float33 = calculadora25.calcularMedia(intArray30, (int) (byte) 10, (int) '4');
        float float36 = calculadora24.calcularMedia(intArray30, 10, 0);
        float float39 = calculadora20.calcularMedia(intArray30, 0, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        java.lang.Class<?> wildcardClass42 = calculadora40.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        float float61 = calculadora43.calcularMedia(intArray54, 0, 10);
        java.lang.Class<?> wildcardClass62 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray68 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float71 = calculadora63.calcularMedia(intArray68, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass73 = calculadora72.getClass();
        int[] intArray74 = new int[] {};
        float float77 = calculadora72.calcularMedia(intArray74, 100, 1);
        java.lang.Class<?> wildcardClass78 = intArray74.getClass();
        float float81 = calculadora63.calcularMedia(intArray74, 0, 10);
        float float84 = calculadora43.calcularMedia(intArray74, 0, (int) ' ');
        float float87 = calculadora40.calcularMedia(intArray74, (int) 'a', (int) (byte) 0);
        float float90 = calculadora20.calcularMedia(intArray74, (int) '#', (int) (byte) 100);
        java.lang.Class<?> wildcardClass91 = intArray74.getClass();
        float float94 = calculadora0.calcularMedia(intArray74, (int) (short) 1, (int) (short) 100);
        java.lang.Class<?> wildcardClass95 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 100.0f + "'", float18 == 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + 10.0f + "'", float33 == 10.0f);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 36.0f + "'", float39 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals((float) float61, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 10.0f + "'", float71 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals((float) float81, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float84, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertEquals((float) float90, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertEquals((float) float94, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test429");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray36 = new int[] {};
        float float39 = calculadora34.calcularMedia(intArray36, 100, 1);
        java.lang.Class<?> wildcardClass40 = intArray36.getClass();
        float float43 = calculadora28.calcularMedia(intArray36, 10, (int) 'a');
        float float46 = calculadora0.calcularMedia(intArray36, (int) 'a', (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        float float58 = calculadora0.calcularMedia(intArray52, (int) (short) 100, 100);
        java.lang.Class<?> wildcardClass59 = intArray52.getClass();
        java.lang.Class<?> wildcardClass60 = intArray52.getClass();
        java.lang.Class<?> wildcardClass61 = intArray52.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals((float) float43, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test430");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray11 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float14 = calculadora6.calcularMedia(intArray11, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, (int) '#', 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float27 = calculadora19.calcularMedia(intArray24, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass28 = calculadora19.getClass();
        int[] intArray29 = null;
        float float32 = calculadora19.calcularMedia(intArray29, (int) (short) 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass33 = calculadora19.getClass();
        java.lang.Class<?> wildcardClass34 = calculadora19.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass36 = calculadora35.getClass();
        int[] intArray37 = new int[] {};
        float float40 = calculadora35.calcularMedia(intArray37, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora35.calcularMedia(intArray43, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float59 = calculadora51.calcularMedia(intArray56, 0, (int) (short) 1);
        float float62 = calculadora35.calcularMedia(intArray56, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass64 = calculadora63.getClass();
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float71 = calculadora63.calcularMedia(intArray68, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray77 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float80 = calculadora72.calcularMedia(intArray77, (int) (byte) 10, (int) '4');
        float float83 = calculadora63.calcularMedia(intArray77, (int) (byte) 1, (int) '4');
        float float86 = calculadora35.calcularMedia(intArray77, (int) (byte) 10, (int) (byte) 10);
        float float89 = calculadora19.calcularMedia(intArray77, (int) ' ', (int) '#');
        java.lang.Class<?> wildcardClass90 = intArray77.getClass();
        float float93 = calculadora0.calcularMedia(intArray77, (int) (byte) 1, 10);
        java.lang.Class<?> wildcardClass94 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 100.0f + "'", float18 == 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 0.0f + "'", float59 == 0.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 55.0f + "'", float62 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 0.0f + "'", float71 == 0.0f);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 10.0f + "'", float80 == 10.0f);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 5.5f + "'", float83 == 5.5f);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertEquals((float) float89, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + 5.5f + "'", float93 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test431");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora23.calcularMedia(intArray31, 10, (int) 'a');
        java.lang.Class<?> wildcardClass39 = intArray31.getClass();
        float float42 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        java.lang.Class<?> wildcardClass59 = intArray54.getClass();
        float float62 = calculadora43.calcularMedia(intArray54, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass63 = calculadora43.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray70 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float73 = calculadora65.calcularMedia(intArray70, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass75 = calculadora74.getClass();
        int[] intArray76 = new int[] {};
        float float79 = calculadora74.calcularMedia(intArray76, 100, 1);
        java.lang.Class<?> wildcardClass80 = intArray76.getClass();
        float float83 = calculadora65.calcularMedia(intArray76, 0, 10);
        float float86 = calculadora64.calcularMedia(intArray76, (int) (short) -1, (-1));
        java.lang.Class<?> wildcardClass87 = intArray76.getClass();
        float float90 = calculadora43.calcularMedia(intArray76, (int) (byte) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass91 = intArray76.getClass();
        float float94 = calculadora0.calcularMedia(intArray76, 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass95 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 10.0f + "'", float73 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals((float) float83, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals((float) float90, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test432");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray26 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float29 = calculadora21.calcularMedia(intArray26, (int) (byte) 10, (int) '4');
        float float32 = calculadora0.calcularMedia(intArray26, 1, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float41 = calculadora33.calcularMedia(intArray38, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass42 = calculadora33.getClass();
        java.lang.Class<?> wildcardClass43 = calculadora33.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        float float56 = calculadora44.calcularMedia(intArray50, 10, 0);
        float float59 = calculadora33.calcularMedia(intArray50, (-1), (int) (byte) 0);
        float float62 = calculadora0.calcularMedia(intArray50, (int) (byte) 0, (int) (short) -1);
        java.lang.Class<?> wildcardClass63 = intArray50.getClass();
        java.lang.Class<?> wildcardClass64 = intArray50.getClass();
        java.lang.Class<?> wildcardClass65 = intArray50.getClass();
        java.lang.Class<?> wildcardClass66 = intArray50.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 10.0f + "'", float29 == 10.0f);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 0.0f + "'", float41 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test433");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray14 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float17 = calculadora9.calcularMedia(intArray14, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass18 = intArray14.getClass();
        java.lang.Class<?> wildcardClass19 = intArray14.getClass();
        float float22 = calculadora0.calcularMedia(intArray14, (int) (short) -1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray32 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float35 = calculadora27.calcularMedia(intArray32, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass37 = calculadora36.getClass();
        int[] intArray38 = new int[] {};
        float float41 = calculadora36.calcularMedia(intArray38, 100, 1);
        java.lang.Class<?> wildcardClass42 = intArray38.getClass();
        float float45 = calculadora27.calcularMedia(intArray38, 0, 10);
        java.lang.Class<?> wildcardClass46 = calculadora27.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray52 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float55 = calculadora47.calcularMedia(intArray52, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray58 = new int[] {};
        float float61 = calculadora56.calcularMedia(intArray58, 100, 1);
        java.lang.Class<?> wildcardClass62 = intArray58.getClass();
        float float65 = calculadora47.calcularMedia(intArray58, 0, 10);
        float float68 = calculadora27.calcularMedia(intArray58, 0, (int) ' ');
        java.lang.Class<?> wildcardClass69 = calculadora27.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass71 = calculadora70.getClass();
        int[] intArray75 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float78 = calculadora70.calcularMedia(intArray75, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass79 = intArray75.getClass();
        java.lang.Class<?> wildcardClass80 = intArray75.getClass();
        java.lang.Class<?> wildcardClass81 = intArray75.getClass();
        float float84 = calculadora27.calcularMedia(intArray75, 0, (int) (byte) -1);
        float float87 = calculadora0.calcularMedia(intArray75, (int) (byte) 100, (int) (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 0.0f + "'", float17 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + 10.0f + "'", float35 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + (-1.0f) + "'", float41 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals((float) float45, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 10.0f + "'", float55 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals((float) float65, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float68, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + 0.0f + "'", float78 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test434");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray11 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float14 = calculadora6.calcularMedia(intArray11, (int) (byte) 10, (int) '4');
        float float17 = calculadora5.calcularMedia(intArray11, 10, 0);
        java.lang.Class<?> wildcardClass18 = calculadora5.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora20.calcularMedia(intArray31, 0, 10);
        float float41 = calculadora19.calcularMedia(intArray31, (int) (short) -1, (-1));
        float float44 = calculadora5.calcularMedia(intArray31, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        java.lang.Class<?> wildcardClass55 = intArray50.getClass();
        java.lang.Class<?> wildcardClass56 = intArray50.getClass();
        float float59 = calculadora5.calcularMedia(intArray50, (int) '#', (int) (short) 100);
        float float62 = calculadora0.calcularMedia(intArray50, (int) '4', (int) (short) 100);
        java.lang.Class<?> wildcardClass63 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass64 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass65 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 10.0f + "'", float14 == 10.0f);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + (-1.0f) + "'", float17 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + (-1.0f) + "'", float41 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 97.0f + "'", float59 == 97.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 97.0f + "'", float62 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test435");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass5 = calculadora4.getClass();
        java.lang.Class<?> wildcardClass6 = calculadora4.getClass();
        java.lang.Class<?> wildcardClass7 = calculadora4.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora8 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora8.calcularMedia(intArray14, 10, 0);
        float float23 = calculadora4.calcularMedia(intArray14, 0, 100);
        int[] intArray24 = null;
        float float27 = calculadora4.calcularMedia(intArray24, (int) '#', (int) (short) -1);
        java.lang.Class<?> wildcardClass28 = calculadora4.getClass();
        java.lang.Class<?> wildcardClass29 = calculadora4.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray36 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float39 = calculadora31.calcularMedia(intArray36, (int) (byte) 10, (int) '4');
        float float42 = calculadora30.calcularMedia(intArray36, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float51 = calculadora43.calcularMedia(intArray48, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray63 = new int[] {};
        float float66 = calculadora61.calcularMedia(intArray63, 100, 1);
        java.lang.Class<?> wildcardClass67 = intArray63.getClass();
        float float70 = calculadora52.calcularMedia(intArray63, 0, 10);
        float float73 = calculadora43.calcularMedia(intArray63, 10, (int) (short) 0);
        float float76 = calculadora30.calcularMedia(intArray63, (int) (short) -1, (int) ' ');
        float float79 = calculadora4.calcularMedia(intArray63, (int) (byte) 0, (int) (short) 1);
        float float82 = calculadora0.calcularMedia(intArray63, (int) (short) 1, 1);
        java.lang.Class<?> wildcardClass83 = intArray63.getClass();
        java.lang.Class<?> wildcardClass84 = intArray63.getClass();
        java.lang.Class<?> wildcardClass85 = intArray63.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + (-1.0f) + "'", float20 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 36.0f + "'", float23 == 36.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 10.0f + "'", float39 == 10.0f);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertEquals((float) float79, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test436");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        java.lang.Class<?> wildcardClass44 = intArray39.getClass();
        java.lang.Class<?> wildcardClass45 = intArray39.getClass();
        java.lang.Class<?> wildcardClass46 = intArray39.getClass();
        float float49 = calculadora0.calcularMedia(intArray39, (int) 'a', (int) (short) 100);
        java.lang.Class<?> wildcardClass50 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass51 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 97.0f + "'", float49 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test437");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray36 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float39 = calculadora31.calcularMedia(intArray36, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass40 = intArray36.getClass();
        java.lang.Class<?> wildcardClass41 = intArray36.getClass();
        java.lang.Class<?> wildcardClass42 = intArray36.getClass();
        float float45 = calculadora0.calcularMedia(intArray36, (int) (byte) -1, (int) '#');
        java.lang.Class<?> wildcardClass46 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray53 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float56 = calculadora48.calcularMedia(intArray53, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass58 = calculadora57.getClass();
        int[] intArray59 = new int[] {};
        float float62 = calculadora57.calcularMedia(intArray59, 100, 1);
        java.lang.Class<?> wildcardClass63 = intArray59.getClass();
        float float66 = calculadora48.calcularMedia(intArray59, 0, 10);
        float float69 = calculadora47.calcularMedia(intArray59, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray76 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float79 = calculadora71.calcularMedia(intArray76, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass81 = calculadora80.getClass();
        int[] intArray82 = new int[] {};
        float float85 = calculadora80.calcularMedia(intArray82, 100, 1);
        java.lang.Class<?> wildcardClass86 = intArray82.getClass();
        float float89 = calculadora71.calcularMedia(intArray82, 0, 10);
        float float92 = calculadora70.calcularMedia(intArray82, (int) (short) -1, (-1));
        float float95 = calculadora47.calcularMedia(intArray82, (int) (byte) -1, (int) 'a');
        float float98 = calculadora0.calcularMedia(intArray82, (int) '4', (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = intArray82.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 10.0f + "'", float39 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 10.0f + "'", float56 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals((float) float66, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 10.0f + "'", float79 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertEquals((float) float89, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float98 + "' != '" + (-1.0f) + "'", float98 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test438");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora21.calcularMedia(intArray31, 0, 100);
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 10, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        java.lang.Class<?> wildcardClass46 = calculadora44.getClass();
        java.lang.Class<?> wildcardClass47 = calculadora44.getClass();
        java.lang.Class<?> wildcardClass48 = calculadora44.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass59 = calculadora58.getClass();
        int[] intArray60 = new int[] {};
        float float63 = calculadora58.calcularMedia(intArray60, 100, 1);
        java.lang.Class<?> wildcardClass64 = intArray60.getClass();
        float float67 = calculadora49.calcularMedia(intArray60, 0, 10);
        float float70 = calculadora44.calcularMedia(intArray60, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass71 = intArray60.getClass();
        float float74 = calculadora0.calcularMedia(intArray60, (int) (short) -1, (int) '#');
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        int[] intArray76 = null;
        float float79 = calculadora0.calcularMedia(intArray76, 0, 0);
        java.lang.Class<?> wildcardClass80 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 36.0f + "'", float40 == 36.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals((float) float67, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test439");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        float float33 = calculadora21.calcularMedia(intArray27, 10, 0);
        float float36 = calculadora0.calcularMedia(intArray27, (int) ' ', (int) (short) 0);
        java.lang.Class<?> wildcardClass37 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass38 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass39 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora40.calcularMedia(intArray48, 10, (int) 'a');
        java.lang.Class<?> wildcardClass56 = calculadora40.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass58 = calculadora57.getClass();
        int[] intArray59 = new int[] {};
        float float62 = calculadora57.calcularMedia(intArray59, 100, 1);
        java.lang.Class<?> wildcardClass63 = intArray59.getClass();
        java.lang.Class<?> wildcardClass64 = intArray59.getClass();
        float float67 = calculadora40.calcularMedia(intArray59, (int) ' ', (int) ' ');
        float float70 = calculadora0.calcularMedia(intArray59, 10, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test440");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass6 = calculadora5.getClass();
        int[] intArray10 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float13 = calculadora5.calcularMedia(intArray10, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray19 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float22 = calculadora14.calcularMedia(intArray19, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        java.lang.Class<?> wildcardClass29 = intArray25.getClass();
        float float32 = calculadora14.calcularMedia(intArray25, 0, 10);
        float float35 = calculadora5.calcularMedia(intArray25, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        float float48 = calculadora36.calcularMedia(intArray42, 10, 0);
        float float51 = calculadora5.calcularMedia(intArray42, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass52 = intArray42.getClass();
        float float55 = calculadora0.calcularMedia(intArray42, (int) (short) 0, (int) 'a');
        java.lang.Class<?> wildcardClass56 = intArray42.getClass();
        java.lang.Class<?> wildcardClass57 = intArray42.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 0.0f + "'", float13 == 0.0f);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 10.0f + "'", float22 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals((float) float32, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + (-1.0f) + "'", float35 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 36.0f + "'", float55 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test441");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        java.lang.Class<?> wildcardClass16 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        int[] intArray19 = new int[] {};
        float float22 = calculadora17.calcularMedia(intArray19, 100, 1);
        java.lang.Class<?> wildcardClass23 = intArray19.getClass();
        java.lang.Class<?> wildcardClass24 = intArray19.getClass();
        float float27 = calculadora0.calcularMedia(intArray19, (int) ' ', (int) ' ');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float36 = calculadora28.calcularMedia(intArray33, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass37 = calculadora28.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float52 = calculadora44.calcularMedia(intArray49, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass53 = intArray49.getClass();
        float float56 = calculadora38.calcularMedia(intArray49, (int) '#', 100);
        float float59 = calculadora28.calcularMedia(intArray49, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass60 = calculadora28.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray66 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float69 = calculadora61.calcularMedia(intArray66, (int) (byte) 10, (int) '4');
        float float72 = calculadora28.calcularMedia(intArray66, (int) (byte) 1, 10);
        float float75 = calculadora0.calcularMedia(intArray66, (int) (short) 100, (int) (short) 1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 0.0f + "'", float52 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 100.0f + "'", float56 == 100.0f);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 55.0f + "'", float59 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 10.0f + "'", float69 == 10.0f);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 5.5f + "'", float72 == 5.5f);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test442");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray52 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float55 = calculadora47.calcularMedia(intArray52, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray58 = new int[] {};
        float float61 = calculadora56.calcularMedia(intArray58, 100, 1);
        java.lang.Class<?> wildcardClass62 = intArray58.getClass();
        java.lang.Class<?> wildcardClass63 = intArray58.getClass();
        float float66 = calculadora47.calcularMedia(intArray58, (int) ' ', (int) (byte) -1);
        int[] intArray69 = new int[] { 1, (short) 100 };
        float float72 = calculadora47.calcularMedia(intArray69, (int) (byte) 100, (int) (short) 100);
        float float75 = calculadora0.calcularMedia(intArray69, (int) (byte) 100, (int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = intArray69.getClass();
        java.lang.Class<?> wildcardClass77 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 10.0f + "'", float55 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test443");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora28.calcularMedia(intArray39, 0, 10);
        java.lang.Class<?> wildcardClass47 = intArray39.getClass();
        float float50 = calculadora0.calcularMedia(intArray39, 100, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float59 = calculadora51.calcularMedia(intArray56, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass60 = calculadora51.getClass();
        int[] intArray61 = null;
        float float64 = calculadora51.calcularMedia(intArray61, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray71 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float74 = calculadora66.calcularMedia(intArray71, (int) (byte) 10, (int) '4');
        float float77 = calculadora65.calcularMedia(intArray71, 10, 0);
        float float80 = calculadora51.calcularMedia(intArray71, 100, (int) '#');
        float float83 = calculadora0.calcularMedia(intArray71, (int) '#', (int) (byte) 100);
        java.lang.Class<?> wildcardClass84 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass85 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 0.0f + "'", float59 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 10.0f + "'", float74 == 10.0f);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 97.0f + "'", float83 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test444");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass54 = calculadora45.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        float float73 = calculadora55.calcularMedia(intArray66, 0, 10);
        float float76 = calculadora45.calcularMedia(intArray66, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray82 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float85 = calculadora77.calcularMedia(intArray82, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass86 = intArray82.getClass();
        float float89 = calculadora45.calcularMedia(intArray82, (int) '#', 10);
        java.lang.Class<?> wildcardClass90 = intArray82.getClass();
        float float93 = calculadora0.calcularMedia(intArray82, (int) (byte) 1, (int) (short) 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + 10.0f + "'", float85 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + (-1.0f) + "'", float89 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test445");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray34 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float37 = calculadora29.calcularMedia(intArray34, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora38 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass39 = calculadora38.getClass();
        int[] intArray40 = new int[] {};
        float float43 = calculadora38.calcularMedia(intArray40, 100, 1);
        java.lang.Class<?> wildcardClass44 = intArray40.getClass();
        java.lang.Class<?> wildcardClass45 = intArray40.getClass();
        float float48 = calculadora29.calcularMedia(intArray40, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass49 = calculadora29.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        float float62 = calculadora50.calcularMedia(intArray56, 10, 0);
        float float65 = calculadora29.calcularMedia(intArray56, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass67 = calculadora66.getClass();
        int[] intArray68 = new int[] {};
        float float71 = calculadora66.calcularMedia(intArray68, 100, 1);
        java.lang.Class<?> wildcardClass72 = intArray68.getClass();
        java.lang.Class<?> wildcardClass73 = intArray68.getClass();
        float float76 = calculadora29.calcularMedia(intArray68, 0, (int) '#');
        float float79 = calculadora23.calcularMedia(intArray68, (int) '#', (int) (byte) 0);
        float float82 = calculadora0.calcularMedia(intArray68, (int) (byte) 0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 10.0f + "'", float37 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertEquals((float) float82, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test446");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass36 = calculadora35.getClass();
        int[] intArray37 = new int[] {};
        float float40 = calculadora35.calcularMedia(intArray37, 100, 1);
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora26.calcularMedia(intArray37, 0, 10);
        float float47 = calculadora25.calcularMedia(intArray37, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass55 = calculadora54.getClass();
        int[] intArray56 = new int[] {};
        float float59 = calculadora54.calcularMedia(intArray56, 100, 1);
        java.lang.Class<?> wildcardClass60 = intArray56.getClass();
        float float63 = calculadora48.calcularMedia(intArray56, 10, (int) 'a');
        java.lang.Class<?> wildcardClass64 = intArray56.getClass();
        float float67 = calculadora25.calcularMedia(intArray56, (int) (short) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass68 = intArray56.getClass();
        java.lang.Class<?> wildcardClass69 = intArray56.getClass();
        java.lang.Class<?> wildcardClass70 = intArray56.getClass();
        java.lang.Class<?> wildcardClass71 = intArray56.getClass();
        float float74 = calculadora0.calcularMedia(intArray56, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals((float) float44, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals((float) float63, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test447");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray17 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float20 = calculadora12.calcularMedia(intArray17, (int) (byte) 10, (int) '4');
        float float23 = calculadora11.calcularMedia(intArray17, 10, 0);
        float float26 = calculadora0.calcularMedia(intArray17, (-1), (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        int[] intArray32 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float35 = calculadora27.calcularMedia(intArray32, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray41 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float44 = calculadora36.calcularMedia(intArray41, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora36.calcularMedia(intArray47, 0, 10);
        float float57 = calculadora27.calcularMedia(intArray47, 10, (int) (short) 0);
        int[] intArray62 = new int[] { 0, 100, (byte) 0, 'a' };
        float float65 = calculadora27.calcularMedia(intArray62, (int) (byte) -1, (int) 'a');
        float float68 = calculadora0.calcularMedia(intArray62, (int) (byte) -1, (int) 'a');
        java.lang.Class<?> wildcardClass69 = intArray62.getClass();
        java.lang.Class<?> wildcardClass70 = intArray62.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 10.0f + "'", float20 == 10.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + 0.0f + "'", float35 == 0.0f);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 10.0f + "'", float44 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test448");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora21.calcularMedia(intArray41, 10, (int) (short) 0);
        float float54 = calculadora0.calcularMedia(intArray41, (int) (short) 0, (int) 'a');
        int[] intArray55 = null;
        float float58 = calculadora0.calcularMedia(intArray55, (int) (byte) 100, (int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass60 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test449");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, (int) '#', 100);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        java.lang.Class<?> wildcardClass48 = intArray43.getClass();
        float float51 = calculadora32.calcularMedia(intArray43, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass52 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray59 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float62 = calculadora54.calcularMedia(intArray59, (int) (byte) 10, (int) '4');
        float float65 = calculadora53.calcularMedia(intArray59, 10, 0);
        float float68 = calculadora32.calcularMedia(intArray59, (int) ' ', (int) (short) 0);
        java.lang.Class<?> wildcardClass69 = intArray59.getClass();
        float float72 = calculadora0.calcularMedia(intArray59, (int) 'a', (int) (short) 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 100.0f + "'", float28 == 100.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 55.0f + "'", float31 == 55.0f);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 10.0f + "'", float62 == 10.0f);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test450");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray16 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float19 = calculadora11.calcularMedia(intArray16, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass21 = calculadora20.getClass();
        int[] intArray22 = new int[] {};
        float float25 = calculadora20.calcularMedia(intArray22, 100, 1);
        java.lang.Class<?> wildcardClass26 = intArray22.getClass();
        java.lang.Class<?> wildcardClass27 = intArray22.getClass();
        float float30 = calculadora11.calcularMedia(intArray22, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float39 = calculadora31.calcularMedia(intArray36, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora31.calcularMedia(intArray51, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray68 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float71 = calculadora63.calcularMedia(intArray68, (int) (byte) 10, (int) '4');
        float float74 = calculadora62.calcularMedia(intArray68, 10, 0);
        float float77 = calculadora31.calcularMedia(intArray68, (int) (short) 0, 0);
        float float80 = calculadora11.calcularMedia(intArray68, (-1), (int) '4');
        float float83 = calculadora0.calcularMedia(intArray68, (int) (short) -1, 100);
        java.lang.Class<?> wildcardClass84 = intArray68.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 10.0f + "'", float19 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + (-1.0f) + "'", float25 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 0.0f + "'", float39 == 0.0f);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 10.0f + "'", float71 == 10.0f);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test451");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        float float38 = calculadora0.calcularMedia(intArray30, (int) (byte) -1, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora39.calcularMedia(intArray47, 10, (int) 'a');
        java.lang.Class<?> wildcardClass55 = intArray47.getClass();
        java.lang.Class<?> wildcardClass56 = intArray47.getClass();
        float float59 = calculadora0.calcularMedia(intArray47, 0, (int) '#');
        java.lang.Class<?> wildcardClass60 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass61 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray67 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float70 = calculadora62.calcularMedia(intArray67, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass72 = calculadora71.getClass();
        int[] intArray73 = new int[] {};
        float float76 = calculadora71.calcularMedia(intArray73, 100, 1);
        java.lang.Class<?> wildcardClass77 = intArray73.getClass();
        java.lang.Class<?> wildcardClass78 = intArray73.getClass();
        float float81 = calculadora62.calcularMedia(intArray73, (int) ' ', (int) (byte) -1);
        float float84 = calculadora0.calcularMedia(intArray73, (int) (byte) 1, (int) (short) 1);
        java.lang.Class<?> wildcardClass85 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 10.0f + "'", float70 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test452");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass14 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass15 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass16 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        java.lang.Class<?> wildcardClass19 = calculadora17.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora17.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora17.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray28 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float31 = calculadora23.calcularMedia(intArray28, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        int[] intArray34 = new int[] {};
        float float37 = calculadora32.calcularMedia(intArray34, 100, 1);
        java.lang.Class<?> wildcardClass38 = intArray34.getClass();
        float float41 = calculadora23.calcularMedia(intArray34, 0, 10);
        float float44 = calculadora22.calcularMedia(intArray34, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray51 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float54 = calculadora46.calcularMedia(intArray51, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        java.lang.Class<?> wildcardClass61 = intArray57.getClass();
        float float64 = calculadora46.calcularMedia(intArray57, 0, 10);
        float float67 = calculadora45.calcularMedia(intArray57, (int) (short) -1, (-1));
        float float70 = calculadora22.calcularMedia(intArray57, (int) (byte) -1, (int) 'a');
        int[] intArray71 = null;
        float float74 = calculadora22.calcularMedia(intArray71, (-1), (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray80 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float83 = calculadora75.calcularMedia(intArray80, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass84 = intArray80.getClass();
        float float87 = calculadora22.calcularMedia(intArray80, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass88 = intArray80.getClass();
        java.lang.Class<?> wildcardClass89 = intArray80.getClass();
        float float92 = calculadora17.calcularMedia(intArray80, (int) (byte) -1, (int) (byte) -1);
        float float95 = calculadora0.calcularMedia(intArray80, 10, (-1));
        java.lang.Class<?> wildcardClass96 = intArray80.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 10.0f + "'", float31 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 10.0f + "'", float54 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals((float) float64, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 10.0f + "'", float83 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + (-1.0f) + "'", float92 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + (-1.0f) + "'", float95 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test453");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        java.lang.Class<?> wildcardClass29 = calculadora10.getClass();
        java.lang.Class<?> wildcardClass30 = calculadora10.getClass();
        java.lang.Class<?> wildcardClass31 = calculadora10.getClass();
        java.lang.Class<?> wildcardClass32 = calculadora10.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora10.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray39 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float42 = calculadora34.calcularMedia(intArray39, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray48 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float51 = calculadora43.calcularMedia(intArray48, (int) (byte) 10, (int) '4');
        float float54 = calculadora34.calcularMedia(intArray48, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float63 = calculadora55.calcularMedia(intArray60, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray69 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float72 = calculadora64.calcularMedia(intArray69, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass74 = calculadora73.getClass();
        int[] intArray75 = new int[] {};
        float float78 = calculadora73.calcularMedia(intArray75, 100, 1);
        java.lang.Class<?> wildcardClass79 = intArray75.getClass();
        float float82 = calculadora64.calcularMedia(intArray75, 0, 10);
        float float85 = calculadora55.calcularMedia(intArray75, 10, (int) (short) 0);
        float float88 = calculadora34.calcularMedia(intArray75, (int) (short) 0, (int) 'a');
        float float91 = calculadora10.calcularMedia(intArray75, (int) (short) 10, (int) 'a');
        float float94 = calculadora0.calcularMedia(intArray75, 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass95 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 0.0f + "'", float42 == 0.0f);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 10.0f + "'", float51 == 10.0f);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 5.5f + "'", float54 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 0.0f + "'", float63 == 0.0f);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 10.0f + "'", float72 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals((float) float82, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float91, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test454");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray14 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float17 = calculadora9.calcularMedia(intArray14, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass18 = intArray14.getClass();
        java.lang.Class<?> wildcardClass19 = intArray14.getClass();
        float float22 = calculadora0.calcularMedia(intArray14, (int) (short) -1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass23 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        java.lang.Class<?> wildcardClass46 = intArray41.getClass();
        float float49 = calculadora30.calcularMedia(intArray41, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass50 = calculadora30.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora51.calcularMedia(intArray57, 10, 0);
        float float66 = calculadora30.calcularMedia(intArray57, (int) ' ', (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass68 = calculadora67.getClass();
        int[] intArray69 = new int[] {};
        float float72 = calculadora67.calcularMedia(intArray69, 100, 1);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        java.lang.Class<?> wildcardClass74 = intArray69.getClass();
        float float77 = calculadora30.calcularMedia(intArray69, 0, (int) '#');
        float float80 = calculadora24.calcularMedia(intArray69, (int) '#', (int) (byte) 0);
        float float83 = calculadora0.calcularMedia(intArray69, (int) (byte) 1, (int) 'a');
        java.lang.Class<?> wildcardClass84 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass85 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 0.0f + "'", float17 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertEquals((float) float83, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test455");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        int[] intArray20 = null;
        float float23 = calculadora0.calcularMedia(intArray20, (int) '#', (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray30 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float33 = calculadora25.calcularMedia(intArray30, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray36 = new int[] {};
        float float39 = calculadora34.calcularMedia(intArray36, 100, 1);
        java.lang.Class<?> wildcardClass40 = intArray36.getClass();
        float float43 = calculadora25.calcularMedia(intArray36, 0, 10);
        float float46 = calculadora24.calcularMedia(intArray36, (int) (short) -1, (-1));
        float float49 = calculadora0.calcularMedia(intArray36, (int) (byte) -1, (int) (short) 0);
        int[] intArray50 = null;
        float float53 = calculadora0.calcularMedia(intArray50, 100, 1);
        java.lang.Class<?> wildcardClass54 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass55 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass56 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + 10.0f + "'", float33 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals((float) float43, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test456");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora28.calcularMedia(intArray39, 0, 10);
        java.lang.Class<?> wildcardClass47 = intArray39.getClass();
        float float50 = calculadora0.calcularMedia(intArray39, 100, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float59 = calculadora51.calcularMedia(intArray56, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass60 = calculadora51.getClass();
        int[] intArray61 = null;
        float float64 = calculadora51.calcularMedia(intArray61, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray71 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float74 = calculadora66.calcularMedia(intArray71, (int) (byte) 10, (int) '4');
        float float77 = calculadora65.calcularMedia(intArray71, 10, 0);
        float float80 = calculadora51.calcularMedia(intArray71, 100, (int) '#');
        float float83 = calculadora0.calcularMedia(intArray71, (int) '#', (int) (byte) 100);
        java.lang.Class<?> wildcardClass84 = intArray71.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 0.0f + "'", float59 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 10.0f + "'", float74 == 10.0f);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 97.0f + "'", float83 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test457");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray17 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float20 = calculadora12.calcularMedia(intArray17, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        java.lang.Class<?> wildcardClass27 = intArray23.getClass();
        float float30 = calculadora12.calcularMedia(intArray23, 0, 10);
        java.lang.Class<?> wildcardClass31 = calculadora12.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        float float53 = calculadora12.calcularMedia(intArray43, 0, (int) ' ');
        java.lang.Class<?> wildcardClass54 = calculadora12.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        int[] intArray57 = new int[] {};
        float float60 = calculadora55.calcularMedia(intArray57, 100, 1);
        java.lang.Class<?> wildcardClass61 = intArray57.getClass();
        float float64 = calculadora12.calcularMedia(intArray57, (int) (byte) 100, (int) (short) -1);
        java.lang.Class<?> wildcardClass65 = intArray57.getClass();
        java.lang.Class<?> wildcardClass66 = intArray57.getClass();
        java.lang.Class<?> wildcardClass67 = intArray57.getClass();
        float float70 = calculadora0.calcularMedia(intArray57, (int) (byte) 10, (int) 'a');
        java.lang.Class<?> wildcardClass71 = intArray57.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 10.0f + "'", float20 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals((float) float30, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float53, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals((float) float70, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test458");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass30 = calculadora21.getClass();
        int[] intArray31 = null;
        float float34 = calculadora21.calcularMedia(intArray31, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray41 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float44 = calculadora36.calcularMedia(intArray41, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora36.calcularMedia(intArray47, 0, 10);
        float float57 = calculadora35.calcularMedia(intArray47, (int) (short) -1, (-1));
        float float60 = calculadora21.calcularMedia(intArray47, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass62 = calculadora61.getClass();
        int[] intArray63 = new int[] {};
        float float66 = calculadora61.calcularMedia(intArray63, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora67 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass68 = calculadora67.getClass();
        int[] intArray69 = new int[] {};
        float float72 = calculadora67.calcularMedia(intArray69, 100, 1);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        float float76 = calculadora61.calcularMedia(intArray69, 10, (int) 'a');
        java.lang.Class<?> wildcardClass77 = intArray69.getClass();
        java.lang.Class<?> wildcardClass78 = intArray69.getClass();
        float float81 = calculadora21.calcularMedia(intArray69, (int) (short) 1, (-1));
        java.lang.Class<?> wildcardClass82 = intArray69.getClass();
        float float85 = calculadora0.calcularMedia(intArray69, 0, 0);
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass87 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass88 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass89 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass90 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 10.0f + "'", float44 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + (-1.0f) + "'", float60 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + (-1.0f) + "'", float66 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test459");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        float float45 = calculadora33.calcularMedia(intArray39, 10, 0);
        java.lang.Class<?> wildcardClass46 = intArray39.getClass();
        float float49 = calculadora0.calcularMedia(intArray39, (int) (byte) 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass50 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass51 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray57 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float60 = calculadora52.calcularMedia(intArray57, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass61 = calculadora52.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray64 = new int[] {};
        float float67 = calculadora62.calcularMedia(intArray64, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray73 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float76 = calculadora68.calcularMedia(intArray73, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass77 = intArray73.getClass();
        float float80 = calculadora62.calcularMedia(intArray73, (int) '#', 100);
        float float83 = calculadora52.calcularMedia(intArray73, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass84 = calculadora52.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora85 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray90 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float93 = calculadora85.calcularMedia(intArray90, (int) (byte) 10, (int) '4');
        float float96 = calculadora52.calcularMedia(intArray90, (int) (byte) 1, 10);
        float float99 = calculadora0.calcularMedia(intArray90, (int) 'a', 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 0.0f + "'", float60 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.0f + "'", float76 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 100.0f + "'", float80 == 100.0f);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 55.0f + "'", float83 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + 10.0f + "'", float93 == 10.0f);
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + 5.5f + "'", float96 == 5.5f);
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + 97.0f + "'", float99 == 97.0f);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test460");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, 0, 10);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora0.calcularMedia(intArray37, (int) '#', 10);
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float54 = calculadora46.calcularMedia(intArray51, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass55 = calculadora46.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora56 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass57 = calculadora56.getClass();
        int[] intArray58 = new int[] {};
        float float61 = calculadora56.calcularMedia(intArray58, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float70 = calculadora62.calcularMedia(intArray67, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = intArray67.getClass();
        float float74 = calculadora56.calcularMedia(intArray67, (int) '#', 100);
        float float77 = calculadora46.calcularMedia(intArray67, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass78 = intArray67.getClass();
        float float81 = calculadora0.calcularMedia(intArray67, (int) '#', (int) (short) -1);
        int[] intArray82 = null;
        float float85 = calculadora0.calcularMedia(intArray82, (int) (short) 100, (int) '#');
        java.lang.Class<?> wildcardClass86 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass87 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals((float) float28, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + (-1.0f) + "'", float31 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 0.0f + "'", float54 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 0.0f + "'", float70 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 100.0f + "'", float74 == 100.0f);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + 55.0f + "'", float77 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test461");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora21.calcularMedia(intArray41, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        float float64 = calculadora52.calcularMedia(intArray58, 10, 0);
        float float67 = calculadora21.calcularMedia(intArray58, (int) (short) 0, 0);
        float float70 = calculadora11.calcularMedia(intArray58, (int) (byte) 100, (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass72 = calculadora71.getClass();
        java.lang.Class<?> wildcardClass73 = calculadora71.getClass();
        java.lang.Class<?> wildcardClass74 = calculadora71.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray81 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float84 = calculadora76.calcularMedia(intArray81, (int) (byte) 10, (int) '4');
        float float87 = calculadora75.calcularMedia(intArray81, 10, 0);
        float float90 = calculadora71.calcularMedia(intArray81, 0, 100);
        float float93 = calculadora11.calcularMedia(intArray81, (int) (short) -1, (int) (byte) 1);
        float float96 = calculadora0.calcularMedia(intArray81, 0, 100);
        java.lang.Class<?> wildcardClass97 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + 10.0f + "'", float84 == 10.0f);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + 36.0f + "'", float90 == 36.0f);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + 36.0f + "'", float96 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test462");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray45 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float48 = calculadora40.calcularMedia(intArray45, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        int[] intArray51 = new int[] {};
        float float54 = calculadora49.calcularMedia(intArray51, 100, 1);
        java.lang.Class<?> wildcardClass55 = intArray51.getClass();
        float float58 = calculadora40.calcularMedia(intArray51, 0, 10);
        float float61 = calculadora0.calcularMedia(intArray51, (int) 'a', 10);
        java.lang.Class<?> wildcardClass62 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass64 = calculadora63.getClass();
        java.lang.Class<?> wildcardClass65 = calculadora63.getClass();
        java.lang.Class<?> wildcardClass66 = calculadora63.getClass();
        java.lang.Class<?> wildcardClass67 = calculadora63.getClass();
        java.lang.Class<?> wildcardClass68 = calculadora63.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora69 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass70 = calculadora69.getClass();
        int[] intArray71 = new int[] {};
        float float74 = calculadora69.calcularMedia(intArray71, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora75 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass76 = calculadora75.getClass();
        int[] intArray77 = new int[] {};
        float float80 = calculadora75.calcularMedia(intArray77, 100, 1);
        java.lang.Class<?> wildcardClass81 = intArray77.getClass();
        float float84 = calculadora69.calcularMedia(intArray77, 10, (int) 'a');
        float float87 = calculadora63.calcularMedia(intArray77, (int) (byte) 0, (int) 'a');
        float float90 = calculadora0.calcularMedia(intArray77, (int) ' ', 100);
        java.lang.Class<?> wildcardClass91 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 10.0f + "'", float48 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals((float) float58, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertEquals((float) float84, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float87, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float90, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test463");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        int[] intArray6 = null;
        float float9 = calculadora0.calcularMedia(intArray6, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray15 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float18 = calculadora10.calcularMedia(intArray15, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray21 = new int[] {};
        float float24 = calculadora19.calcularMedia(intArray21, 100, 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        java.lang.Class<?> wildcardClass26 = intArray21.getClass();
        float float29 = calculadora10.calcularMedia(intArray21, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora30.calcularMedia(intArray41, 0, 10);
        float float51 = calculadora10.calcularMedia(intArray41, (int) (short) 0, (int) (short) 1);
        float float54 = calculadora0.calcularMedia(intArray41, (int) (short) 10, (int) (byte) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        float float73 = calculadora55.calcularMedia(intArray66, 0, 10);
        float float76 = calculadora0.calcularMedia(intArray66, (int) (short) 0, 100);
        java.lang.Class<?> wildcardClass77 = intArray66.getClass();
        java.lang.Class<?> wildcardClass78 = intArray66.getClass();
        java.lang.Class<?> wildcardClass79 = intArray66.getClass();
        java.lang.Class<?> wildcardClass80 = intArray66.getClass();
        java.lang.Class<?> wildcardClass81 = intArray66.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-1.0f) + "'", float9 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float76, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test464");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        float float38 = calculadora0.calcularMedia(intArray30, (int) (byte) -1, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora39.calcularMedia(intArray47, 10, (int) 'a');
        java.lang.Class<?> wildcardClass55 = intArray47.getClass();
        java.lang.Class<?> wildcardClass56 = intArray47.getClass();
        float float59 = calculadora0.calcularMedia(intArray47, 0, (int) '#');
        java.lang.Class<?> wildcardClass60 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass61 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass62 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass63 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass64 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass66 = calculadora65.getClass();
        java.lang.Class<?> wildcardClass67 = calculadora65.getClass();
        java.lang.Class<?> wildcardClass68 = calculadora65.getClass();
        java.lang.Class<?> wildcardClass69 = calculadora65.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora70 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray75 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float78 = calculadora70.calcularMedia(intArray75, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass80 = calculadora79.getClass();
        int[] intArray81 = new int[] {};
        float float84 = calculadora79.calcularMedia(intArray81, 100, 1);
        java.lang.Class<?> wildcardClass85 = intArray81.getClass();
        float float88 = calculadora70.calcularMedia(intArray81, 0, 10);
        float float91 = calculadora65.calcularMedia(intArray81, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass92 = intArray81.getClass();
        java.lang.Class<?> wildcardClass93 = intArray81.getClass();
        java.lang.Class<?> wildcardClass94 = intArray81.getClass();
        java.lang.Class<?> wildcardClass95 = intArray81.getClass();
        java.lang.Class<?> wildcardClass96 = intArray81.getClass();
        float float99 = calculadora0.calcularMedia(intArray81, (int) '4', (int) 'a');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + 10.0f + "'", float78 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals((float) float88, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertEquals((float) float99, Float.NaN, 0);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test465");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        float float26 = calculadora14.calcularMedia(intArray20, 10, 0);
        float float29 = calculadora0.calcularMedia(intArray20, 100, (int) '#');
        java.lang.Class<?> wildcardClass30 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray36 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float39 = calculadora31.calcularMedia(intArray36, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora31.calcularMedia(intArray42, 0, 10);
        java.lang.Class<?> wildcardClass50 = calculadora31.getClass();
        java.lang.Class<?> wildcardClass51 = calculadora31.getClass();
        java.lang.Class<?> wildcardClass52 = calculadora31.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora31.getClass();
        java.lang.Class<?> wildcardClass54 = calculadora31.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass56 = calculadora55.getClass();
        java.lang.Class<?> wildcardClass57 = calculadora55.getClass();
        java.lang.Class<?> wildcardClass58 = calculadora55.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        float float71 = calculadora59.calcularMedia(intArray65, 10, 0);
        float float74 = calculadora55.calcularMedia(intArray65, 0, 100);
        java.lang.Class<?> wildcardClass75 = intArray65.getClass();
        java.lang.Class<?> wildcardClass76 = intArray65.getClass();
        float float79 = calculadora31.calcularMedia(intArray65, 100, (int) (short) -1);
        java.lang.Class<?> wildcardClass80 = intArray65.getClass();
        float float83 = calculadora0.calcularMedia(intArray65, (int) (short) -1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass84 = intArray65.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 10.0f + "'", float39 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals((float) float49, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 36.0f + "'", float74 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test466");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass14 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass16 = calculadora15.getClass();
        int[] intArray20 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float23 = calculadora15.calcularMedia(intArray20, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass24 = calculadora15.getClass();
        java.lang.Class<?> wildcardClass25 = calculadora15.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora15.getClass();
        java.lang.Class<?> wildcardClass27 = calculadora15.getClass();
        java.lang.Class<?> wildcardClass28 = calculadora15.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        int[] intArray35 = null;
        float float38 = calculadora29.calcularMedia(intArray35, (int) (short) 0, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray44 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float47 = calculadora39.calcularMedia(intArray44, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        java.lang.Class<?> wildcardClass55 = intArray50.getClass();
        float float58 = calculadora39.calcularMedia(intArray50, (int) ' ', (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora59 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray64 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float67 = calculadora59.calcularMedia(intArray64, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        int[] intArray70 = new int[] {};
        float float73 = calculadora68.calcularMedia(intArray70, 100, 1);
        java.lang.Class<?> wildcardClass74 = intArray70.getClass();
        float float77 = calculadora59.calcularMedia(intArray70, 0, 10);
        float float80 = calculadora39.calcularMedia(intArray70, (int) (short) 0, (int) (short) 1);
        float float83 = calculadora29.calcularMedia(intArray70, (int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = intArray70.getClass();
        float float87 = calculadora15.calcularMedia(intArray70, 0, (int) ' ');
        float float90 = calculadora0.calcularMedia(intArray70, (int) (byte) 1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 0.0f + "'", float23 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 10.0f + "'", float47 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + 10.0f + "'", float67 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float80, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + (-1.0f) + "'", float83 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertEquals((float) float87, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test467");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray28 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float31 = calculadora23.calcularMedia(intArray28, (int) (byte) 10, (int) '4');
        float float34 = calculadora22.calcularMedia(intArray28, 10, 0);
        java.lang.Class<?> wildcardClass35 = calculadora22.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora46 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass47 = calculadora46.getClass();
        int[] intArray48 = new int[] {};
        float float51 = calculadora46.calcularMedia(intArray48, 100, 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        float float55 = calculadora37.calcularMedia(intArray48, 0, 10);
        float float58 = calculadora36.calcularMedia(intArray48, (int) (short) -1, (-1));
        float float61 = calculadora22.calcularMedia(intArray48, (int) (short) 100, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray67 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float70 = calculadora62.calcularMedia(intArray67, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass71 = intArray67.getClass();
        java.lang.Class<?> wildcardClass72 = intArray67.getClass();
        java.lang.Class<?> wildcardClass73 = intArray67.getClass();
        float float76 = calculadora22.calcularMedia(intArray67, (int) '#', (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora77 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass78 = calculadora77.getClass();
        int[] intArray79 = new int[] {};
        float float82 = calculadora77.calcularMedia(intArray79, 100, 1);
        float float85 = calculadora22.calcularMedia(intArray79, 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass86 = intArray79.getClass();
        java.lang.Class<?> wildcardClass87 = intArray79.getClass();
        java.lang.Class<?> wildcardClass88 = intArray79.getClass();
        float float91 = calculadora0.calcularMedia(intArray79, (int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass92 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 10.0f + "'", float31 == 10.0f);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals((float) float55, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + (-1.0f) + "'", float58 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + (-1.0f) + "'", float61 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 10.0f + "'", float70 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 97.0f + "'", float76 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertEquals((float) float85, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertEquals((float) float91, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test468");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        float float38 = calculadora0.calcularMedia(intArray30, (int) (byte) -1, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora39.calcularMedia(intArray47, 10, (int) 'a');
        java.lang.Class<?> wildcardClass55 = intArray47.getClass();
        java.lang.Class<?> wildcardClass56 = intArray47.getClass();
        float float59 = calculadora0.calcularMedia(intArray47, 0, (int) '#');
        java.lang.Class<?> wildcardClass60 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray67 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float70 = calculadora62.calcularMedia(intArray67, (int) (byte) 10, (int) '4');
        float float73 = calculadora61.calcularMedia(intArray67, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora74 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass75 = calculadora74.getClass();
        int[] intArray76 = new int[] {};
        float float79 = calculadora74.calcularMedia(intArray76, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora80 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass81 = calculadora80.getClass();
        int[] intArray82 = new int[] {};
        float float85 = calculadora80.calcularMedia(intArray82, 100, 1);
        java.lang.Class<?> wildcardClass86 = intArray82.getClass();
        float float89 = calculadora74.calcularMedia(intArray82, 10, (int) 'a');
        java.lang.Class<?> wildcardClass90 = intArray82.getClass();
        float float93 = calculadora61.calcularMedia(intArray82, (int) (short) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass94 = intArray82.getClass();
        float float97 = calculadora0.calcularMedia(intArray82, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass98 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 10.0f + "'", float70 == 10.0f);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + (-1.0f) + "'", float73 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + float85 + "' != '" + (-1.0f) + "'", float85 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertEquals((float) float89, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertEquals((float) float93, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test469");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass5 = calculadora4.getClass();
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float12 = calculadora4.calcularMedia(intArray9, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray18 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float21 = calculadora13.calcularMedia(intArray18, (int) (byte) 10, (int) '4');
        float float24 = calculadora4.calcularMedia(intArray18, (int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass25 = intArray18.getClass();
        float float28 = calculadora0.calcularMedia(intArray18, (int) (short) 0, (int) (short) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora30 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray35 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float38 = calculadora30.calcularMedia(intArray35, (int) (byte) 10, (int) '4');
        float float41 = calculadora29.calcularMedia(intArray35, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora42 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass43 = calculadora42.getClass();
        int[] intArray47 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float50 = calculadora42.calcularMedia(intArray47, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass61 = calculadora60.getClass();
        int[] intArray62 = new int[] {};
        float float65 = calculadora60.calcularMedia(intArray62, 100, 1);
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        float float69 = calculadora51.calcularMedia(intArray62, 0, 10);
        float float72 = calculadora42.calcularMedia(intArray62, 10, (int) (short) 0);
        float float75 = calculadora29.calcularMedia(intArray62, (int) (short) 0, 10);
        java.lang.Class<?> wildcardClass76 = intArray62.getClass();
        java.lang.Class<?> wildcardClass77 = intArray62.getClass();
        java.lang.Class<?> wildcardClass78 = intArray62.getClass();
        float float81 = calculadora0.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        int[] intArray88 = new int[] { (short) 100, (byte) 0, 1, (byte) 0, (byte) 10, '4' };
        float float91 = calculadora0.calcularMedia(intArray88, (int) '4', (int) (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.0f + "'", float12 == 0.0f);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 10.0f + "'", float21 == 10.0f);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 5.5f + "'", float24 == 5.5f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 10.0f + "'", float38 == 10.0f);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + (-1.0f) + "'", float41 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + 0.0f + "'", float50 == 0.0f);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals((float) float69, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertEquals((float) float75, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals((float) float81, Float.NaN, 0);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test470");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        float float26 = calculadora14.calcularMedia(intArray20, 10, 0);
        float float29 = calculadora0.calcularMedia(intArray20, 100, (int) '#');
        java.lang.Class<?> wildcardClass30 = intArray20.getClass();
        java.lang.Class<?> wildcardClass31 = intArray20.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test471");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray28 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float31 = calculadora23.calcularMedia(intArray28, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        float float53 = calculadora23.calcularMedia(intArray43, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray59 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float62 = calculadora54.calcularMedia(intArray59, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass63 = intArray59.getClass();
        java.lang.Class<?> wildcardClass64 = intArray59.getClass();
        java.lang.Class<?> wildcardClass65 = intArray59.getClass();
        float float68 = calculadora23.calcularMedia(intArray59, (int) (byte) -1, (int) '#');
        float float71 = calculadora0.calcularMedia(intArray59, (int) (short) 100, 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 10.0f + "'", float62 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test472");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass11 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray17 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float20 = calculadora12.calcularMedia(intArray17, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass21 = calculadora12.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora12.calcularMedia(intArray33, (int) (byte) 10, (int) (short) 10);
        float float46 = calculadora0.calcularMedia(intArray33, 1, (int) 'a');
        java.lang.Class<?> wildcardClass47 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 0.0f + "'", float20 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test473");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        float float38 = calculadora0.calcularMedia(intArray30, (int) (byte) -1, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray47 = new int[] {};
        float float50 = calculadora45.calcularMedia(intArray47, 100, 1);
        java.lang.Class<?> wildcardClass51 = intArray47.getClass();
        float float54 = calculadora39.calcularMedia(intArray47, 10, (int) 'a');
        java.lang.Class<?> wildcardClass55 = intArray47.getClass();
        java.lang.Class<?> wildcardClass56 = intArray47.getClass();
        float float59 = calculadora0.calcularMedia(intArray47, 0, (int) '#');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray65 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float68 = calculadora60.calcularMedia(intArray65, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        java.lang.Class<?> wildcardClass70 = intArray65.getClass();
        java.lang.Class<?> wildcardClass71 = intArray65.getClass();
        java.lang.Class<?> wildcardClass72 = intArray65.getClass();
        float float75 = calculadora0.calcularMedia(intArray65, (int) (short) 0, 100);
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 10.0f + "'", float68 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + 36.0f + "'", float75 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test474");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass29 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass30 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora31.calcularMedia(intArray39, 10, (int) 'a');
        java.lang.Class<?> wildcardClass47 = intArray39.getClass();
        java.lang.Class<?> wildcardClass48 = intArray39.getClass();
        float float51 = calculadora0.calcularMedia(intArray39, (int) (byte) 1, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass53 = calculadora52.getClass();
        int[] intArray54 = new int[] {};
        float float57 = calculadora52.calcularMedia(intArray54, 100, 1);
        java.lang.Class<?> wildcardClass58 = intArray54.getClass();
        java.lang.Class<?> wildcardClass59 = intArray54.getClass();
        java.lang.Class<?> wildcardClass60 = intArray54.getClass();
        float float63 = calculadora0.calcularMedia(intArray54, (int) '#', (-1));
        java.lang.Class<?> wildcardClass64 = intArray54.getClass();
        java.lang.Class<?> wildcardClass65 = intArray54.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals((float) float51, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test475");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        int[] intArray16 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float19 = calculadora11.calcularMedia(intArray16, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass20 = calculadora11.getClass();
        int[] intArray21 = null;
        float float24 = calculadora11.calcularMedia(intArray21, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora11.calcularMedia(intArray31, 100, (int) '#');
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray46 = new int[] {};
        float float49 = calculadora44.calcularMedia(intArray46, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray52 = new int[] {};
        float float55 = calculadora50.calcularMedia(intArray52, 100, 1);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        float float59 = calculadora44.calcularMedia(intArray52, 10, (int) 'a');
        java.lang.Class<?> wildcardClass60 = intArray52.getClass();
        float float63 = calculadora0.calcularMedia(intArray52, (int) (byte) -1, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        java.lang.Class<?> wildcardClass71 = intArray66.getClass();
        float float74 = calculadora0.calcularMedia(intArray66, (int) (short) 1, (int) ' ');
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora76 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass77 = calculadora76.getClass();
        int[] intArray78 = new int[] {};
        float float81 = calculadora76.calcularMedia(intArray78, 100, 1);
        java.lang.Class<?> wildcardClass82 = intArray78.getClass();
        java.lang.Class<?> wildcardClass83 = intArray78.getClass();
        java.lang.Class<?> wildcardClass84 = intArray78.getClass();
        float float87 = calculadora0.calcularMedia(intArray78, (int) '4', 0);
        java.lang.Class<?> wildcardClass88 = intArray78.getClass();
        java.lang.Class<?> wildcardClass89 = intArray78.getClass();
        java.lang.Class<?> wildcardClass90 = intArray78.getClass();
        java.lang.Class<?> wildcardClass91 = intArray78.getClass();
        java.lang.Class<?> wildcardClass92 = intArray78.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + (-1.0f) + "'", float24 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + (-1.0f) + "'", float55 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals((float) float59, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals((float) float74, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test476");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        float float20 = calculadora0.calcularMedia(intArray14, (int) (byte) 1, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray26 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float29 = calculadora21.calcularMedia(intArray26, (int) (byte) 10, (int) '4');
        float float32 = calculadora0.calcularMedia(intArray26, 1, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float41 = calculadora33.calcularMedia(intArray38, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass42 = calculadora33.getClass();
        java.lang.Class<?> wildcardClass43 = calculadora33.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray50 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float53 = calculadora45.calcularMedia(intArray50, (int) (byte) 10, (int) '4');
        float float56 = calculadora44.calcularMedia(intArray50, 10, 0);
        float float59 = calculadora33.calcularMedia(intArray50, (-1), (int) (byte) 0);
        float float62 = calculadora0.calcularMedia(intArray50, (int) (byte) 0, (int) (short) -1);
        java.lang.Class<?> wildcardClass63 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass64 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass65 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass66 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 5.5f + "'", float20 == 5.5f);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 10.0f + "'", float29 == 10.0f);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 0.0f + "'", float41 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 10.0f + "'", float53 == 10.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test477");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        java.lang.Class<?> wildcardClass16 = intArray12.getClass();
        float float19 = calculadora1.calcularMedia(intArray12, 0, 10);
        float float22 = calculadora0.calcularMedia(intArray12, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora23 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass24 = calculadora23.getClass();
        int[] intArray25 = new int[] {};
        float float28 = calculadora23.calcularMedia(intArray25, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora23.calcularMedia(intArray31, 10, (int) 'a');
        java.lang.Class<?> wildcardClass39 = intArray31.getClass();
        float float42 = calculadora0.calcularMedia(intArray31, (int) (short) 100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass43 = intArray31.getClass();
        java.lang.Class<?> wildcardClass44 = intArray31.getClass();
        java.lang.Class<?> wildcardClass45 = intArray31.getClass();
        java.lang.Class<?> wildcardClass46 = intArray31.getClass();
        java.lang.Class<?> wildcardClass47 = intArray31.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals((float) float19, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + (-1.0f) + "'", float22 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-1.0f) + "'", float28 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test478");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        float float23 = calculadora5.calcularMedia(intArray16, 0, 10);
        float float26 = calculadora0.calcularMedia(intArray16, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass27 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        java.lang.Class<?> wildcardClass31 = calculadora29.getClass();
        java.lang.Class<?> wildcardClass32 = calculadora29.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray36 = new int[] {};
        float float39 = calculadora34.calcularMedia(intArray36, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora34.calcularMedia(intArray42, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass51 = calculadora50.getClass();
        int[] intArray55 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float58 = calculadora50.calcularMedia(intArray55, 0, (int) (short) 1);
        float float61 = calculadora34.calcularMedia(intArray55, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray67 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float70 = calculadora62.calcularMedia(intArray67, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass72 = calculadora71.getClass();
        int[] intArray73 = new int[] {};
        float float76 = calculadora71.calcularMedia(intArray73, 100, 1);
        java.lang.Class<?> wildcardClass77 = intArray73.getClass();
        float float80 = calculadora62.calcularMedia(intArray73, 0, 10);
        java.lang.Class<?> wildcardClass81 = intArray73.getClass();
        float float84 = calculadora34.calcularMedia(intArray73, 100, (int) '4');
        float float87 = calculadora33.calcularMedia(intArray73, (int) (short) 100, (int) (byte) -1);
        float float90 = calculadora29.calcularMedia(intArray73, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass91 = intArray73.getClass();
        java.lang.Class<?> wildcardClass92 = intArray73.getClass();
        float float95 = calculadora0.calcularMedia(intArray73, (int) (byte) 0, (int) (byte) 1);
        int[] intArray96 = null;
        float float99 = calculadora0.calcularMedia(intArray96, (int) (short) 100, 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals((float) float23, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals((float) float49, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 0.0f + "'", float58 == 0.0f);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 55.0f + "'", float61 == 55.0f);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 10.0f + "'", float70 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals((float) float80, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertEquals((float) float95, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float99 + "' != '" + (-1.0f) + "'", float99 == (-1.0f));
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test479");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray11 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float14 = calculadora6.calcularMedia(intArray11, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, (int) '#', 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray24 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float27 = calculadora19.calcularMedia(intArray24, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass29 = calculadora28.getClass();
        int[] intArray30 = new int[] {};
        float float33 = calculadora28.calcularMedia(intArray30, 100, 1);
        java.lang.Class<?> wildcardClass34 = intArray30.getClass();
        float float37 = calculadora19.calcularMedia(intArray30, 0, 10);
        java.lang.Class<?> wildcardClass38 = calculadora19.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray44 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float47 = calculadora39.calcularMedia(intArray44, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora48 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass49 = calculadora48.getClass();
        int[] intArray50 = new int[] {};
        float float53 = calculadora48.calcularMedia(intArray50, 100, 1);
        java.lang.Class<?> wildcardClass54 = intArray50.getClass();
        float float57 = calculadora39.calcularMedia(intArray50, 0, 10);
        float float60 = calculadora19.calcularMedia(intArray50, 0, (int) ' ');
        java.lang.Class<?> wildcardClass61 = calculadora19.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray64 = new int[] {};
        float float67 = calculadora62.calcularMedia(intArray64, 100, 1);
        java.lang.Class<?> wildcardClass68 = intArray64.getClass();
        float float71 = calculadora19.calcularMedia(intArray64, (int) (byte) 100, (int) (short) -1);
        java.lang.Class<?> wildcardClass72 = intArray64.getClass();
        float float75 = calculadora0.calcularMedia(intArray64, (-1), (int) 'a');
        java.lang.Class<?> wildcardClass76 = intArray64.getClass();
        java.lang.Class<?> wildcardClass77 = intArray64.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 100.0f + "'", float18 == 100.0f);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 10.0f + "'", float27 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + (-1.0f) + "'", float33 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals((float) float37, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 10.0f + "'", float47 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals((float) float57, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float60, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test480");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        int[] intArray10 = null;
        float float13 = calculadora0.calcularMedia(intArray10, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray20 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float23 = calculadora15.calcularMedia(intArray20, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora24 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass25 = calculadora24.getClass();
        int[] intArray26 = new int[] {};
        float float29 = calculadora24.calcularMedia(intArray26, 100, 1);
        java.lang.Class<?> wildcardClass30 = intArray26.getClass();
        float float33 = calculadora15.calcularMedia(intArray26, 0, 10);
        float float36 = calculadora14.calcularMedia(intArray26, (int) (short) -1, (-1));
        float float39 = calculadora0.calcularMedia(intArray26, (int) (short) -1, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora0.calcularMedia(intArray42, (int) (byte) 100, (int) (byte) 10);
        java.lang.Class<?> wildcardClass50 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass51 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass52 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass54 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 10.0f + "'", float23 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + (-1.0f) + "'", float29 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals((float) float33, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test481");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, (int) '#', 100);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora39 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass40 = calculadora39.getClass();
        int[] intArray41 = new int[] {};
        float float44 = calculadora39.calcularMedia(intArray41, 100, 1);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        float float48 = calculadora33.calcularMedia(intArray41, 10, (int) 'a');
        java.lang.Class<?> wildcardClass49 = intArray41.getClass();
        float float52 = calculadora0.calcularMedia(intArray41, (int) (byte) -1, (int) (byte) -1);
        java.lang.Class<?> wildcardClass53 = intArray41.getClass();
        java.lang.Class<?> wildcardClass54 = intArray41.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 100.0f + "'", float28 == 100.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 55.0f + "'", float31 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + (-1.0f) + "'", float44 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals((float) float48, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test482");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora21.calcularMedia(intArray31, 0, 100);
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 10, (int) (byte) -1);
        java.lang.Class<?> wildcardClass44 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass45 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass46 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass47 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass48 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass50 = calculadora49.getClass();
        java.lang.Class<?> wildcardClass51 = calculadora49.getClass();
        java.lang.Class<?> wildcardClass52 = calculadora49.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora49.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray59 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float62 = calculadora54.calcularMedia(intArray59, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora63 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass64 = calculadora63.getClass();
        int[] intArray65 = new int[] {};
        float float68 = calculadora63.calcularMedia(intArray65, 100, 1);
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        float float72 = calculadora54.calcularMedia(intArray65, 0, 10);
        float float75 = calculadora49.calcularMedia(intArray65, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass76 = intArray65.getClass();
        java.lang.Class<?> wildcardClass77 = intArray65.getClass();
        java.lang.Class<?> wildcardClass78 = intArray65.getClass();
        float float81 = calculadora0.calcularMedia(intArray65, (int) (short) 0, (int) (short) 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 36.0f + "'", float40 == 36.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 10.0f + "'", float62 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals((float) float72, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + (-1.0f) + "'", float75 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test483");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray12 = new int[] {};
        float float15 = calculadora10.calcularMedia(intArray12, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass25 = intArray21.getClass();
        float float28 = calculadora10.calcularMedia(intArray21, (int) '#', 100);
        float float31 = calculadora0.calcularMedia(intArray21, (int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass32 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass33 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass35 = calculadora34.getClass();
        int[] intArray39 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float42 = calculadora34.calcularMedia(intArray39, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        java.lang.Class<?> wildcardClass44 = intArray39.getClass();
        float float47 = calculadora0.calcularMedia(intArray39, (-1), (int) (short) 0);
        java.lang.Class<?> wildcardClass48 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass49 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 100.0f + "'", float28 == 100.0f);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 55.0f + "'", float31 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 0.0f + "'", float42 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test484");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray11 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float14 = calculadora6.calcularMedia(intArray11, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, (int) '#', 100);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass21 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass22 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 100.0f + "'", float18 == 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test485");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora28.calcularMedia(intArray39, 0, 10);
        java.lang.Class<?> wildcardClass47 = intArray39.getClass();
        float float50 = calculadora0.calcularMedia(intArray39, 100, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass52 = calculadora51.getClass();
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float59 = calculadora51.calcularMedia(intArray56, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass60 = calculadora51.getClass();
        int[] intArray61 = null;
        float float64 = calculadora51.calcularMedia(intArray61, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora65 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray71 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float74 = calculadora66.calcularMedia(intArray71, (int) (byte) 10, (int) '4');
        float float77 = calculadora65.calcularMedia(intArray71, 10, 0);
        float float80 = calculadora51.calcularMedia(intArray71, 100, (int) '#');
        float float83 = calculadora0.calcularMedia(intArray71, (int) '#', (int) (byte) 100);
        java.lang.Class<?> wildcardClass84 = calculadora0.getClass();
        int[] intArray85 = null;
        float float88 = calculadora0.calcularMedia(intArray85, (int) (byte) 1, (int) (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + (-1.0f) + "'", float50 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 0.0f + "'", float59 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + (-1.0f) + "'", float64 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 10.0f + "'", float74 == 10.0f);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + (-1.0f) + "'", float77 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + (-1.0f) + "'", float80 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 97.0f + "'", float83 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + (-1.0f) + "'", float88 == (-1.0f));
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test486");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        int[] intArray20 = null;
        float float23 = calculadora0.calcularMedia(intArray20, (int) '#', (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass27 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora35 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass36 = calculadora35.getClass();
        int[] intArray37 = new int[] {};
        float float40 = calculadora35.calcularMedia(intArray37, 100, 1);
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        float float44 = calculadora29.calcularMedia(intArray37, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora45 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass46 = calculadora45.getClass();
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float53 = calculadora45.calcularMedia(intArray50, 0, (int) (short) 1);
        float float56 = calculadora29.calcularMedia(intArray50, 10, (int) (short) 100);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass58 = calculadora57.getClass();
        int[] intArray59 = new int[] {};
        float float62 = calculadora57.calcularMedia(intArray59, 100, 1);
        java.lang.Class<?> wildcardClass63 = intArray59.getClass();
        java.lang.Class<?> wildcardClass64 = intArray59.getClass();
        float float67 = calculadora29.calcularMedia(intArray59, (int) (byte) -1, (int) (byte) -1);
        float float70 = calculadora0.calcularMedia(intArray59, 100, 0);
        java.lang.Class<?> wildcardClass71 = intArray59.getClass();
        java.lang.Class<?> wildcardClass72 = intArray59.getClass();
        java.lang.Class<?> wildcardClass73 = intArray59.getClass();
        java.lang.Class<?> wildcardClass74 = intArray59.getClass();
        java.lang.Class<?> wildcardClass75 = intArray59.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + (-1.0f) + "'", float40 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals((float) float44, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 55.0f + "'", float56 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test487");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora14 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass15 = calculadora14.getClass();
        int[] intArray16 = new int[] {};
        float float19 = calculadora14.calcularMedia(intArray16, 100, 1);
        java.lang.Class<?> wildcardClass20 = intArray16.getClass();
        float float23 = calculadora5.calcularMedia(intArray16, 0, 10);
        float float26 = calculadora4.calcularMedia(intArray16, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        int[] intArray29 = new int[] {};
        float float32 = calculadora27.calcularMedia(intArray29, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass34 = calculadora33.getClass();
        int[] intArray35 = new int[] {};
        float float38 = calculadora33.calcularMedia(intArray35, 100, 1);
        java.lang.Class<?> wildcardClass39 = intArray35.getClass();
        float float42 = calculadora27.calcularMedia(intArray35, 10, (int) 'a');
        java.lang.Class<?> wildcardClass43 = intArray35.getClass();
        float float46 = calculadora4.calcularMedia(intArray35, (int) (short) 100, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float55 = calculadora47.calcularMedia(intArray52, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass56 = calculadora47.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora57 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray62 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float65 = calculadora57.calcularMedia(intArray62, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora66 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass67 = calculadora66.getClass();
        int[] intArray68 = new int[] {};
        float float71 = calculadora66.calcularMedia(intArray68, 100, 1);
        java.lang.Class<?> wildcardClass72 = intArray68.getClass();
        float float75 = calculadora57.calcularMedia(intArray68, 0, 10);
        float float78 = calculadora47.calcularMedia(intArray68, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora79 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray84 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float87 = calculadora79.calcularMedia(intArray84, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass88 = intArray84.getClass();
        float float91 = calculadora47.calcularMedia(intArray84, (int) '#', 10);
        float float94 = calculadora4.calcularMedia(intArray84, (int) (short) 100, (int) (byte) 100);
        float float97 = calculadora0.calcularMedia(intArray84, (int) 'a', (int) (byte) 10);
        java.lang.Class<?> wildcardClass98 = intArray84.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals((float) float23, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals((float) float42, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 10.0f + "'", float65 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + (-1.0f) + "'", float71 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertEquals((float) float75, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + (-1.0f) + "'", float78 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + 10.0f + "'", float87 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + (-1.0f) + "'", float91 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + (-1.0f) + "'", float97 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test488");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) 0, 10);
        java.lang.Class<?> wildcardClass47 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass48 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test489");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass4 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass5 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora12 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass13 = calculadora12.getClass();
        int[] intArray14 = new int[] {};
        float float17 = calculadora12.calcularMedia(intArray14, 100, 1);
        java.lang.Class<?> wildcardClass18 = intArray14.getClass();
        float float21 = calculadora6.calcularMedia(intArray14, 10, (int) 'a');
        float float24 = calculadora0.calcularMedia(intArray14, (int) (byte) 0, (int) 'a');
        java.lang.Class<?> wildcardClass25 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass26 = calculadora0.getClass();
        int[] intArray27 = null;
        try {
            float float30 = calculadora0.calcularMedia(intArray27, 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + (-1.0f) + "'", float17 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals((float) float21, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float24, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test490");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora20.calcularMedia(intArray31, 0, 10);
        float float41 = calculadora0.calcularMedia(intArray31, 0, (int) ' ');
        java.lang.Class<?> wildcardClass42 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora43 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass44 = calculadora43.getClass();
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float51 = calculadora43.calcularMedia(intArray48, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass52 = intArray48.getClass();
        java.lang.Class<?> wildcardClass53 = intArray48.getClass();
        java.lang.Class<?> wildcardClass54 = intArray48.getClass();
        float float57 = calculadora0.calcularMedia(intArray48, 0, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass59 = calculadora58.getClass();
        int[] intArray63 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float66 = calculadora58.calcularMedia(intArray63, 0, (int) (short) 1);
        float float69 = calculadora0.calcularMedia(intArray63, (int) (byte) 100, (int) (byte) 0);
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float41, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 0.0f + "'", float66 == 0.0f);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test491");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        java.lang.Class<?> wildcardClass16 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora17 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass18 = calculadora17.getClass();
        int[] intArray22 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float25 = calculadora17.calcularMedia(intArray22, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass26 = calculadora17.getClass();
        int[] intArray27 = null;
        float float30 = calculadora17.calcularMedia(intArray27, (int) (short) 10, (int) (byte) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora41 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass42 = calculadora41.getClass();
        int[] intArray43 = new int[] {};
        float float46 = calculadora41.calcularMedia(intArray43, 100, 1);
        java.lang.Class<?> wildcardClass47 = intArray43.getClass();
        float float50 = calculadora32.calcularMedia(intArray43, 0, 10);
        float float53 = calculadora31.calcularMedia(intArray43, (int) (short) -1, (-1));
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora55 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray60 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float63 = calculadora55.calcularMedia(intArray60, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora64 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass65 = calculadora64.getClass();
        int[] intArray66 = new int[] {};
        float float69 = calculadora64.calcularMedia(intArray66, 100, 1);
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        float float73 = calculadora55.calcularMedia(intArray66, 0, 10);
        float float76 = calculadora54.calcularMedia(intArray66, (int) (short) -1, (-1));
        float float79 = calculadora31.calcularMedia(intArray66, (int) (byte) -1, (int) 'a');
        float float82 = calculadora17.calcularMedia(intArray66, (int) ' ', 10);
        java.lang.Class<?> wildcardClass83 = intArray66.getClass();
        java.lang.Class<?> wildcardClass84 = intArray66.getClass();
        float float87 = calculadora0.calcularMedia(intArray66, (int) (byte) 1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass89 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 0.0f + "'", float25 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals((float) float50, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + (-1.0f) + "'", float53 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 10.0f + "'", float63 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals((float) float73, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + (-1.0f) + "'", float76 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + (-1.0f) + "'", float82 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + (-1.0f) + "'", float87 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test492");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora10 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass11 = calculadora10.getClass();
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float18 = calculadora10.calcularMedia(intArray15, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass19 = calculadora10.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora20 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray25 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float28 = calculadora20.calcularMedia(intArray25, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        int[] intArray31 = new int[] {};
        float float34 = calculadora29.calcularMedia(intArray31, 100, 1);
        java.lang.Class<?> wildcardClass35 = intArray31.getClass();
        float float38 = calculadora20.calcularMedia(intArray31, 0, 10);
        float float41 = calculadora10.calcularMedia(intArray31, (int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass42 = calculadora10.getClass();
        java.lang.Class<?> wildcardClass43 = calculadora10.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray49 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float52 = calculadora44.calcularMedia(intArray49, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass53 = intArray49.getClass();
        java.lang.Class<?> wildcardClass54 = intArray49.getClass();
        java.lang.Class<?> wildcardClass55 = intArray49.getClass();
        java.lang.Class<?> wildcardClass56 = intArray49.getClass();
        float float59 = calculadora10.calcularMedia(intArray49, (int) 'a', (int) (short) 100);
        java.lang.Class<?> wildcardClass60 = calculadora10.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora61 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray66 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float69 = calculadora61.calcularMedia(intArray66, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass70 = intArray66.getClass();
        java.lang.Class<?> wildcardClass71 = intArray66.getClass();
        java.lang.Class<?> wildcardClass72 = intArray66.getClass();
        java.lang.Class<?> wildcardClass73 = intArray66.getClass();
        float float76 = calculadora10.calcularMedia(intArray66, 0, (int) ' ');
        float float79 = calculadora0.calcularMedia(intArray66, (int) ' ', 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 0.0f + "'", float18 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 10.0f + "'", float28 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals((float) float38, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + (-1.0f) + "'", float41 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 10.0f + "'", float52 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 97.0f + "'", float59 == 97.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 10.0f + "'", float69 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 5.5f + "'", float76 == 5.5f);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test493");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray14 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float17 = calculadora9.calcularMedia(intArray14, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora18 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass19 = calculadora18.getClass();
        int[] intArray20 = new int[] {};
        float float23 = calculadora18.calcularMedia(intArray20, 100, 1);
        java.lang.Class<?> wildcardClass24 = intArray20.getClass();
        float float27 = calculadora9.calcularMedia(intArray20, 0, 10);
        float float30 = calculadora0.calcularMedia(intArray20, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray37 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float40 = calculadora32.calcularMedia(intArray37, (int) (byte) 10, (int) '4');
        float float43 = calculadora31.calcularMedia(intArray37, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float52 = calculadora44.calcularMedia(intArray49, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora62 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass63 = calculadora62.getClass();
        int[] intArray64 = new int[] {};
        float float67 = calculadora62.calcularMedia(intArray64, 100, 1);
        java.lang.Class<?> wildcardClass68 = intArray64.getClass();
        float float71 = calculadora53.calcularMedia(intArray64, 0, 10);
        float float74 = calculadora44.calcularMedia(intArray64, 10, (int) (short) 0);
        float float77 = calculadora31.calcularMedia(intArray64, (int) (short) 0, 10);
        float float80 = calculadora0.calcularMedia(intArray64, (int) '4', (int) (byte) 100);
        java.lang.Class<?> wildcardClass81 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass82 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora83 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass84 = calculadora83.getClass();
        int[] intArray88 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float91 = calculadora83.calcularMedia(intArray88, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass92 = intArray88.getClass();
        java.lang.Class<?> wildcardClass93 = intArray88.getClass();
        float float96 = calculadora0.calcularMedia(intArray88, (int) (short) 0, (-1));
        java.lang.Class<?> wildcardClass97 = intArray88.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + (-1.0f) + "'", float23 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals((float) float27, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + (-1.0f) + "'", float30 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 10.0f + "'", float40 == 10.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 0.0f + "'", float52 == 0.0f);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + float67 + "' != '" + (-1.0f) + "'", float67 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals((float) float71, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertEquals((float) float77, Float.NaN, 0);
        org.junit.Assert.assertEquals((float) float80, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + 0.0f + "'", float91 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + (-1.0f) + "'", float96 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test494");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray5 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float8 = calculadora0.calcularMedia(intArray5, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass10 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora11 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass12 = calculadora11.getClass();
        java.lang.Class<?> wildcardClass13 = calculadora11.getClass();
        java.lang.Class<?> wildcardClass14 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora15 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray21 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float24 = calculadora16.calcularMedia(intArray21, (int) (byte) 10, (int) '4');
        float float27 = calculadora15.calcularMedia(intArray21, 10, 0);
        float float30 = calculadora11.calcularMedia(intArray21, 0, 100);
        java.lang.Class<?> wildcardClass31 = calculadora11.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora32 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass33 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass34 = calculadora32.getClass();
        java.lang.Class<?> wildcardClass35 = calculadora32.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora36 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray42 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float45 = calculadora37.calcularMedia(intArray42, (int) (byte) 10, (int) '4');
        float float48 = calculadora36.calcularMedia(intArray42, 10, 0);
        float float51 = calculadora32.calcularMedia(intArray42, 0, 100);
        float float54 = calculadora11.calcularMedia(intArray42, (int) (short) 10, (int) (byte) -1);
        float float57 = calculadora0.calcularMedia(intArray42, (int) (byte) 100, (int) '#');
        java.lang.Class<?> wildcardClass58 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass59 = calculadora0.getClass();
        int[] intArray60 = null;
        float float63 = calculadora0.calcularMedia(intArray60, (int) (short) 100, 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 10.0f + "'", float24 == 10.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + (-1.0f) + "'", float27 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 36.0f + "'", float30 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 10.0f + "'", float45 == 10.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + (-1.0f) + "'", float48 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 36.0f + "'", float51 == 36.0f);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + (-1.0f) + "'", float54 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + (-1.0f) + "'", float57 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test495");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora1 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray6 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float9 = calculadora1.calcularMedia(intArray6, (int) (byte) 10, (int) '4');
        float float12 = calculadora0.calcularMedia(intArray6, 10, 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora13 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass14 = calculadora13.getClass();
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float21 = calculadora13.calcularMedia(intArray18, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora22 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray27 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float30 = calculadora22.calcularMedia(intArray27, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass32 = calculadora31.getClass();
        int[] intArray33 = new int[] {};
        float float36 = calculadora31.calcularMedia(intArray33, 100, 1);
        java.lang.Class<?> wildcardClass37 = intArray33.getClass();
        float float40 = calculadora22.calcularMedia(intArray33, 0, 10);
        float float43 = calculadora13.calcularMedia(intArray33, 10, (int) (short) 0);
        float float46 = calculadora0.calcularMedia(intArray33, (int) (short) 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora47 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass48 = calculadora47.getClass();
        java.lang.Class<?> wildcardClass49 = calculadora47.getClass();
        java.lang.Class<?> wildcardClass50 = calculadora47.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora52 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray57 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float60 = calculadora52.calcularMedia(intArray57, (int) (byte) 10, (int) '4');
        float float63 = calculadora51.calcularMedia(intArray57, 10, 0);
        float float66 = calculadora47.calcularMedia(intArray57, 0, 100);
        java.lang.Class<?> wildcardClass67 = calculadora47.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora68 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass69 = calculadora68.getClass();
        java.lang.Class<?> wildcardClass70 = calculadora68.getClass();
        java.lang.Class<?> wildcardClass71 = calculadora68.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora73 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray78 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float81 = calculadora73.calcularMedia(intArray78, (int) (byte) 10, (int) '4');
        float float84 = calculadora72.calcularMedia(intArray78, 10, 0);
        float float87 = calculadora68.calcularMedia(intArray78, 0, 100);
        float float90 = calculadora47.calcularMedia(intArray78, (int) (short) 10, (int) (byte) -1);
        java.lang.Class<?> wildcardClass91 = intArray78.getClass();
        float float94 = calculadora0.calcularMedia(intArray78, (int) (byte) 10, (int) (byte) -1);
        java.lang.Class<?> wildcardClass95 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.0f + "'", float21 == 0.0f);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 10.0f + "'", float30 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + (-1.0f) + "'", float36 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals((float) float40, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 10.0f + "'", float60 == 10.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 36.0f + "'", float66 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + 10.0f + "'", float81 == 10.0f);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + (-1.0f) + "'", float84 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float87 + "' != '" + 36.0f + "'", float87 == 36.0f);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + (-1.0f) + "'", float90 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + float94 + "' != '" + (-1.0f) + "'", float94 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test496");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass2 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass3 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora4 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora5 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray10 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float13 = calculadora5.calcularMedia(intArray10, (int) (byte) 10, (int) '4');
        float float16 = calculadora4.calcularMedia(intArray10, 10, 0);
        float float19 = calculadora0.calcularMedia(intArray10, 0, 100);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass23 = calculadora21.getClass();
        java.lang.Class<?> wildcardClass24 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora25 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora26 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray31 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float34 = calculadora26.calcularMedia(intArray31, (int) (byte) 10, (int) '4');
        float float37 = calculadora25.calcularMedia(intArray31, 10, 0);
        float float40 = calculadora21.calcularMedia(intArray31, 0, 100);
        float float43 = calculadora0.calcularMedia(intArray31, (int) (short) 10, (int) (byte) -1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora44 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass45 = calculadora44.getClass();
        java.lang.Class<?> wildcardClass46 = calculadora44.getClass();
        java.lang.Class<?> wildcardClass47 = calculadora44.getClass();
        java.lang.Class<?> wildcardClass48 = calculadora44.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora49 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray54 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float57 = calculadora49.calcularMedia(intArray54, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora58 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass59 = calculadora58.getClass();
        int[] intArray60 = new int[] {};
        float float63 = calculadora58.calcularMedia(intArray60, 100, 1);
        java.lang.Class<?> wildcardClass64 = intArray60.getClass();
        float float67 = calculadora49.calcularMedia(intArray60, 0, 10);
        float float70 = calculadora44.calcularMedia(intArray60, (int) 'a', (int) ' ');
        java.lang.Class<?> wildcardClass71 = intArray60.getClass();
        float float74 = calculadora0.calcularMedia(intArray60, (int) (short) -1, (int) '#');
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass76 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass77 = calculadora0.getClass();
        int[] intArray78 = null;
        float float81 = calculadora0.calcularMedia(intArray78, (int) ' ', (int) (short) -1);
        java.lang.Class<?> wildcardClass82 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 10.0f + "'", float13 == 10.0f);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 36.0f + "'", float19 == 36.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 10.0f + "'", float34 == 10.0f);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 36.0f + "'", float40 == 36.0f);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + (-1.0f) + "'", float43 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 10.0f + "'", float57 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + (-1.0f) + "'", float63 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals((float) float67, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + (-1.0f) + "'", float70 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + (-1.0f) + "'", float81 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test497");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        java.lang.Class<?> wildcardClass19 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float29 = calculadora21.calcularMedia(intArray26, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass30 = calculadora21.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora31 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray36 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float39 = calculadora31.calcularMedia(intArray36, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora40 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass41 = calculadora40.getClass();
        int[] intArray42 = new int[] {};
        float float45 = calculadora40.calcularMedia(intArray42, 100, 1);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        float float49 = calculadora31.calcularMedia(intArray42, 0, 10);
        float float52 = calculadora21.calcularMedia(intArray42, (int) (byte) 10, (int) (short) 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora53 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray58 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float61 = calculadora53.calcularMedia(intArray58, (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass62 = intArray58.getClass();
        float float65 = calculadora21.calcularMedia(intArray58, (int) '#', 10);
        float float68 = calculadora0.calcularMedia(intArray58, (int) (short) 100, 1);
        java.lang.Class<?> wildcardClass69 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora71 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora72 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray77 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float80 = calculadora72.calcularMedia(intArray77, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora81 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass82 = calculadora81.getClass();
        int[] intArray83 = new int[] {};
        float float86 = calculadora81.calcularMedia(intArray83, 100, 1);
        java.lang.Class<?> wildcardClass87 = intArray83.getClass();
        float float90 = calculadora72.calcularMedia(intArray83, 0, 10);
        float float93 = calculadora71.calcularMedia(intArray83, (int) (short) -1, (-1));
        float float96 = calculadora0.calcularMedia(intArray83, (int) (short) 10, (-1));
        java.lang.Class<?> wildcardClass97 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 10.0f + "'", float39 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals((float) float49, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + (-1.0f) + "'", float52 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 10.0f + "'", float61 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + (-1.0f) + "'", float68 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 10.0f + "'", float80 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + float86 + "' != '" + (-1.0f) + "'", float86 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals((float) float90, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + (-1.0f) + "'", float93 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + (-1.0f) + "'", float96 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test498");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        java.lang.Class<?> wildcardClass16 = intArray11.getClass();
        float float19 = calculadora0.calcularMedia(intArray11, (int) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass20 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora21 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass22 = calculadora21.getClass();
        int[] intArray23 = new int[] {};
        float float26 = calculadora21.calcularMedia(intArray23, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora27 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass28 = calculadora27.getClass();
        int[] intArray29 = new int[] {};
        float float32 = calculadora27.calcularMedia(intArray29, 100, 1);
        java.lang.Class<?> wildcardClass33 = intArray29.getClass();
        float float36 = calculadora21.calcularMedia(intArray29, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray42 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float45 = calculadora37.calcularMedia(intArray42, 0, (int) (short) 1);
        float float48 = calculadora21.calcularMedia(intArray42, 10, (int) (short) 100);
        float float51 = calculadora0.calcularMedia(intArray42, (int) ' ', (int) (byte) 10);
        java.lang.Class<?> wildcardClass52 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass53 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora54 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass55 = calculadora54.getClass();
        int[] intArray56 = new int[] {};
        float float59 = calculadora54.calcularMedia(intArray56, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora60 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass61 = calculadora60.getClass();
        int[] intArray62 = new int[] {};
        float float65 = calculadora60.calcularMedia(intArray62, 100, 1);
        java.lang.Class<?> wildcardClass66 = intArray62.getClass();
        float float69 = calculadora54.calcularMedia(intArray62, 10, (int) 'a');
        float float72 = calculadora0.calcularMedia(intArray62, (int) (byte) -1, 0);
        java.lang.Class<?> wildcardClass73 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + (-1.0f) + "'", float19 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + (-1.0f) + "'", float26 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + (-1.0f) + "'", float32 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals((float) float36, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 0.0f + "'", float45 == 0.0f);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 55.0f + "'", float48 == 55.0f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + (-1.0f) + "'", float59 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals((float) float69, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + (-1.0f) + "'", float72 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test499");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass1 = calculadora0.getClass();
        int[] intArray2 = new int[] {};
        float float5 = calculadora0.calcularMedia(intArray2, 100, 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora6 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass7 = calculadora6.getClass();
        int[] intArray8 = new int[] {};
        float float11 = calculadora6.calcularMedia(intArray8, 100, 1);
        java.lang.Class<?> wildcardClass12 = intArray8.getClass();
        float float15 = calculadora0.calcularMedia(intArray8, 10, (int) 'a');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora16 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass17 = calculadora16.getClass();
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float24 = calculadora16.calcularMedia(intArray21, 0, (int) (short) 1);
        float float27 = calculadora0.calcularMedia(intArray21, 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass28 = calculadora0.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora29 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass30 = calculadora29.getClass();
        java.lang.Class<?> wildcardClass31 = calculadora29.getClass();
        java.lang.Class<?> wildcardClass32 = calculadora29.getClass();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora33 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora34 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray39 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float42 = calculadora34.calcularMedia(intArray39, (int) (byte) 10, (int) '4');
        float float45 = calculadora33.calcularMedia(intArray39, 10, 0);
        float float48 = calculadora29.calcularMedia(intArray39, 0, 100);
        float float51 = calculadora0.calcularMedia(intArray39, (int) (byte) -1, (int) (short) -1);
        java.lang.Class<?> wildcardClass52 = calculadora0.getClass();
        int[] intArray53 = null;
        float float56 = calculadora0.calcularMedia(intArray53, 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass57 = calculadora0.getClass();
        java.lang.Class<?> wildcardClass58 = calculadora0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-1.0f) + "'", float5 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals((float) float15, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 55.0f + "'", float27 == 55.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 10.0f + "'", float42 == 10.0f);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + (-1.0f) + "'", float45 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 36.0f + "'", float48 == 36.0f);
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + (-1.0f) + "'", float51 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + (-1.0f) + "'", float56 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test500");
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora0 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray5 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float8 = calculadora0.calcularMedia(intArray5, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora9 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass10 = calculadora9.getClass();
        int[] intArray11 = new int[] {};
        float float14 = calculadora9.calcularMedia(intArray11, 100, 1);
        java.lang.Class<?> wildcardClass15 = intArray11.getClass();
        float float18 = calculadora0.calcularMedia(intArray11, 0, 10);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora19 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass20 = calculadora19.getClass();
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        float float27 = calculadora19.calcularMedia(intArray24, 0, (int) (short) 1);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora28 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray33 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float36 = calculadora28.calcularMedia(intArray33, (int) (byte) 10, (int) '4');
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora37 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        java.lang.Class<?> wildcardClass38 = calculadora37.getClass();
        int[] intArray39 = new int[] {};
        float float42 = calculadora37.calcularMedia(intArray39, 100, 1);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        float float46 = calculadora28.calcularMedia(intArray39, 0, 10);
        float float49 = calculadora19.calcularMedia(intArray39, 10, (int) (short) 0);
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora50 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        com.github.andreendo.testgenerationexamples.ex2.Calculadora calculadora51 = new com.github.andreendo.testgenerationexamples.ex2.Calculadora();
        int[] intArray56 = new int[] { (short) 1, (short) 10, (-1), 'a' };
        float float59 = calculadora51.calcularMedia(intArray56, (int) (byte) 10, (int) '4');
        float float62 = calculadora50.calcularMedia(intArray56, 10, 0);
        float float65 = calculadora19.calcularMedia(intArray56, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass66 = intArray56.getClass();
        float float69 = calculadora0.calcularMedia(intArray56, (int) '4', (int) (short) -1);
        java.lang.Class<?> wildcardClass70 = calculadora0.getClass();
        int[] intArray71 = null;
        float float74 = calculadora0.calcularMedia(intArray71, (int) (byte) -1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass75 = calculadora0.getClass();
        int[] intArray76 = null;
        float float79 = calculadora0.calcularMedia(intArray76, (int) (short) -1, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 10.0f + "'", float8 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals((float) float18, Float.NaN, 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 10.0f + "'", float36 == 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals((float) float46, Float.NaN, 0);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + (-1.0f) + "'", float49 == (-1.0f));
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 10.0f + "'", float59 == 10.0f);
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + (-1.0f) + "'", float62 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + (-1.0f) + "'", float65 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + (-1.0f) + "'", float69 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + (-1.0f) + "'", float74 == (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + (-1.0f) + "'", float79 == (-1.0f));
    }
}

